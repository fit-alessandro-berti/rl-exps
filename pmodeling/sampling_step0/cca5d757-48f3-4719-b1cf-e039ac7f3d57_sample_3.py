import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
from pm4py.objects.petri_net.obj import PetriNet, Marking

site_assess = Transition(label='Site Assess')
load_testing = Transition(label='Load Testing')
climate_study = Transition(label='Climate Study')
medium_prep = Transition(label='Medium Prep')
bed_install = Transition(label='Bed Install')
irrigation_setup = Transition(label='Irrigation Setup')
crop_select = Transition(label='Crop Select')
pest_control = Transition(label='Pest Control')
community_meet = Transition(label='Community Meet')
monitor_deploy = Transition(label='Monitor Deploy')
waste_cycle = Transition(label='Waste Cycle')
yield_forecast = Transition(label='Yield Forecast')
market_link = Transition(label='Market Link')
workshop_plan = Transition(label='Workshop Plan')
tech_integrate = Transition(label='Tech Integrate')
skip = SilentTransition()

xor1 = OperatorPOWL(operator=Operator.XOR, children=[pest_control, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[community_meet, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[workshop_plan, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[tech_integrate, skip])

loop1 = OperatorPOWL(operator=Operator.LOOP, children=[medium_prep, bed_install, irrigation_setup])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[crop_select, xor1])
loop3 = OperatorPOWL(operator=Operator.LOOP, children=[pest_control, xor2])
loop4 = OperatorPOWL(operator=Operator.LOOP, children=[community_meet, xor3])
loop5 = OperatorPOWL(operator=Operator.LOOP, children=[workshop_plan, xor4])
loop6 = OperatorPOWL(operator=Operator.LOOP, children=[tech_integrate, skip])

root = StrictPartialOrder(nodes=[site_assess, load_testing, climate_study, loop1, loop2, loop3, loop4, loop5, loop6, xor2, xor3, xor4, market_link, yield_forecast, monitor_deploy, waste_cycle, medium_prep, bed_install, irrigation_setup, crop_select, pest_control, community_meet, workshop_plan, tech_integrate])
root.order.add_edge(site_assess, load_testing)
root.order.add_edge(load_testing, climate_study)
root.order.add_edge(climate_study, medium_prep)
root.order.add_edge(medium_prep, bed_install)
root.order.add_edge(bed_install, irrigation_setup)
root.order.add_edge(irrigation_setup, crop_select)
root.order.add_edge(crop_select, xor1)
root.order.add_edge(xor1, loop2)
root.order.add_edge(pest_control, xor2)
root.order.add_edge(xor2, loop3)
root.order.add_edge(community_meet, xor3)
root.order.add_edge(xor3, loop4)
root.order.add_edge(workshop_plan, xor4)
root.order.add_edge(xor4, loop5)
root.order.add_edge(tech_integrate, loop6)
root.order.add_edge(loop2, market_link)
root.order.add_edge(loop3, yield_forecast)
root.order.add_edge(loop4, monitor_deploy)
root.order.add_edge(loop5, waste_cycle)
root.order.add_edge(loop6, medium_prep)
root.order.add_edge(loop6, bed_install)
root.order.add_edge(loop6, irrigation_setup)
root.order.add_edge(loop6, crop_select)
root.order.add_edge(loop6, pest_control)
root.order.add_edge(loop6, community_meet)
root.order.add_edge(loop6, workshop_plan)
root.order.add_edge(loop6, tech_integrate)
root.order.add_edge(loop2, loop3)
root.order.add_edge(loop2, loop4)
root.order.add_edge(loop2, loop5)
root.order.add_edge(loop2, loop6)
root.order.add_edge(loop3, loop4)
root.order.add_edge(loop3, loop5)
root.order.add_edge(loop3, loop6)
root.order.add_edge(loop4, loop5)
root.order.add_edge(loop4, loop6)
root.order.add_edge(loop5, loop6)