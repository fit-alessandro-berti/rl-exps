import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
seed_select = Transition(label='Seed Select')
nutrient_mix = Transition(label='Nutrient Mix')
climate_setup = Transition(label='Climate Setup')
light_adjust = Transition(label='Light Adjust')
co2_control = Transition(label='CO2 Control')
humidity_tune = Transition(label='Humidity Tune')
growth_monitor = Transition(label='Growth Monitor')
pest_detect = Transition(label='Pest Detect')
harvest_plan = Transition(label='Harvest Plan')
produce_sort = Transition(label='Produce Sort')
pack_biodeg = Transition(label='Pack Biodeg')
drone_dispatch = Transition(label='Drone Dispatch')
waste_recycle = Transition(label='Waste Recycle')
compost_create = Transition(label='Compost Create')
cycle_review = Transition(label='Cycle Review')
skip = SilentTransition()
seed_select_to_nutrient_mix = OperatorPOWL(operator=Operator.XOR, children=[seed_select, skip])
nutrient_mix_to_climate_setup = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, skip])
climate_setup_to_light_adjust = OperatorPOWL(operator=Operator.XOR, children=[climate_setup, skip])
light_adjust_to_co2_control = OperatorPOWL(operator=Operator.XOR, children=[light_adjust, skip])
co2_control_to_humidity_tune = OperatorPOWL(operator=Operator.XOR, children=[co2_control, skip])
humidity_tune_to_growth_monitor = OperatorPOWL(operator=Operator.XOR, children=[humidity_tune, skip])
growth_monitor_to_pest_detect = OperatorPOWL(operator=Operator.XOR, children=[growth_monitor, skip])
pest_detect_to_harvest_plan = OperatorPOWL(operator=Operator.XOR, children=[pest_detect, skip])
harvest_plan_to_produce_sort = OperatorPOWL(operator=Operator.XOR, children=[harvest_plan, skip])
produce_sort_to_pack_biodeg = OperatorPOWL(operator=Operator.XOR, children=[produce_sort, skip])
pack_biodeg_to_drone_dispatch = OperatorPOWL(operator=Operator.XOR, children=[pack_biodeg, skip])
drone_dispatch_to_waste_recycle = OperatorPOWL(operator=Operator.XOR, children=[drone_dispatch, skip])
waste_recycle_to_compost_create = OperatorPOWL(operator=Operator.XOR, children=[waste_recycle, skip])
compost_create_to_cycle_review = OperatorPOWL(operator=Operator.XOR, children=[compost_create, skip])
loop1 = OperatorPOWL(operator=Operator.LOOP, children=[seed_select_to_nutrient_mix, nutrient_mix_to_climate_setup, climate_setup_to_light_adjust, light_adjust_to_co2_control, co2_control_to_humidity_tune, humidity_tune_to_growth_monitor, growth_monitor_to_pest_detect, pest_detect_to_harvest_plan, harvest_plan_to_produce_sort, produce_sort_to_pack_biodeg, pack_biodeg_to_drone_dispatch, drone_dispatch_to_waste_recycle, waste_recycle_to_compost_create, compost_create_to_cycle_review])
root = StrictPartialOrder(nodes=[loop1])
root.order.add_edge(seed_select_to_nutrient_mix, nutrient_mix_to_climate_setup)
root.order.add_edge(nutrient_mix_to_climate_setup, climate_setup_to_light_adjust)
root.order.add_edge(climate_setup_to_light_adjust, light_adjust_to_co2_control)
root.order.add_edge(light_adjust_to_co2_control, co2_control_to_humidity_tune)
root.order.add_edge(co2_control_to_humidity_tune, humidity_tune_to_growth_monitor)
root.order.add_edge(humidity_tune_to_growth_monitor, growth_monitor_to_pest_detect)
root.order.add_edge(growth_monitor_to_pest_detect, pest_detect_to_harvest_plan)
root.order.add_edge(pest_detect_to_harvest_plan, harvest_plan_to_produce_sort)
root.order.add_edge(harvest_plan_to_produce_sort, produce_sort_to_pack_biodeg)
root.order.add_edge(produce_sort_to_pack_biodeg, pack_biodeg_to_drone_dispatch)
root.order.add_edge(pack_biodeg_to_drone_dispatch, drone_dispatch_to_waste_recycle)
root.order.add_edge(drone_dispatch_to_waste_recycle, waste_recycle_to_compost_create)
root.order.add_edge(waste_recycle_to_compost_create, compost_create_to_cycle_review)
root.order.add_edge(compost_create_to_cycle_review, seed_select_to_nutrient_mix)