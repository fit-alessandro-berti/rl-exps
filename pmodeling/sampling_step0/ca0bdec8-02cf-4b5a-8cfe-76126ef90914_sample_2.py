import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
A = Transition(label='Milk Sourcing')
B = Transition(label='Quality Testing')
C = Transition(label='Culture Prep')
D = Transition(label='Milk Pasteurize')
E = Transition(label='Curd Cutting')
F = Transition(label='Whey Draining')
G = Transition(label='Molding Cheese')
H = Transition(label='Pressing Blocks')
I = Transition(label='Salting Process')
J = Transition(label='Aging Monitoring')
K = Transition(label='Flavor Profiling')
L = Transition(label='Packaging Design')
M = Transition(label='Compliance Check')
N = Transition(label='Market Research')
O = Transition(label='Direct Shipping')
P = Transition(label='Customer Feedback')
Q = Transition(label='Recipe Adjust')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[A, B])
xor = OperatorPOWL(operator=Operator.XOR, children=[C, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[D, E])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[F, G])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[H, I])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[J, K])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[L, M])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[N, O])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[P, Q])
root = StrictPartialOrder(nodes=[loop, xor, xor2, xor3, xor4, xor5, xor6, xor7, xor8])
root.order.add_edge(loop, xor)
root.order.add_edge(xor, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor6, xor7)
root.order.add_edge(xor7, xor8)
root.order.add_edge(xor8, loop)