from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition

# Define the activities
A = Transition(label='Alert Trigger')
B = Transition(label='Initial Assess')
C = Transition(label='Stakeholder Notify')
D = Transition(label='Resource Check')
E = Transition(label='Risk Analyze')
F = Transition(label='Command Setup')
G = Transition(label='Deploy Teams')
H = Transition(label='Data Collect')
I = Transition(label='Situation Update')
J = Transition(label='Priority Adjust')
K = Transition(label='External Liaison')
L = Transition(label='Supply Dispatch')
M = Transition(label='Media Brief')
N = Transition(label='Impact Review')
O = Transition(label='Recovery Plan')
P = Transition(label='Process Audit')
Q = Transition(label='Alert Trigger')
R = Transition(label='Initial Assess')
S = Transition(label='Stakeholder Notify')
T = Transition(label='Resource Check')
U = Transition(label='Risk Analyze')
V = Transition(label='Command Setup')
W = Transition(label='Deploy Teams')
X = Transition(label='Data Collect')
Y = Transition(label='Situation Update')
Z = Transition(label='Priority Adjust')
AA = Transition(label='External Liaison')
AB = Transition(label='Supply Dispatch')
AC = Transition(label='Media Brief')
AD = Transition(label='Impact Review')
AE = Transition(label='Recovery Plan')
AF = Transition(label='Process Audit')

# Define the partial order
root = StrictPartialOrder(nodes=[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, AA, AB, AC, AD, AE, AF])
root.order.add_edge(A, B)
root.order.add_edge(A, C)
root.order.add_edge(A, D)
root.order.add_edge(A, E)
root.order.add_edge(A, F)
root.order.add_edge(A, G)
root.order.add_edge(A, H)
root.order.add_edge(A, I)
root.order.add_edge(A, J)
root.order.add_edge(A, K)
root.order.add_edge(A, L)
root.order.add_edge(A, M)
root.order.add_edge(A, N)
root.order.add_edge(A, O)
root.order.add_edge(A, P)
root.order.add_edge(A, Q)
root.order.add_edge(A, R)
root.order.add_edge(A, S)
root.order.add_edge(A, T)
root.order.add_edge(A, U)
root.order.add_edge(A, V)
root.order.add_edge(A, W)
root.order.add_edge(A, X)
root.order.add_edge(A, Y)
root.order.add_edge(A, Z)
root.order.add_edge(A, AA)
root.order.add_edge(A, AB)
root.order.add_edge(A, AC)
root.order.add_edge(A, AD)
root.order.add_edge(A, AE)
root.order.add_edge(A, AF)

root.order.add_edge(B, C)
root.order.add_edge(B, D)
root.order.add_edge(B, E)
root.order.add_edge(B, F)
root.order.add_edge(B, G)
root.order.add_edge(B, H)
root.order.add_edge(B, I)
root.order.add_edge(B, J)
root.order.add_edge(B, K)
root.order.add_edge(B, L)
root.order.add_edge(B, M)
root.order.add_edge(B, N)
root.order.add_edge(B, O)
root.order.add_edge(B, P)
root.order.add_edge(B, Q)
root.order.add_edge(B, R)
root.order.add_edge(B, S)
root.order.add_edge(B, T)
root.order.add_edge(B, U)
root.order.add_edge(B, V)
root.order.add_edge(B, W)
root.order.add_edge(B, X)
root.order.add_edge(B, Y)
root.order.add_edge(B, Z)
root.order.add_edge(B, AA)
root.order.add_edge(B, AB)
root.order.add_edge(B, AC)
root.order.add_edge(B, AD)
root.order.add_edge(B, AE)
root.order.add_edge(B, AF)

root.order.add_edge(C, D)
root.order.add_edge(C, E)
root.order.add_edge(C, F)
root.order.add_edge(C, G)
root.order.add_edge(C, H)
root.order.add_edge(C, I)
root.order.add_edge(C, J)
root.order.add_edge(C, K)
root.order.add_edge(C, L)
root.order.add_edge(C, M)
root.order.add_edge(C, N)
root.order.add_edge(C, O)
root.order.add_edge(C, P)
root.order.add_edge(C, Q)
root.order.add_edge(C, R)
root.order.add_edge(C, S)
root.order.add_edge(C, T)
root.order.add_edge(C, U)
root.order.add_edge(C, V)
root.order.add_edge(C, W)
root.order.add_edge(C, X)
root.order.add_edge(C, Y)
root.order.add_edge(C, Z)
root.order.add_edge(C, AA)
root.order.add_edge(C, AB)
root.order.add_edge(C, AC)
root.order.add_edge(C, AD)
root.order.add_edge(C, AE)
root.order.add_edge(C, AF)

root.order.add_edge(D, E)
root.order.add_edge(D, F)
root.order.add_edge(D, G)
root.order.add_edge(D, H)
root.order.add_edge(D, I)
root.order.add_edge(D, J)
root.order.add_edge(D, K)
root.order.add_edge(D, L)
root.order.add_edge(D, M)
root.order.add_edge(D, N)
root.order.add_edge(D, O)
root.order.add_edge(D, P)
root.order.add_edge(D, Q)
root.order.add_edge(D, R)
root.order.add_edge(D, S)
root.order.add_edge(D, T)
root.order.add_edge(D, U)
root.order.add_edge(D, V)
root.order.add_edge(D, W)
root.order.add_edge(D, X)
root.order.add_edge(D, Y)
root.order.add_edge(D, Z)
root.order.add_edge(D, AA)
root.order.add_edge(D, AB)
root.order.add_edge(D, AC)
root.order.add_edge(D, AD)
root.order.add_edge(D, AE)
root.order.add_edge(D, AF)

root.order.add_edge(E, F)
root.order.add_edge(E, G)
root.order.add_edge(E, H)
root.order.add_edge(E, I)
root.order.add_edge(E, J)
root.order.add_edge(E, K)
root.order.add_edge(E, L)
root.order.add_edge(E, M)
root.order.add_edge(E, N)
root.order.add_edge(E, O)
root.order.add_edge(E, P)
root.order.add_edge(E, Q)
root.order.add_edge(E, R)
root.order.add_edge(E, S)
root.order.add_edge(E, T)
root.order.add_edge(E, U)
root.order.add_edge(E, V)
root.order.add_edge(E, W)
root.order.add_edge(E, X)
root.order.add_edge(E, Y)
root.order.add_edge(E, Z)
root.order.add_edge(E, AA)
root.order.add_edge(E, AB)
root.order.add_edge(E, AC)
root.order.add_edge(E, AD)
root.order.add_edge(E, AE)
root.order.add_edge(E, AF)

root.order.add_edge(F, G)
root.order.add_edge(F, H)
root.order.add_edge(F, I)
root.order.add_edge(F, J)
root.order.add_edge(F, K)
root.order.add_edge(F, L)
root.order.add_edge(F, M)
root.order.add_edge(F, N)
root.order.add_edge(F, O)
root.order.add_edge(F, P)
root.order.add_edge(F, Q)
root.order.add_edge(F, R)
root.order.add_edge(F, S)
root.order.add_edge(F, T)
root.order.add_edge(F, U)
root.order.add_edge(F, V)
root.order.add_edge(F, W)
root.order.add_edge(F, X)
root.order.add_edge(F, Y)
root.order.add_edge(F, Z)
root.order.add_edge(F, AA)
root.order.add_edge(F, AB)
root.order.add_edge(F, AC)
root.order.add_edge(F, AD)
root.order.add_edge(F, AE)
root.order.add_edge(F, AF)

root.order.add_edge(G, H)
root.order.add_edge(G, I)
root.order.add_edge(G, J)
root.order.add_edge(G, K)
root.order.add_edge(G, L)
root.order.add_edge(G, M)
root.order.add_edge(G, N)
root.order.add_edge(G, O)
root.order.add_edge(G, P)
root.order.add_edge(G, Q)
root.order.add_edge(G, R)
root.order.add_edge(G, S)
root.order.add_edge(G, T)
root.order.add_edge(G, U)
root.order.add_edge(G, V)
root.order.add_edge(G, W)
root.order.add_edge(G, X)
root.order.add_edge(G, Y)
root.order.add_edge(G, Z)
root.order.add_edge(G, AA)
root.order.add_edge(G, AB)
root.order.add_edge(G, AC)
root.order.add_edge(G, AD)
root.order.add_edge(G, AE)
root.order.add_edge(G, AF)

root.order.add_edge(H, I)
root.order.add_edge(H, J)
root.order.add_edge(H, K)
root.order.add_edge(H, L)
root.order.add_edge(H, M)
root.order.add_edge(H, N)
root.order.add_edge(H, O)
root.order.add_edge(H, P)
root.order.add_edge(H, Q)
root.order.add_edge(H, R)
root.order.add_edge(H, S)
root.order.add_edge(H, T)
root.order.add_edge(H, U)
root.order.add_edge(H, V)
root.order.add_edge(H, W)
root.order.add_edge(H, X)
root.order.add_edge(H, Y)
root.order.add_edge(H, Z)
root.order.add_edge(H, AA)
root.order.add_edge(H, AB)
root.order.add_edge(H, AC)
root.order.add_edge(H, AD)
root.order.add_edge(H, AE)
root.order.add_edge(H, AF)

root.order.add_edge(I, J)
root.order.add_edge(I, K)
root.order.add_edge(I, L)
root.order.add_edge(I, M)
root.order.add_edge(I, N)
root.order.add_edge(I, O)
root.order.add_edge(I, P)
root.order.add_edge(I, Q)
root.order.add_edge(I, R)
root.order.add_edge(I, S)
root.order.add_edge(I, T)
root.order.add_edge(I, U)
root.order.add_edge(I, V)
root.order.add_edge(I, W)
root.order.add_edge(I, X)
root.order.add_edge(I, Y)
root.order.add_edge(I, Z)
root.order.add_edge(I, AA)
root.order.add_edge(I, AB)
root.order.add_edge(I, AC)
root.order.add_edge(I, AD)
root.order.add_edge(I, AE)
root.order.add_edge(I, AF)

root.order.add_edge(J, K)
root.order.add_edge(J, L)
root.order.add_edge(J, M)
root.order.add_edge(J, N)
root.order.add_edge(J, O)
root.order.add_edge(J, P)
root.order.add_edge(J, Q)
root.order.add_edge(J, R)
root.order.add_edge(J, S)
root.order.add_edge(J, T)
root.order.add_edge(J, U)
root.order.add_edge(J, V)
root.order.add_edge(J, W)
root.order.add_edge(J, X)
root.order.add_edge(J, Y)
root.order.add_edge(J, Z)
root.order.add_edge(J, AA)
root.order.add_edge(J, AB)
root.order.add_edge(J, AC)
root.order.add_edge(J, AD)
root.order.add_edge(J, AE)
root.order.add_edge(J, AF)

root.order.add_edge(K, L)
root.order.add_edge(K, M)
root.order.add_edge(K, N)
root.order.add_edge(K, O)
root.order.add_edge(K, P)
root.order.add_edge(K, Q)
root.order.add_edge(K, R)
root.order.add_edge(K, S)
root.order.add_edge(K, T)
root.order.add_edge(K, U)
root.order.add_edge(K, V)
root.order.add_edge(K, W)
root.order.add_edge(K, X)
root.order.add_edge(K, Y)
root.order.add_edge(K, Z)
root.order.add_edge(K, AA)
root.order.add_edge(K, AB)
root.order.add_edge(K, AC)
root.order.add_edge(K, AD)
root.order.add_edge(K, AE)
root.order.add_edge(K, AF)

root.order.add_edge(L, M)
root.order.add_edge(L, N)
root.order.add_edge(L, O)
root.order.add_edge(L, P)
root.order.add_edge(L, Q)
root.order.add_edge(L, R)
root.order.add_edge(L, S)
root.order.add_edge(L, T)
root.order.add_edge(L, U)
root.order.add_edge(L, V)
root.order.add_edge(L, W)
root.order.add_edge(L, X)
root.order.add_edge(L, Y)
root.order.add_edge(L, Z)
root.order.add_edge(L, AA)
root.order.add_edge(L, AB)
root.order.add_edge(L, AC)
root.order.add_edge(L, AD)
root.order.add_edge(L, AE)
root.order.add_edge(L, AF)

root.order.add_edge(M, N)
root.order.add_edge(M, O)
root.order.add_edge(M, P)
root.order.add_edge(M, Q)
root.order.add_edge(M, R)
root.order.add_edge(M, S)
root.order.add_edge(M, T)
root.order.add_edge(M, U)
root.order.add_edge(M, V)
root.order.add_edge(M, W)
root.order.add_edge(M, X)
root.order.add_edge(M, Y)
root.order.add_edge(M, Z)
root.order.add_edge(M, AA)
root.order.add_edge(M, AB)
root.order.add_edge(M, AC)
root.order.add_edge(M, AD)
root.order.add_edge(M, AE)
root.order.add_edge(M, AF)

root.order.add_edge(N, O)
root.order.add_edge(N, P)
root.order.add_edge(N, Q)
root.order.add_edge(N, R)
root.order.add_edge(N, S)
root.order.add_edge(N, T)
root.order.add_edge(N, U)
root.order.add_edge(N, V)
root.order.add_edge(N, W)
root.order.add_edge(N, X)
root.order.add_edge(N, Y)
root.order.add_edge(N, Z)
root.order.add_edge(N, AA)
root.order.add_edge(N, AB)
root.order.add_edge(N, AC)
root.order.add_edge(N, AD)
root.order.add_edge(N, AE)
root.order.add_edge(N, AF)

root.order.add_edge(O, P)
root.order.add_edge(O, Q)
root.order.add_edge(O, R)
root.order.add_edge(O, S)
root.order.add_edge(O, T)
root.order.add_edge(O, U)
root.order.add_edge(O, V)
root.order.add_edge(O, W)
root.order.add_edge(O, X)
root.order.add_edge(O, Y)
root.order.add_edge(O, Z)
root.order.add_edge(O, AA)
root.order.add_edge(O, AB)
root.order.add_edge(O, AC)
root.order.add_edge(O, AD)
root.order.add_edge(O, AE)
root.order.add_edge(O, AF)

root.order.add_edge(P, Q)
root.order.add_edge(P, R)
root.order.add_edge(P, S)
root.order.add_edge(P, T)
root.order.add_edge(P, U)
root.order.add_edge(P, V)
root.order.add_edge(P, W)
root.order.add_edge(P, X)
root.order.add_edge(P, Y)
root.order.add_edge(P, Z)
root.order.add_edge(P, AA)
root.order.add_edge(P, AB)
root.order.add_edge(P, AC)
root.order.add_edge(P, AD)
root.order.add_edge(P, AE)
root.order.add_edge(P, AF)

root.order.add_edge(Q, R)
root.order.add_edge(Q, S)
root.order.add_edge(Q, T)
root.order.add_edge(Q, U)
root.order.add_edge(Q, V)
root.order.add_edge(Q, W)
root.order.add_edge(Q, X)
root.order.add_edge(Q, Y)
root.order.add_edge(Q, Z)
root.order.add_edge(Q, AA)
root.order.add_edge(Q, AB)
root.order.add_edge(Q, AC)
root.order.add_edge(Q, AD)
root.order.add_edge(Q, AE)
root.order.add_edge(Q, AF)

root.order.add_edge(R, S)
root.order.add_edge(R, T)
root.order.add_edge(R, U)
root.order.add_edge(R, V)
root.order.add_edge(R, W)
root.order.add_edge(R, X)
root.order.add_edge(R, Y)
root.order.add_edge(R, Z)
root.order.add_edge(R, AA)
root.order.add_edge(R, AB)
root.order.add_edge(R, AC)
root.order.add_edge(R, AD)
root.order.add_edge(R, AE)
root.order.add_edge(R, AF)

root.order.add_edge(S, T)
root.order.add_edge(S, U)
root.order.add_edge(S, V)
root.order.add_edge(S, W)
root.order.add_edge(S, X)
root.order.add_edge(S, Y)
root.order.add_edge(S, Z)
root.order.add_edge(S, AA)
root.order.add_edge(S, AB)
root.order.add_edge(S, AC)
root.order.add_edge(S, AD)
root.order.add_edge(S, AE)
root.order.add_edge(S, AF)

root.order.add_edge(T, U)
root.order.add_edge(T, V)
root.order.add_edge(T, W)
root.order.add_edge(T, X)
root.order.add_edge(T, Y)
root.order.add_edge(T, Z)
root.order.add_edge(T, AA)
root.order.add_edge(T, AB)
root.order.add_edge(T, AC)
root.order.add_edge(T, AD)
root.order.add_edge(T, AE)
root.order.add_edge(T, AF)

root.order.add_edge(U, V)
root.order.add_edge(U, W)
root.order.add_edge(U, X)
root.order.add_edge(U, Y)
root.order.add_edge(U, Z)
root.order.add_edge(U, AA)
root.order.add_edge(U, AB)
root.order.add_edge(U, AC)
root.order.add_edge(U, AD)
root.order.add_edge(U, AE)
root.order.add_edge(U, AF)

root.order.add_edge(V, W)
root.order.add_edge(V, X)
root.order.add_edge(V, Y)
root.order.add_edge(V, Z)
root.order.add_edge(V, AA)
root.order.add_edge(V, AB)
root.order.add_edge(V, AC)
root.order.add_edge(V, AD)
root.order.add_edge(V, AE)
root.order.add_edge(V, AF)

root.order.add_edge(W, X)
root.order.add_edge(W, Y)
root.order.add_edge(W, Z)
root.order.add_edge(W, AA)
root.order.add_edge(W, AB)
root.order.add_edge(W, AC)
root.order.add_edge(W, AD)
root.order.add_edge(W, AE)
root.order.add_edge(W, AF)

root.order.add_edge(X, Y)
root.order.add_edge(X, Z)
root.order.add_edge(X, AA)
root.order.add_edge(X, AB)
root.order.add_edge(X, AC)
root