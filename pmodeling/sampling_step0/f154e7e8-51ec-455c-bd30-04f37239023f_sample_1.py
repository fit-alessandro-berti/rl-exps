import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
flora_mapping = Transition(label='Flora Mapping')
hive_setup = Transition(label='Hive Setup')
sensor_install = Transition(label='Sensor Install')
health_check = Transition(label='Health Check')
pest_control = Transition(label='Pest Control')
data_logging = Transition(label='Data Logging')
community_meet = Transition(label='Community Meet')
workshop_plan = Transition(label='Workshop Plan')
honey_extract = Transition(label='Honey Extract')
quality_test = Transition(label='Quality Test')
packaging = Transition(label='Packaging')
market_setup = Transition(label='Market Setup')
sales_report = Transition(label='Sales Report')
regulation_check = Transition(label='Regulation Check')
waste_manage = Transition(label='Waste Manage')
seasonal_review = Transition(label='Seasonal Review')

skip = SilentTransition()

site_survey_node = OperatorPOWL(operator=Operator.PO, children=[site_survey, flora_mapping])
flora_mapping_node = OperatorPOWL(operator=Operator.PO, children=[hive_setup, sensor_install])
sensor_install_node = OperatorPOWL(operator=Operator.PO, children=[health_check, pest_control])
health_check_node = OperatorPOWL(operator=Operator.PO, children=[data_logging, community_meet])
pest_control_node = OperatorPOWL(operator=Operator.PO, children=[workshop_plan, honey_extract])
workshop_plan_node = OperatorPOWL(operator=Operator.PO, children=[quality_test, packaging])
honey_extract_node = OperatorPOWL(operator=Operator.PO, children=[market_setup, sales_report])
quality_test_node = OperatorPOWL(operator=Operator.PO, children=[regulation_check, waste_manage])
packaging_node = OperatorPOWL(operator=Operator.PO, children=[seasonal_review])

root = StrictPartialOrder(nodes=[site_survey_node, flora_mapping_node, hive_setup_node, sensor_install_node, health_check_node, pest_control_node, data_logging_node, community_meet_node, workshop_plan_node, honey_extract_node, quality_test_node, packaging_node, market_setup_node, sales_report_node, regulation_check_node, waste_manage_node, seasonal_review_node])
root.order.add_edge(site_survey_node, flora_mapping_node)
root.order.add_edge(flora_mapping_node, hive_setup_node)
root.order.add_edge(hive_setup_node, sensor_install_node)
root.order.add_edge(sensor_install_node, health_check_node)
root.order.add_edge(health_check_node, pest_control_node)
root.order.add_edge(pest_control_node, data_logging_node)
root.order.add_edge(data_logging_node, community_meet_node)
root.order.add_edge(community_meet_node, workshop_plan_node)
root.order.add_edge(workshop_plan_node, honey_extract_node)
root.order.add_edge(honey_extract_node, quality_test_node)
root.order.add_edge(quality_test_node, packaging_node)
root.order.add_edge(packaging_node, market_setup_node)
root.order.add_edge(market_setup_node, sales_report_node)
root.order.add_edge(sales_report_node, regulation_check_node)
root.order.add_edge(regulation_check_node, waste_manage_node)
root.order.add_edge(waste_manage_node, seasonal_review_node)