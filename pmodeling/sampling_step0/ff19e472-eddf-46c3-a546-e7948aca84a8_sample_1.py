import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
design_layout = Transition(label='Design Layout')
install_modules = Transition(label='Install Modules')
calibrate_climate = Transition(label='Calibrate Climate')
prepare_nutrients = Transition(label='Prepare Nutrients')
select_seeds = Transition(label='Select Seeds')
start_germination = Transition(label='Start Germination')
deploy_sensors = Transition(label='Deploy Sensors')
monitor_growth = Transition(label='Monitor Growth')
manage_pests = Transition(label='Manage Pests')
schedule_harvest = Transition(label='Schedule Harvest')
process_waste = Transition(label='Process Waste')
optimize_energy = Transition(label='Optimize Energy')
conduct_training = Transition(label='Conduct Training')
update_records = Transition(label='Update Records')
review_performance = Transition(label='Review Performance')

skip = SilentTransition()

site_survey_choice = OperatorPOWL(operator=Operator.XOR, children=[design_layout, skip])
install_modules_choice = OperatorPOWL(operator=Operator.XOR, children=[calibrate_climate, skip])
prepare_nutrients_choice = OperatorPOWL(operator=Operator.XOR, children=[prepare_nutrients, skip])
select_seeds_choice = OperatorPOWL(operator=Operator.XOR, children=[select_seeds, skip])
start_germination_choice = OperatorPOWL(operator=Operator.XOR, children=[start_germination, skip])
monitor_growth_choice = OperatorPOWL(operator=Operator.XOR, children=[monitor_growth, skip])
manage_pests_choice = OperatorPOWL(operator=Operator.XOR, children=[manage_pests, skip])
schedule_harvest_choice = OperatorPOWL(operator=Operator.XOR, children=[schedule_harvest, skip])
process_waste_choice = OperatorPOWL(operator=Operator.XOR, children=[process_waste, skip])
optimize_energy_choice = OperatorPOWL(operator=Operator.XOR, children=[optimize_energy, skip])
conduct_training_choice = OperatorPOWL(operator=Operator.XOR, children=[conduct_training, skip])
update_records_choice = OperatorPOWL(operator=Operator.XOR, children=[update_records, skip])
review_performance_choice = OperatorPOWL(operator=Operator.XOR, children=[review_performance, skip])

loop1 = OperatorPOWL(operator=Operator.LOOP, children=[site_survey, design_layout])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[install_modules, calibrate_climate])
loop3 = OperatorPOWL(operator=Operator.LOOP, children=[prepare_nutrients, skip])
loop4 = OperatorPOWL(operator=Operator.LOOP, children=[select_seeds, skip])
loop5 = OperatorPOWL(operator=Operator.LOOP, children=[start_germination, skip])
loop6 = OperatorPOWL(operator=Operator.LOOP, children=[monitor_growth, skip])
loop7 = OperatorPOWL(operator=Operator.LOOP, children=[manage_pests, skip])
loop8 = OperatorPOWL(operator=Operator.LOOP, children=[schedule_harvest, skip])
loop9 = OperatorPOWL(operator=Operator.LOOP, children=[process_waste, skip])
loop10 = OperatorPOWL(operator=Operator.LOOP, children=[optimize_energy, skip])
loop11 = OperatorPOWL(operator=Operator.LOOP, children=[conduct_training, skip])
loop12 = OperatorPOWL(operator=Operator.LOOP, children=[update_records, skip])
loop13 = OperatorPOWL(operator=Operator.LOOP, children=[review_performance, skip])

root = StrictPartialOrder(nodes=[loop1, loop2, loop3, loop4, loop5, loop6, loop7, loop8, loop9, loop10, loop11, loop12, loop13])
root.order.add_edge(loop1, loop2)
root.order.add_edge(loop2, loop3)
root.order.add_edge(loop3, loop4)
root.order.add_edge(loop4, loop5)
root.order.add_edge(loop5, loop6)
root.order.add_edge(loop6, loop7)
root.order.add_edge(loop7, loop8)
root.order.add_edge(loop8, loop9)
root.order.add_edge(loop9, loop10)
root.order.add_edge(loop10, loop11)
root.order.add_edge(loop11, loop12)
root.order.add_edge(loop12, loop13)
root.order.add_edge(loop13, loop1)