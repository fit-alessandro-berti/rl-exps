A = Transition(label='Site Survey')
B = Transition(label='Load Testing')
C = Transition(label='Crop Selection')
D = Transition(label='Soil Prep')
E = Transition(label='Irrigation Setup')
F = Transition(label='Permits Acquire')
G = Transition(label='Supplier Outreach')
H = Transition(label='Planting Seedlings')
I = Transition(label='Pest Monitoring')
J = Transition(label='Nutrient Testing')
K = Transition(label='Waste Sorting')
L = Transition(label='Staff Training')
M = Transition(label='Community Meet')
N = Transition(label='Harvest Planning')
O = Transition(label='Market Launch')
P = Transition(label='Yield Tracking')
skip = SilentTransition()
xor1 = OperatorPOWL(operator=Operator.XOR, children=[C, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[D, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[E, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[F, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[G, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[H, skip])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[I, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[J, skip])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[K, skip])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[L, skip])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[M, skip])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[N, skip])
xor13 = OperatorPOWL(operator=Operator.XOR, children=[O, skip])
xor14 = OperatorPOWL(operator=Operator.XOR, children=[P, skip])
loop1 = OperatorPOWL(operator=Operator.LOOP, children=[xor1, xor2, xor3, xor4, xor5, xor6, xor7, xor8, xor9, xor10, xor11, xor12, xor13, xor14])
root = StrictPartialOrder(nodes=[loop1])
root.order.add_edge(loop1, xor1)
root.order.add_edge(loop1, xor2)
root.order.add_edge(loop1, xor3)
root.order.add_edge(loop1, xor4)
root.order.add_edge(loop1, xor5)
root.order.add_edge(loop1, xor6)
root.order.add_edge(loop1, xor7)
root.order.add_edge(loop1, xor8)
root.order.add_edge(loop1, xor9)
root.order.add_edge(loop1, xor10)
root.order.add_edge(loop1, xor11)
root.order.add_edge(loop1, xor12)
root.order.add_edge(loop1, xor13)
root.order.add_edge(loop1, xor14)