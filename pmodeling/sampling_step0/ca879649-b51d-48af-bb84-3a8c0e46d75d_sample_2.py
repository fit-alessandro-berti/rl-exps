import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
MilkSourcing = Transition(label='Milk Sourcing')
QualityTesting = Transition(label='Quality Testing')
BatchSelection = Transition(label='Batch Selection')
CurdPreparation = Transition(label='Curd Preparation')
PressingCheese = Transition(label='Pressing Cheese')
AgingControl = Transition(label='Aging Control')
FlavorProfiling = Transition(label='Flavor Profiling')
PackagingPrep = Transition(label='Packaging Prep')
ClimatePacking = Transition(label='Climate Packing')
ExportLicensing = Transition(label='Export Licensing')
CustomsFiling = Transition(label='Customs Filing')
FreightBooking = Transition(label='Freight Booking')
ColdStorage = Transition(label='Cold Storage')
TransportTracking = Transition(label='Transport Tracking')
RetailDelivery = Transition(label='Retail Delivery')
FeedbackCollection = Transition(label='Feedback Collection')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[BatchSelection, CurdPreparation])
xor = OperatorPOWL(operator=Operator.XOR, children=[AgingControl, FlavorProfiling])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[PackagingPrep, ClimatePacking])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[ExportLicensing, CustomsFiling])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[FreightBooking, ColdStorage])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[TransportTracking, RetailDelivery])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[FeedbackCollection, skip])
root = StrictPartialOrder(nodes=[MilkSourcing, QualityTesting, loop, xor, xor2, xor3, xor4, xor5, xor6])
root.order.add_edge(MilkSourcing, QualityTesting)
root.order.add_edge(QualityTesting, loop)
root.order.add_edge(loop, xor)
root.order.add_edge(xor, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor6, skip)