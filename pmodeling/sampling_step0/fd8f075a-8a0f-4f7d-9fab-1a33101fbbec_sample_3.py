import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define transitions
site_survey = Transition(label='Site Survey')
permit_filing = Transition(label='Permit Filing')
structure_prep = Transition(label='Structure Prep')
system_install = Transition(label='System Install')
nutrient_mix = Transition(label='Nutrient Mix')
sensor_setup = Transition(label='Sensor Setup')
ai_calibration = Transition(label='AI Calibration')
seed_sourcing = Transition(label='Seed Sourcing')
staff_training = Transition(label='Staff Training')
energy_connect = Transition(label='Energy Connect')
water_cycle = Transition(label='Water Cycle')
growth_monitor = Transition(label='Growth Monitor')
waste_audit = Transition(label='Waste Audit')
community_meet = Transition(label='Community Meet')
data_review = Transition(label='Data Review')
yield_forecast = Transition(label='Yield Forecast')
skip = SilentTransition()

# Define operators
loop = OperatorPOWL(operator=Operator.LOOP, children=[yield_forecast, nutrient_mix])
xor = OperatorPOWL(operator=Operator.XOR, children=[growth_monitor, data_review])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[seed_sourcing, staff_training])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[water_cycle, sensor_setup])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[energy_connect, community_meet])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[waste_audit, site_survey])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[permit_filing, structure_prep])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[system_install, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[ai_calibration, skip])

# Define root POWL model
root = StrictPartialOrder(nodes=[xor7, xor6, xor8, xor3, xor5, xor4, xor2, xor, loop])
root.order.add_edge(xor7, xor6)
root.order.add_edge(xor6, xor8)
root.order.add_edge(xor8, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor5)
root.order.add_edge(xor5, xor4)
root.order.add_edge(xor4, xor)
root.order.add_edge(xor, loop)
root.order.add_edge(loop, xor)
root.order.add_edge(xor, yield_forecast)
root.order.add_edge(yield_forecast, nutrient_mix)
root.order.add_edge(nutrient_mix, growth_monitor)
root.order.add_edge(growth_monitor, data_review)
root.order.add_edge(data_review, seed_sourcing)
root.order.add_edge(seed_sourcing, staff_training)
root.order.add_edge(staff_training, water_cycle)
root.order.add_edge(water_cycle, sensor_setup)
root.order.add_edge(sensor_setup, energy_connect)
root.order.add_edge(energy_connect, community_meet)
root.order.add_edge(community_meet, waste_audit)
root.order.add_edge(waste_audit, site_survey)
root.order.add_edge(site_survey, permit_filing)
root.order.add_edge(permit_filing, structure_prep)
root.order.add_edge(structure_prep, system_install)

# Print the root POWL model
print(root)