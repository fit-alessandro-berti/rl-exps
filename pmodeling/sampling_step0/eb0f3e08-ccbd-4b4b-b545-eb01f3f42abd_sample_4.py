import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

sensor_setup = Transition(label='Sensor Setup')
data_collection = Transition(label='Data Collection')
weather_check = Transition(label='Weather Check')
soil_testing = Transition(label='Soil Testing')
crop_selection = Transition(label='Crop Selection')
resource_assign = Transition(label='Resource Assign')
irrigation_adjust = Transition(label='Irrigation Adjust')
pest_scan = Transition(label='Pest Scan')
nutrient_mix = Transition(label='Nutrient Mix')
growth_monitor = Transition(label='Growth Monitor')
community_poll = Transition(label='Community Poll')
schedule_update = Transition(label='Schedule Update')
harvest_plan = Transition(label='Harvest Plan')
waste_sort = Transition(label='Waste Sort')
yield_report = Transition(label='Yield Report')

skip = SilentTransition()
xor1 = OperatorPOWL(operator=Operator.XOR, children=[community_poll, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[harvest_plan, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[waste_sort, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[yield_report, skip])

loop1 = OperatorPOWL(operator=Operator.LOOP, children=[resource_assign, soil_testing])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[pest_scan, nutrient_mix])
loop3 = OperatorPOWL(operator=Operator.LOOP, children=[irrigation_adjust, growth_monitor])

root = StrictPartialOrder(nodes=[sensor_setup, data_collection, weather_check, loop1, loop2, loop3, xor1, xor2, xor3, xor4])
root.order.add_edge(sensor_setup, data_collection)
root.order.add_edge(data_collection, weather_check)
root.order.add_edge(weather_check, loop1)
root.order.add_edge(weather_check, loop2)
root.order.add_edge(weather_check, loop3)
root.order.add_edge(loop1, loop2)
root.order.add_edge(loop1, loop3)
root.order.add_edge(loop2, loop3)
root.order.add_edge(loop3, xor1)
root.order.add_edge(loop3, xor2)
root.order.add_edge(loop3, xor3)
root.order.add_edge(loop3, xor4)
root.order.add_edge(xor1, xor2)
root.order.add_edge(xor1, xor3)
root.order.add_edge(xor1, xor4)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor2, xor4)
root.order.add_edge(xor3, xor4)