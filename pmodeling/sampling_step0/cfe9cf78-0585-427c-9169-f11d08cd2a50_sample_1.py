import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_analysis = Transition(label='Site Analysis')
env_assessment = Transition(label='Env Assessment')
system_design = Transition(label='System Design')
equipment_order = Transition(label='Equipment Order')
seed_selection = Transition(label='Seed Selection')
install_modules = Transition(label='Install Modules')
calibrate_systems = Transition(label='Calibrate Systems')
staff_training = Transition(label='Staff Training')
plant_seeding = Transition(label='Plant Seeding')
iot_monitoring = Transition(label='IoT Monitoring')
data_analytics = Transition(label='Data Analytics')
nutrient_adjust = Transition(label='Nutrient Adjust')
pest_control = Transition(label='Pest Control')
maintenance_check = Transition(label='Maintenance Check')
market_launch = Transition(label='Market Launch')
logistics_setup = Transition(label='Logistics Setup')

skip = SilentTransition()
xor = OperatorPOWL(operator=Operator.XOR, children=[market_launch, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[logistics_setup, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[pest_control, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[maintenance_check, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[data_analytics, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[nutrient_adjust, skip])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[iot_monitoring, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[staff_training, skip])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[seed_selection, skip])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[plant_seeding, skip])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[calibrate_systems, skip])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[install_modules, skip])
xor13 = OperatorPOWL(operator=Operator.XOR, children=[equipment_order, skip])
xor14 = OperatorPOWL(operator=Operator.XOR, children=[system_design, skip])
xor15 = OperatorPOWL(operator=Operator.XOR, children=[env_assessment, skip])
xor16 = OperatorPOWL(operator=Operator.XOR, children=[site_analysis, skip])

root = StrictPartialOrder(nodes=[xor16, xor15, xor14, xor13, xor12, xor11, xor10, xor9, xor8, xor7, xor6, xor5, xor4, xor3, xor2, xor])
root.order.add_edge(xor16, xor15)
root.order.add_edge(xor15, xor14)
root.order.add_edge(xor14, xor13)
root.order.add_edge(xor13, xor12)
root.order.add_edge(xor12, xor11)
root.order.add_edge(xor11, xor10)
root.order.add_edge(xor10, xor9)
root.order.add_edge(xor9, xor8)
root.order.add_edge(xor8, xor7)
root.order.add_edge(xor7, xor6)
root.order.add_edge(xor6, xor5)
root.order.add_edge(xor5, xor4)
root.order.add_edge(xor4, xor3)
root.order.add_edge(xor3, xor2)
root.order.add_edge(xor2, xor)