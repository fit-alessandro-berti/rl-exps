import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
material_sourcing = Transition(label='Material Sourcing')
supplier_vetting = Transition(label='Supplier Vetting')
design_review = Transition(label='Design Review')
prototype_build = Transition(label='Prototype Build')
quality_audit = Transition(label='Quality Audit')
batch_scheduling = Transition(label='Batch Scheduling')
handcrafting = Transition(label='Handcrafting')
packaging_design = Transition(label='Packaging Design')
custom_labeling = Transition(label='Custom Labeling')
sustainability_check = Transition(label='Sustainability Check')
inventory_sync = Transition(label='Inventory Sync')
market_analysis = Transition(label='Market Analysis')
order_aggregation = Transition(label='Order Aggregation')
distribution_plan = Transition(label='Distribution Plan')
customer_feedback = Transition(label='Customer Feedback')
skip = SilentTransition()
loop1 = OperatorPOWL(operator=Operator.LOOP, children=[supplier_vetting, design_review, prototype_build, quality_audit, handcrafting, packaging_design, custom_labeling, sustainability_check])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[batch_scheduling, inventory_sync, market_analysis, order_aggregation, distribution_plan])
loop3 = OperatorPOWL(operator=Operator.LOOP, children=[customer_feedback])
xor = OperatorPOWL(operator=Operator.XOR, children=[loop1, loop2, loop3])
root = StrictPartialOrder(nodes=[material_sourcing, xor])
root.order.add_edge(material_sourcing, xor)