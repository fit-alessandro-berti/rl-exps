import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
structure_prep = Transition(label='Structure Prep')
system_install = Transition(label='System Install')
env_control = Transition(label='Env Control')
nutrient_mix = Transition(label='Nutrient Mix')
crop_select = Transition(label='Crop Select')
ai_setup = Transition(label='AI Setup')
worker_train = Transition(label='Worker Train')
pest_control = Transition(label='Pest Control')
irrigation_plan = Transition(label='Irrigation Plan')
data_monitor = Transition(label='Data Monitor')
yield_forecast = Transition(label='Yield Forecast')
energy_audit = Transition(label='Energy Audit')
market_setup = Transition(label='Market Setup')
logistics_plan = Transition(label='Logistics Plan')
waste_manage = Transition(label='Waste Manage')

skip = SilentTransition()

site_survey_order = OperatorPOWL(operator=Operator.XOR, children=[site_survey, skip])
structure_prep_order = OperatorPOWL(operator=Operator.XOR, children=[structure_prep, skip])
system_install_order = OperatorPOWL(operator=Operator.XOR, children=[system_install, skip])
env_control_order = OperatorPOWL(operator=Operator.XOR, children=[env_control, skip])
nutrient_mix_order = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, skip])
crop_select_order = OperatorPOWL(operator=Operator.XOR, children=[crop_select, skip])
ai_setup_order = OperatorPOWL(operator=Operator.XOR, children=[ai_setup, skip])
worker_train_order = OperatorPOWL(operator=Operator.XOR, children=[worker_train, skip])
pest_control_order = OperatorPOWL(operator=Operator.XOR, children=[pest_control, skip])
irrigation_plan_order = OperatorPOWL(operator=Operator.XOR, children=[irrigation_plan, skip])
data_monitor_order = OperatorPOWL(operator=Operator.XOR, children=[data_monitor, skip])
yield_forecast_order = OperatorPOWL(operator=Operator.XOR, children=[yield_forecast, skip])
energy_audit_order = OperatorPOWL(operator=Operator.XOR, children=[energy_audit, skip])
market_setup_order = OperatorPOWL(operator=Operator.XOR, children=[market_setup, skip])
logistics_plan_order = OperatorPOWL(operator=Operator.XOR, children=[logistics_plan, skip])
waste_manage_order = OperatorPOWL(operator=Operator.XOR, children=[waste_manage, skip])

loop1 = OperatorPOWL(operator=Operator.LOOP, children=[site_survey_order, structure_prep_order])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[system_install_order, env_control_order])
loop3 = OperatorPOWL(operator=Operator.LOOP, children=[nutrient_mix_order, crop_select_order])
loop4 = OperatorPOWL(operator=Operator.LOOP, children=[ai_setup_order, worker_train_order])
loop5 = OperatorPOWL(operator=Operator.LOOP, children=[pest_control_order, irrigation_plan_order])
loop6 = OperatorPOWL(operator=Operator.LOOP, children=[data_monitor_order, yield_forecast_order])
loop7 = OperatorPOWL(operator=Operator.LOOP, children=[energy_audit_order, market_setup_order])
loop8 = OperatorPOWL(operator=Operator.LOOP, children=[logistics_plan_order, waste_manage_order])

root = StrictPartialOrder(nodes=[loop1, loop2, loop3, loop4, loop5, loop6, loop7, loop8])
root.order.add_edge(loop1, loop2)
root.order.add_edge(loop2, loop3)
root.order.add_edge(loop3, loop4)
root.order.add_edge(loop4, loop5)
root.order.add_edge(loop5, loop6)
root.order.add_edge(loop6, loop7)
root.order.add_edge(loop7, loop8)

print(root)