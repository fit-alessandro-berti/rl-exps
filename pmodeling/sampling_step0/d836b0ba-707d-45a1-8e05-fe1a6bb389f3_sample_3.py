import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_select = Transition(label='Site Select')
design_layout = Transition(label='Design Layout')
sensor_integrate = Transition(label='Sensor Integrate')
crop_choose = Transition(label='Crop Choose')
soil_prepare = Transition(label='Soil Prepare')
irrigation_setup = Transition(label='Irrigation Setup')
pest_control = Transition(label='Pest Control')
lighting_install = Transition(label='Lighting Install')
staff_train = Transition(label='Staff Train')
compliance_check = Transition(label='Compliance Check')
market_analyze = Transition(label='Market Analyze')
package_design = Transition(label='Package Design')
logistics_plan = Transition(label='Logistics Plan')
data_analyze = Transition(label='Data Analyze')
feedback_loop = Transition(label='Feedback Loop')

site_select_next = OperatorPOWL(operator=Operator.XOR, children=[site_select, compliance_check])
site_select_next_next = OperatorPOWL(operator=Operator.XOR, children=[design_layout, compliance_check])
design_layout_next = OperatorPOWL(operator=Operator.XOR, children=[sensor_integrate, compliance_check])
sensor_integrate_next = OperatorPOWL(operator=Operator.XOR, children=[crop_choose, compliance_check])
crop_choose_next = OperatorPOWL(operator=Operator.XOR, children=[soil_prepare, compliance_check])
soil_prepare_next = OperatorPOWL(operator=Operator.XOR, children=[irrigation_setup, compliance_check])
irrigation_setup_next = OperatorPOWL(operator=Operator.XOR, children=[pest_control, compliance_check])
pest_control_next = OperatorPOWL(operator=Operator.XOR, children=[lighting_install, compliance_check])
lighting_install_next = OperatorPOWL(operator=Operator.XOR, children=[staff_train, compliance_check])
staff_train_next = OperatorPOWL(operator=Operator.XOR, children=[market_analyze, compliance_check])
market_analyze_next = OperatorPOWL(operator=Operator.XOR, children=[package_design, compliance_check])
package_design_next = OperatorPOWL(operator=Operator.XOR, children=[logistics_plan, compliance_check])
logistics_plan_next = OperatorPOWL(operator=Operator.XOR, children=[data_analyze, compliance_check])
data_analyze_next = OperatorPOWL(operator=Operator.XOR, children=[feedback_loop, compliance_check])

root = StrictPartialOrder(nodes=[site_select_next, site_select_next_next, design_layout_next, sensor_integrate_next, crop_choose_next, soil_prepare_next, irrigation_setup_next, pest_control_next, lighting_install_next, staff_train_next, market_analyze_next, package_design_next, logistics_plan_next, data_analyze_next, feedback_loop])
root.order.add_edge(site_select_next, site_select_next_next)
root.order.add_edge(site_select_next_next, design_layout_next)
root.order.add_edge(design_layout_next, sensor_integrate_next)
root.order.add_edge(sensor_integrate_next, crop_choose_next)
root.order.add_edge(crop_choose_next, soil_prepare_next)
root.order.add_edge(soil_prepare_next, irrigation_setup_next)
root.order.add_edge(irrigation_setup_next, pest_control_next)
root.order.add_edge(pest_control_next, lighting_install_next)
root.order.add_edge(lighting_install_next, staff_train_next)
root.order.add_edge(staff_train_next, market_analyze_next)
root.order.add_edge(market_analyze_next, package_design_next)
root.order.add_edge(package_design_next, logistics_plan_next)
root.order.add_edge(logistics_plan_next, data_analyze_next)
root.order.add_edge(data_analyze_next, feedback_loop)