from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition

# Define the transitions (activities)
ingredient_sourcing = Transition(label='Ingredient Sourcing')
sample_testing = Transition(label='Sample Testing')
oil_extraction = Transition(label='Oil Extraction')
blend_formulation = Transition(label='Blend Formulation')
quality_control = Transition(label='Quality Control')
aging_process = Transition(label='Aging Process')
allergen_check = Transition(label='Allergen Check')
market_research = Transition(label='Market Research')
bottle_design = Transition(label='Bottle Design')
label_approval = Transition(label='Label Approval')
packaging_setup = Transition(label='Packaging Setup')
batch_mixing = Transition(label='Batch Mixing')
scent_profiling = Transition(label='Scent Profiling')
client_feedback = Transition(label='Client Feedback')
release_scheduling = Transition(label='Release Scheduling')
regulatory_review = Transition(label='Regulatory Review')
sales_training = Transition(label='Sales Training')

# Define the loops and XORs (choices)
sample_loop = OperatorPOWL(operator=OperatorPOWL.LOOP, children=[sample_testing, quality_control])
aging_loop = OperatorPOWL(operator=OperatorPOWL.LOOP, children=[aging_process, quality_control])
allergen_check_loop = OperatorPOWL(operator=OperatorPOWL.LOOP, children=[allergen_check, quality_control])
bottle_design_loop = OperatorPOWL(operator=OperatorPOWL.LOOP, children=[bottle_design, label_approval])
packaging_setup_loop = OperatorPOWL(operator=OperatorPOWL.LOOP, children=[packaging_setup, batch_mixing])
release_scheduling_loop = OperatorPOWL(operator=OperatorPOWL.LOOP, children=[release_scheduling, regulatory_review])
sales_training_loop = OperatorPOWL(operator=OperatorPOWL.LOOP, children=[sales_training, client_feedback])

# Define the exclusive choice (XOR)
xor = OperatorPOWL(operator=OperatorPOWL.XOR, children=[market_research, sales_training_loop])

# Define the root of the POWL model
root = StrictPartialOrder(nodes=[ingredient_sourcing, oil_extraction, blend_formulation, sample_loop, aging_loop, allergen_check_loop, bottle_design_loop, packaging_setup_loop, release_scheduling_loop, xor])

# Add the edges
root.order.add_edge(ingredient_sourcing, oil_extraction)
root.order.add_edge(ingredient_sourcing, blend_formulation)
root.order.add_edge(oil_extraction, blend_formulation)
root.order.add_edge(sample_testing, quality_control)
root.order.add_edge(quality_control, sample_loop)
root.order.add_edge(aging_process, quality_control)
root.order.add_edge(quality_control, aging_loop)
root.order.add_edge(allergen_check, quality_control)
root.order.add_edge(quality_control, allergen_check_loop)
root.order.add_edge(bottle_design, label_approval)
root.order.add_edge(label_approval, bottle_design_loop)
root.order.add_edge(packaging_setup, batch_mixing)
root.order.add_edge(batch_mixing, packaging_setup_loop)
root.order.add_edge(release_scheduling, regulatory_review)
root.order.add_edge(regulatory_review, release_scheduling_loop)
root.order.add_edge(sales_training, client_feedback)
root.order.add_edge(client_feedback, sales_training_loop)
root.order.add_edge(market_research, xor)
root.order.add_edge(sales_training_loop, xor)

print(root)