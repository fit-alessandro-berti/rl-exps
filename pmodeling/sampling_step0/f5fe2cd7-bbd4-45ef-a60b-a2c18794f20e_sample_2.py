import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
A = Transition(label='Provenance Check')
B = Transition(label='Material Scan')
C = Transition(label='Radiocarbon Test')
D = Transition(label='Stylistic Review')
E = Transition(label='Expert Consult')
F = Transition(label='Document Audit')
G = Transition(label='Legal Verify')
H = Transition(label='Condition Report')
I = Transition(label='Discrepancy Flag')
J = Transition(label='Re-examination')
K = Transition(label='Alternative Source')
L = Transition(label='Acquisition Vote')
M = Transition(label='Catalog Entry')
N = Transition(label='Exhibit Plan')
O = Transition(label='Final Approval')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[I, J])
xor = OperatorPOWL(operator=Operator.XOR, children=[H, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[K, L])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[M, O])
root = StrictPartialOrder(nodes=[A, B, C, D, E, F, G, H, I, J, xor, xor2, xor3])
root.order.add_edge(A, B)
root.order.add_edge(B, C)
root.order.add_edge(C, D)
root.order.add_edge(D, E)
root.order.add_edge(E, F)
root.order.add_edge(F, G)
root.order.add_edge(G, H)
root.order.add_edge(H, xor)
root.order.add_edge(I, xor)
root.order.add_edge(J, xor)
root.order.add_edge(xor, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, O)
root.order.add_edge(xor3, M)
root.order.add_edge(I, J)
root.order.add_edge(K, L)
root.order.add_edge(L, M)
root.order.add_edge(K, xor2)
root.order.add_edge(L, xor2)
root.order.add_edge(O, xor3)
root.order.add_edge(M, xor3)