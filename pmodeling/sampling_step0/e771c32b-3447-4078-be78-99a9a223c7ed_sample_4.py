import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
Site_Survey = Transition(label='Site Survey')
Climate_Plan = Transition(label='Climate Plan')
System_Design = Transition(label='System Design')
AI_Setup = Transition(label='AI Setup')
Seed_Sourcing = Transition(label='Seed Sourcing')
Nutrient_Mix = Transition(label='Nutrient Mix')
Install_Hydro = Transition(label='Install Hydro')
Energy_Audit = Transition(label='Energy Audit')
Staff_Training = Transition(label='Staff Training')
Trial_Growth = Transition(label='Trial Growth')
Yield_Measure = Transition(label='Yield Measure')
Waste_Cycle = Transition(label='Waste Cycle')
Compliance_Check = Transition(label='Compliance Check')
Market_Study = Transition(label='Market Study')
Community_Meet = Transition(label='Community Meet')
Optimize_Environment = Transition(label='Optimize Environment')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[Site_Survey, Climate_Plan])
xor = OperatorPOWL(operator=Operator.XOR, children=[System_Design, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[AI_Setup, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[Seed_Sourcing, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[Nutrient_Mix, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[Install_Hydro, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[Energy_Audit, skip])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[Staff_Training, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[Trial_Growth, skip])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[Yield_Measure, skip])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[Waste_Cycle, skip])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[Compliance_Check, skip])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[Market_Study, skip])
xor13 = OperatorPOWL(operator=Operator.XOR, children=[Community_Meet, skip])
xor14 = OperatorPOWL(operator=Operator.XOR, children=[Optimize_Environment, skip])
root = StrictPartialOrder(nodes=[loop, xor, xor2, xor3, xor4, xor5, xor6, xor7, xor8, xor9, xor10, xor11, xor12, xor13, xor14])
root.order.add_edge(loop, xor)
root.order.add_edge(xor, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor6, xor7)
root.order.add_edge(xor7, xor8)
root.order.add_edge(xor8, xor9)
root.order.add_edge(xor9, xor10)
root.order.add_edge(xor10, xor11)
root.order.add_edge(xor11, xor12)
root.order.add_edge(xor12, xor13)
root.order.add_edge(xor13, xor14)