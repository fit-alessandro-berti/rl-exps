import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define the activities
site_survey = Transition(label='Site Survey')
design_layout = Transition(label='Design Layout')
install_lighting = Transition(label='Install Lighting')
setup_hydroponics = Transition(label='Setup Hydroponics')
calibrate_sensors = Transition(label='Calibrate Sensors')
select_crops = Transition(label='Select Crops')
mix_nutrients = Transition(label='Mix Nutrients')
deploy_iot = Transition(label='Deploy IoT')
energy_audit = Transition(label='Energy Audit')
train_staff = Transition(label='Train Staff')
pest_control = Transition(label='Pest Control')
legal_review = Transition(label='Legal Review')
market_analysis = Transition(label='Market Analysis')
plan_logistics = Transition(label='Plan Logistics')
yield_review = Transition(label='Yield Review')

# Define the silent activities
skip_site_survey = SilentTransition(label='Site Survey')
skip_design_layout = SilentTransition(label='Design Layout')
skip_install_lighting = SilentTransition(label='Install Lighting')
skip_setup_hydroponics = SilentTransition(label='Setup Hydroponics')
skip_calibrate_sensors = SilentTransition(label='Calibrate Sensors')
skip_select_crops = SilentTransition(label='Select Crops')
skip_mix_nutrients = SilentTransition(label='Mix Nutrients')
skip_deploy_iot = SilentTransition(label='Deploy IoT')
skip_energy_audit = SilentTransition(label='Energy Audit')
skip_train_staff = SilentTransition(label='Train Staff')
skip_pest_control = SilentTransition(label='Pest Control')
skip_legal_review = SilentTransition(label='Legal Review')
skip_market_analysis = SilentTransition(label='Market Analysis')
skip_plan_logistics = SilentTransition(label='Plan Logistics')
skip_yield_review = SilentTransition(label='Yield Review')

# Define the choices and loops
site_survey_choice = OperatorPOWL(operator=Operator.XOR, children=[site_survey, skip_site_survey])
design_layout_choice = OperatorPOWL(operator=Operator.XOR, children=[design_layout, skip_design_layout])
install_lighting_choice = OperatorPOWL(operator=Operator.XOR, children=[install_lighting, skip_install_lighting])
setup_hydroponics_choice = OperatorPOWL(operator=Operator.XOR, children=[setup_hydroponics, skip_setup_hydroponics])
calibrate_sensors_choice = OperatorPOWL(operator=Operator.XOR, children=[calibrate_sensors, skip_calibrate_sensors])
select_crops_choice = OperatorPOWL(operator=Operator.XOR, children=[select_crops, skip_select_crops])
mix_nutrients_choice = OperatorPOWL(operator=Operator.XOR, children=[mix_nutrients, skip_mix_nutrients])
deploy_iot_choice = OperatorPOWL(operator=Operator.XOR, children=[deploy_iot, skip_deploy_iot])
energy_audit_choice = OperatorPOWL(operator=Operator.XOR, children=[energy_audit, skip_energy_audit])
train_staff_choice = OperatorPOWL(operator=Operator.XOR, children=[train_staff, skip_train_staff])
pest_control_choice = OperatorPOWL(operator=Operator.XOR, children=[pest_control, skip_pest_control])
legal_review_choice = OperatorPOWL(operator=Operator.XOR, children=[legal_review, skip_legal_review])
market_analysis_choice = OperatorPOWL(operator=Operator.XOR, children=[market_analysis, skip_market_analysis])
plan_logistics_choice = OperatorPOWL(operator=Operator.XOR, children=[plan_logistics, skip_plan_logistics])
yield_review_choice = OperatorPOWL(operator=Operator.XOR, children=[yield_review, skip_yield_review])

site_survey_loop = OperatorPOWL(operator=Operator.LOOP, children=[site_survey_choice])
design_layout_loop = OperatorPOWL(operator=Operator.LOOP, children=[design_layout_choice])
install_lighting_loop = OperatorPOWL(operator=Operator.LOOP, children=[install_lighting_choice])
setup_hydroponics_loop = OperatorPOWL(operator=Operator.LOOP, children=[setup_hydroponics_choice])
calibrate_sensors_loop = OperatorPOWL(operator=Operator.LOOP, children=[calibrate_sensors_choice])
select_crops_loop = OperatorPOWL(operator=Operator.LOOP, children=[select_crops_choice])
mix_nutrients_loop = OperatorPOWL(operator=Operator.LOOP, children=[mix_nutrients_choice])
deploy_iot_loop = OperatorPOWL(operator=Operator.LOOP, children=[deploy_iot_choice])
energy_audit_loop = OperatorPOWL(operator=Operator.LOOP, children=[energy_audit_choice])
train_staff_loop = OperatorPOWL(operator=Operator.LOOP, children=[train_staff_choice])
pest_control_loop = OperatorPOWL(operator=Operator.LOOP, children=[pest_control_choice])
legal_review_loop = OperatorPOWL(operator=Operator.LOOP, children=[legal_review_choice])
market_analysis_loop = OperatorPOWL(operator=Operator.LOOP, children=[market_analysis_choice])
plan_logistics_loop = OperatorPOWL(operator=Operator.LOOP, children=[plan_logistics_choice])
yield_review_loop = OperatorPOWL(operator=Operator.LOOP, children=[yield_review_choice])

# Define the partial order
root = StrictPartialOrder(nodes=[site_survey_loop, design_layout_loop, install_lighting_loop, setup_hydroponics_loop, calibrate_sensors_loop, select_crops_loop, mix_nutrients_loop, deploy_iot_loop, energy_audit_loop, train_staff_loop, pest_control_loop, legal_review_loop, market_analysis_loop, plan_logistics_loop, yield_review_loop])
root.order.add_edge(site_survey_loop, design_layout_loop)
root.order.add_edge(design_layout_loop, install_lighting_loop)
root.order.add_edge(install_lighting_loop, setup_hydroponics_loop)
root.order.add_edge(setup_hydroponics_loop, calibrate_sensors_loop)
root.order.add_edge(calibrate_sensors_loop, select_crops_loop)
root.order.add_edge(select_crops_loop, mix_nutrients_loop)
root.order.add_edge(mix_nutrients_loop, deploy_iot_loop)
root.order.add_edge(deploy_iot_loop, energy_audit_loop)
root.order.add_edge(energy_audit_loop, train_staff_loop)
root.order.add_edge(train_staff_loop, pest_control_loop)
root.order.add_edge(pest_control_loop, legal_review_loop)
root.order.add_edge(legal_review_loop, market_analysis_loop)
root.order.add_edge(market_analysis_loop, plan_logistics_loop)
root.order.add_edge(plan_logistics_loop, yield_review_loop)

return root