import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
milk_sourcing = Transition(label='Milk Sourcing')
culture_prep = Transition(label='Culture Prep')
milk_pasturize = Transition(label='Milk Pasteurize')
milk_inoculate = Transition(label='Milk Inoculate')
curd_form = Transition(label='Curd Formation')
curd_cut = Transition(label='Curd Cut')
whey_drain = Transition(label='Whey Drain')
mold_inoculate = Transition(label='Mold Inoculate')
press_cheese = Transition(label='Press Cheese')
aging_setup = Transition(label='Aging Setup')
humidity_control = Transition(label='Humidity Control')
temp_monitor = Transition(label='Temperature Monitor')
quality_test = Transition(label='Quality Test')
packaging = Transition(label='Packaging')
order_fulfill = Transition(label='Order Fulfill')
retail_deliver = Transition(label='Retail Deliver')
feedback_collect = Transition(label='Feedback Collect')
skip = SilentTransition()
milk_pasturize_to_milk_inoculate = OperatorPOWL(operator=Operator.XOR, children=[milk_pasturize, milk_inoculate])
culture_prep_to_milk_pasturize = OperatorPOWL(operator=Operator.XOR, children=[culture_prep, milk_pasturize])
curd_form_to_curd_cut = OperatorPOWL(operator=Operator.XOR, children=[curd_form, curd_cut])
curd_cut_to_whey_drain = OperatorPOWL(operator=Operator.XOR, children=[curd_cut, whey_drain])
milk_inoculate_to_curd_form = OperatorPOWL(operator=Operator.XOR, children=[milk_inoculate, curd_form])
whey_drain_to_mold_inoculate = OperatorPOWL(operator=Operator.XOR, children=[whey_drain, mold_inoculate])
mold_inoculate_to_press_cheese = OperatorPOWL(operator=Operator.XOR, children=[mold_inoculate, press_cheese])
aging_setup_to_humidity_control = OperatorPOWL(operator=Operator.XOR, children=[aging_setup, humidity_control])
aging_setup_to_temp_monitor = OperatorPOWL(operator=Operator.XOR, children=[aging_setup, temp_monitor])
mold_inoculate_to_press_cheese = OperatorPOWL(operator=Operator.XOR, children=[mold_inoculate, press_cheese])
press_cheese_to_quality_test = OperatorPOWL(operator=Operator.XOR, children=[press_cheese, quality_test])
quality_test_to_packaging = OperatorPOWL(operator=Operator.XOR, children=[quality_test, packaging])
packaging_to_order_fulfill = OperatorPOWL(operator=Operator.XOR, children=[packaging, order_fulfill])
order_fulfill_to_retail_deliver = OperatorPOWL(operator=Operator.XOR, children=[order_fulfill, retail_deliver])
retail_deliver_to_feedback_collect = OperatorPOWL(operator=Operator.XOR, children=[retail_deliver, feedback_collect])
loop1 = OperatorPOWL(operator=Operator.LOOP, children=[milk_sourcing, culture_prep_to_milk_pasturize])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[milk_pasturize_to_milk_inoculate, curd_form_to_curd_cut, curd_cut_to_whey_drain, whey_drain_to_mold_inoculate, mold_inoculate_to_press_cheese, press_cheese_to_quality_test, quality_test_to_packaging, packaging_to_order_fulfill, order_fulfill_to_retail_deliver, retail_deliver_to_feedback_collect])
root = StrictPartialOrder(nodes=[loop1, loop2])
root.order.add_edge(loop1, culture_prep_to_milk_pasturize)
root.order.add_edge(culture_prep_to_milk_pasturize, milk_pasturize_to_milk_inoculate)
root.order.add_edge(milk_pasturize_to_milk_inoculate, curd_form_to_curd_cut)
root.order.add_edge(curd_form_to_curd_cut, curd_cut_to_whey_drain)
root.order.add_edge(curd_cut_to_whey_drain, whey_drain_to_mold_inoculate)
root.order.add_edge(whey_drain_to_mold_inoculate, mold_inoculate_to_press_cheese)
root.order.add_edge(mold_inoculate_to_press_cheese, press_cheese_to_quality_test)
root.order.add_edge(press_cheese_to_quality_test, quality_test_to_packaging)
root.order.add_edge(quality_test_to_packaging, packaging_to_order_fulfill)
root.order.add_edge(packaging_to_order_fulfill, order_fulfill_to_retail_deliver)
root.order.add_edge(order_fulfill_to_retail_deliver, retail_deliver_to_feedback_collect)
root.order.add_edge(retail_deliver_to_feedback_collect, loop2)
root.order.add_edge(loop2, feedback_collect)