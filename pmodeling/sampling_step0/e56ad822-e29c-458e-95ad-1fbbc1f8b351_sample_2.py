import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
submit = Transition(label='Submit Artifact')
review = Transition(label='Initial Review')
provenance = Transition(label='Provenance Check')
material = Transition(label='Material Scan')
context = Transition(label='Context Analysis')
expert = Transition(label='Expert Panel')
fingerprint = Transition(label='Digital Fingerprint')
pattern = Transition(label='AI Pattern')
audit = Transition(label='Legal Audit')
ethics = Transition(label='Ethics Review')
fraud = Transition(label='Fraud Detection')
log = Transition(label='Blockchain Log')
certify = Transition(label='Certification')
notify = Transition(label='Owner Notify')
archive = Transition(label='Archive Data')
storage = Transition(label='Secure Storage')
skip = SilentTransition()
loop1 = OperatorPOWL(operator=Operator.LOOP, children=[provenance, material, context, expert, fingerprint, pattern, audit, ethics, fraud])
xor1 = OperatorPOWL(operator=Operator.XOR, children=[log, certify])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[notify, archive, storage])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[loop1, xor1, xor2])
root = StrictPartialOrder(nodes=[loop2])
root.order.add_edge(loop2, xor1)
root.order.add_edge(loop2, xor2)