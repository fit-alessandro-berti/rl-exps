import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
site_survey = Transition(label='Site Survey')
system_design = Transition(label='System Design')
climate_sim = Transition(label='Climate Sim')
seed_select = Transition(label='Seed Select')
module_setup = Transition(label='Module Setup')
nutrient_mix = Transition(label='Nutrient Mix')
water_cycle = Transition(label='Water Cycle')
energy_link = Transition(label='Energy Link')
sensor_install = Transition(label='Sensor Install')
pest_detect = Transition(label='Pest Detect')
growth_scan = Transition(label='Growth Scan')
data_sync = Transition(label='Data Sync')
community_meet = Transition(label='Community Meet')
reg_compliance = Transition(label='Reg Compliance')
system_test = Transition(label='System Test')
maintenance_plan = Transition(label='Maintenance Plan')
skip = SilentTransition()
site_survey_choice = OperatorPOWL(operator=Operator.XOR, children=[site_survey, system_design])
system_design_choice = OperatorPOWL(operator=Operator.XOR, children=[climate_sim, seed_select])
climate_sim_choice = OperatorPOWL(operator=Operator.XOR, children=[module_setup, nutrient_mix])
module_setup_choice = OperatorPOWL(operator=Operator.XOR, children=[water_cycle, energy_link])
water_cycle_choice = OperatorPOWL(operator=Operator.XOR, children=[sensor_install, pest_detect])
energy_link_choice = OperatorPOWL(operator=Operator.XOR, children=[growth_scan, data_sync])
sensor_install_choice = OperatorPOWL(operator=Operator.XOR, children=[community_meet, reg_compliance])
growth_scan_choice = OperatorPOWL(operator=Operator.XOR, children=[system_test, maintenance_plan])
loop1 = OperatorPOWL(operator=Operator.LOOP, children=[system_design_choice, climate_sim_choice])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[module_setup_choice, water_cycle_choice])
loop3 = OperatorPOWL(operator=Operator.LOOP, children=[energy_link_choice, sensor_install_choice])
loop4 = OperatorPOWL(operator=Operator.LOOP, children=[growth_scan_choice, system_test])
root = StrictPartialOrder(nodes=[site_survey_choice, loop1, loop2, loop3, loop4, system_design_choice, climate_sim_choice, module_setup_choice, water_cycle_choice, energy_link_choice, sensor_install_choice, growth_scan_choice, system_test])
root.order.add_edge(site_survey_choice, loop1)
root.order.add_edge(system_design_choice, loop2)
root.order.add_edge(climate_sim_choice, loop3)
root.order.add_edge(module_setup_choice, loop4)
root.order.add_edge(system_test, maintenance_plan)