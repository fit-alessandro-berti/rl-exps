import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define activities
client_consult = Transition(label='Client Consult')
payload_assess = Transition(label='Payload Assess')
drone_configure = Transition(label='Drone Configure')
regulation_check = Transition(label='Regulation Check')
flight_simulate = Transition(label='Flight Simulate')
route_optimize = Transition(label='Route Optimize')
package_secure = Transition(label='Package Secure')
pre_flight_inspect = Transition(label='Pre-Flight Inspect')
weather_monitor = Transition(label='Weather Monitor')
launch_drone = Transition(label='Launch Drone')
flight_track = Transition(label='Flight Track')
delivery_confirm = Transition(label='Delivery Confirm')
data_analyze = Transition(label='Data Analyze')
feedback_collect = Transition(label='Feedback Collect')
warranty_register = Transition(label='Warranty Register')
issue_resolve = Transition(label='Issue Resolve')
package_return = Transition(label='Package Return')

# Define silent activities (tau transitions)
skip = SilentTransition()

# Define loops and XORs
payload_loop = OperatorPOWL(operator=Operator.LOOP, children=[payload_assess, drone_configure, regulation_check, flight_simulate, route_optimize, package_secure, pre_flight_inspect, weather_monitor, launch_drone, flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_payload = OperatorPOWL(operator=Operator.XOR, children=[payload_loop, skip])
weather_monitor_loop = OperatorPOWL(operator=Operator.LOOP, children=[weather_monitor, launch_drone, flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_weather = OperatorPOWL(operator=Operator.XOR, children=[weather_monitor_loop, skip])
issue_resolve_loop = OperatorPOWL(operator=Operator.LOOP, children=[issue_resolve, package_return])
xor_issue = OperatorPOWL(operator=Operator.XOR, children=[issue_resolve_loop, skip])
warranty_register_loop = OperatorPOWL(operator=Operator.LOOP, children=[warranty_register, package_return])
xor_warranty = OperatorPOWL(operator=Operator.XOR, children=[warranty_register_loop, skip])
package_return_loop = OperatorPOWL(operator=Operator.LOOP, children=[package_return])
xor_package = OperatorPOWL(operator=Operator.XOR, children=[package_return_loop, skip])
flight_track_loop = OperatorPOWL(operator=Operator.LOOP, children=[flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_flight = OperatorPOWL(operator=Operator.XOR, children=[flight_track_loop, skip])
delivery_confirm_loop = OperatorPOWL(operator=Operator.LOOP, children=[delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_delivery = OperatorPOWL(operator=Operator.XOR, children=[delivery_confirm_loop, skip])
data_analyze_loop = OperatorPOWL(operator=Operator.LOOP, children=[data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_data = OperatorPOWL(operator=Operator.XOR, children=[data_analyze_loop, skip])
feedback_collect_loop = OperatorPOWL(operator=Operator.LOOP, children=[feedback_collect, warranty_register, issue_resolve, package_return])
xor_feedback = OperatorPOWL(operator=Operator.XOR, children=[feedback_collect_loop, skip])
warranty_register_loop = OperatorPOWL(operator=Operator.LOOP, children=[warranty_register, issue_resolve, package_return])
xor_warranty = OperatorPOWL(operator=Operator.XOR, children=[warranty_register_loop, skip])
issue_resolve_loop = OperatorPOWL(operator=Operator.LOOP, children=[issue_resolve, package_return])
xor_issue = OperatorPOWL(operator=Operator.XOR, children=[issue_resolve_loop, skip])
package_return_loop = OperatorPOWL(operator=Operator.LOOP, children=[package_return])
xor_package = OperatorPOWL(operator=Operator.XOR, children=[package_return_loop, skip])
weather_monitor_loop = OperatorPOWL(operator=Operator.LOOP, children=[weather_monitor, launch_drone, flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_weather = OperatorPOWL(operator=Operator.XOR, children=[weather_monitor_loop, skip])
launch_drone_loop = OperatorPOWL(operator=Operator.LOOP, children=[launch_drone, flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_launch = OperatorPOWL(operator=Operator.XOR, children=[launch_drone_loop, skip])
flight_track_loop = OperatorPOWL(operator=Operator.LOOP, children=[flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_flight = OperatorPOWL(operator=Operator.XOR, children=[flight_track_loop, skip])
delivery_confirm_loop = OperatorPOWL(operator=Operator.LOOP, children=[delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_delivery = OperatorPOWL(operator=Operator.XOR, children=[delivery_confirm_loop, skip])
data_analyze_loop = OperatorPOWL(operator=Operator.LOOP, children=[data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_data = OperatorPOWL(operator=Operator.XOR, children=[data_analyze_loop, skip])
feedback_collect_loop = OperatorPOWL(operator=Operator.LOOP, children=[feedback_collect, warranty_register, issue_resolve, package_return])
xor_feedback = OperatorPOWL(operator=Operator.XOR, children=[feedback_collect_loop, skip])
warranty_register_loop = OperatorPOWL(operator=Operator.LOOP, children=[warranty_register, issue_resolve, package_return])
xor_warranty = OperatorPOWL(operator=Operator.XOR, children=[warranty_register_loop, skip])
issue_resolve_loop = OperatorPOWL(operator=Operator.LOOP, children=[issue_resolve, package_return])
xor_issue = OperatorPOWL(operator=Operator.XOR, children=[issue_resolve_loop, skip])
package_return_loop = OperatorPOWL(operator=Operator.LOOP, children=[package_return])
xor_package = OperatorPOWL(operator=Operator.XOR, children=[package_return_loop, skip])
weather_monitor_loop = OperatorPOWL(operator=Operator.LOOP, children=[weather_monitor, launch_drone, flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_weather = OperatorPOWL(operator=Operator.XOR, children=[weather_monitor_loop, skip])
launch_drone_loop = OperatorPOWL(operator=Operator.LOOP, children=[launch_drone, flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_launch = OperatorPOWL(operator=Operator.XOR, children=[launch_drone_loop, skip])
flight_track_loop = OperatorPOWL(operator=Operator.LOOP, children=[flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_flight = OperatorPOWL(operator=Operator.XOR, children=[flight_track_loop, skip])
delivery_confirm_loop = OperatorPOWL(operator=Operator.LOOP, children=[delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_delivery = OperatorPOWL(operator=Operator.XOR, children=[delivery_confirm_loop, skip])
data_analyze_loop = OperatorPOWL(operator=Operator.LOOP, children=[data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_data = OperatorPOWL(operator=Operator.XOR, children=[data_analyze_loop, skip])
feedback_collect_loop = OperatorPOWL(operator=Operator.LOOP, children=[feedback_collect, warranty_register, issue_resolve, package_return])
xor_feedback = OperatorPOWL(operator=Operator.XOR, children=[feedback_collect_loop, skip])
warranty_register_loop = OperatorPOWL(operator=Operator.LOOP, children=[warranty_register, issue_resolve, package_return])
xor_warranty = OperatorPOWL(operator=Operator.XOR, children=[warranty_register_loop, skip])
issue_resolve_loop = OperatorPOWL(operator=Operator.LOOP, children=[issue_resolve, package_return])
xor_issue = OperatorPOWL(operator=Operator.XOR, children=[issue_resolve_loop, skip])
package_return_loop = OperatorPOWL(operator=Operator.LOOP, children=[package_return])
xor_package = OperatorPOWL(operator=Operator.XOR, children=[package_return_loop, skip])
weather_monitor_loop = OperatorPOWL(operator=Operator.LOOP, children=[weather_monitor, launch_drone, flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_weather = OperatorPOWL(operator=Operator.XOR, children=[weather_monitor_loop, skip])
launch_drone_loop = OperatorPOWL(operator=Operator.LOOP, children=[launch_drone, flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_launch = OperatorPOWL(operator=Operator.XOR, children=[launch_drone_loop, skip])
flight_track_loop = OperatorPOWL(operator=Operator.LOOP, children=[flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_flight = OperatorPOWL(operator=Operator.XOR, children=[flight_track_loop, skip])
delivery_confirm_loop = OperatorPOWL(operator=Operator.LOOP, children=[delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_delivery = OperatorPOWL(operator=Operator.XOR, children=[delivery_confirm_loop, skip])
data_analyze_loop = OperatorPOWL(operator=Operator.LOOP, children=[data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_data = OperatorPOWL(operator=Operator.XOR, children=[data_analyze_loop, skip])
feedback_collect_loop = OperatorPOWL(operator=Operator.LOOP, children=[feedback_collect, warranty_register, issue_resolve, package_return])
xor_feedback = OperatorPOWL(operator=Operator.XOR, children=[feedback_collect_loop, skip])
warranty_register_loop = OperatorPOWL(operator=Operator.LOOP, children=[warranty_register, issue_resolve, package_return])
xor_warranty = OperatorPOWL(operator=Operator.XOR, children=[warranty_register_loop, skip])
issue_resolve_loop = OperatorPOWL(operator=Operator.LOOP, children=[issue_resolve, package_return])
xor_issue = OperatorPOWL(operator=Operator.XOR, children=[issue_resolve_loop, skip])
package_return_loop = OperatorPOWL(operator=Operator.LOOP, children=[package_return])
xor_package = OperatorPOWL(operator=Operator.XOR, children=[package_return_loop, skip])
weather_monitor_loop = OperatorPOWL(operator=Operator.LOOP, children=[weather_monitor, launch_drone, flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_weather = OperatorPOWL(operator=Operator.XOR, children=[weather_monitor_loop, skip])
launch_drone_loop = OperatorPOWL(operator=Operator.LOOP, children=[launch_drone, flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_launch = OperatorPOWL(operator=Operator.XOR, children=[launch_drone_loop, skip])
flight_track_loop = OperatorPOWL(operator=Operator.LOOP, children=[flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_flight = OperatorPOWL(operator=Operator.XOR, children=[flight_track_loop, skip])
delivery_confirm_loop = OperatorPOWL(operator=Operator.LOOP, children=[delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_delivery = OperatorPOWL(operator=Operator.XOR, children=[delivery_confirm_loop, skip])
data_analyze_loop = OperatorPOWL(operator=Operator.LOOP, children=[data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_data = OperatorPOWL(operator=Operator.XOR, children=[data_analyze_loop, skip])
feedback_collect_loop = OperatorPOWL(operator=Operator.LOOP, children=[feedback_collect, warranty_register, issue_resolve, package_return])
xor_feedback = OperatorPOWL(operator=Operator.XOR, children=[feedback_collect_loop, skip])
warranty_register_loop = OperatorPOWL(operator=Operator.LOOP, children=[warranty_register, issue_resolve, package_return])
xor_warranty = OperatorPOWL(operator=Operator.XOR, children=[warranty_register_loop, skip])
issue_resolve_loop = OperatorPOWL(operator=Operator.LOOP, children=[issue_resolve, package_return])
xor_issue = OperatorPOWL(operator=Operator.XOR, children=[issue_resolve_loop, skip])
package_return_loop = OperatorPOWL(operator=Operator.LOOP, children=[package_return])
xor_package = OperatorPOWL(operator=Operator.XOR, children=[package_return_loop, skip])
weather_monitor_loop = OperatorPOWL(operator=Operator.LOOP, children=[weather_monitor, launch_drone, flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_weather = OperatorPOWL(operator=Operator.XOR, children=[weather_monitor_loop, skip])
launch_drone_loop = OperatorPOWL(operator=Operator.LOOP, children=[launch_drone, flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_launch = OperatorPOWL(operator=Operator.XOR, children=[launch_drone_loop, skip])
flight_track_loop = OperatorPOWL(operator=Operator.LOOP, children=[flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_flight = OperatorPOWL(operator=Operator.XOR, children=[flight_track_loop, skip])
delivery_confirm_loop = OperatorPOWL(operator=Operator.LOOP, children=[delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_delivery = OperatorPOWL(operator=Operator.XOR, children=[delivery_confirm_loop, skip])
data_analyze_loop = OperatorPOWL(operator=Operator.LOOP, children=[data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_data = OperatorPOWL(operator=Operator.XOR, children=[data_analyze_loop, skip])
feedback_collect_loop = OperatorPOWL(operator=Operator.LOOP, children=[feedback_collect, warranty_register, issue_resolve, package_return])
xor_feedback = OperatorPOWL(operator=Operator.XOR, children=[feedback_collect_loop, skip])
warranty_register_loop = OperatorPOWL(operator=Operator.LOOP, children=[warranty_register, issue_resolve, package_return])
xor_warranty = OperatorPOWL(operator=Operator.XOR, children=[warranty_register_loop, skip])
issue_resolve_loop = OperatorPOWL(operator=Operator.LOOP, children=[issue_resolve, package_return])
xor_issue = OperatorPOWL(operator=Operator.XOR, children=[issue_resolve_loop, skip])
package_return_loop = OperatorPOWL(operator=Operator.LOOP, children=[package_return])
xor_package = OperatorPOWL(operator=Operator.XOR, children=[package_return_loop, skip])
weather_monitor_loop = OperatorPOWL(operator=Operator.LOOP, children=[weather_monitor, launch_drone, flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_weather = OperatorPOWL(operator=Operator.XOR, children=[weather_monitor_loop, skip])
launch_drone_loop = OperatorPOWL(operator=Operator.LOOP, children=[launch_drone, flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_launch = OperatorPOWL(operator=Operator.XOR, children=[launch_drone_loop, skip])
flight_track_loop = OperatorPOWL(operator=Operator.LOOP, children=[flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_flight = OperatorPOWL(operator=Operator.XOR, children=[flight_track_loop, skip])
delivery_confirm_loop = OperatorPOWL(operator=Operator.LOOP, children=[delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_delivery = OperatorPOWL(operator=Operator.XOR, children=[delivery_confirm_loop, skip])
data_analyze_loop = OperatorPOWL(operator=Operator.LOOP, children=[data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_data = OperatorPOWL(operator=Operator.XOR, children=[data_analyze_loop, skip])
feedback_collect_loop = OperatorPOWL(operator=Operator.LOOP, children=[feedback_collect, warranty_register, issue_resolve, package_return])
xor_feedback = OperatorPOWL(operator=Operator.XOR, children=[feedback_collect_loop, skip])
warranty_register_loop = OperatorPOWL(operator=Operator.LOOP, children=[warranty_register, issue_resolve, package_return])
xor_warranty = OperatorPOWL(operator=Operator.XOR, children=[warranty_register_loop, skip])
issue_resolve_loop = OperatorPOWL(operator=Operator.LOOP, children=[issue_resolve, package_return])
xor_issue = OperatorPOWL(operator=Operator.XOR, children=[issue_resolve_loop, skip])
package_return_loop = OperatorPOWL(operator=Operator.LOOP, children=[package_return])
xor_package = OperatorPOWL(operator=Operator.XOR, children=[package_return_loop, skip])
weather_monitor_loop = OperatorPOWL(operator=Operator.LOOP, children=[weather_monitor, launch_drone, flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_weather = OperatorPOWL(operator=Operator.XOR, children=[weather_monitor_loop, skip])
launch_drone_loop = OperatorPOWL(operator=Operator.LOOP, children=[launch_drone, flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_launch = OperatorPOWL(operator=Operator.XOR, children=[launch_drone_loop, skip])
flight_track_loop = OperatorPOWL(operator=Operator.LOOP, children=[flight_track, delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_flight = OperatorPOWL(operator=Operator.XOR, children=[flight_track_loop, skip])
delivery_confirm_loop = OperatorPOWL(operator=Operator.LOOP, children=[delivery_confirm, data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_delivery = OperatorPOWL(operator=Operator.XOR, children=[delivery_confirm_loop, skip])
data_analyze_loop = OperatorPOWL(operator=Operator.LOOP, children=[data_analyze, feedback_collect, warranty_register, issue_resolve, package_return])
xor_data = OperatorPOWL(operator=Operator.XOR, children=[data_analyze_loop, skip])
feedback_collect_loop = OperatorPOWL(operator=Operator.LOOP, children=[feedback_collect, warranty_register, issue_resolve, package_return])
xor_feedback = OperatorPOWL(operator=Operator.XOR, children=[feedback_collect_loop, skip])
warranty_register_loop = OperatorPOWL(operator=Operator.LOOP, children=[warranty_register, issue_resolve, package_return])
xor_warranty = OperatorPOWL(operator=Operator.XOR, children=[warranty