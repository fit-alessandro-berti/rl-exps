import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
A = Transition(label='Trend Scan')
B = Transition(label='Idea Sprint')
C = Transition(label='Feasibility Check')
D = Transition(label='Risk Review')
E = Transition(label='Tech Prototype')
F = Transition(label='Market Simulate')
G = Transition(label='Stakeholder Align')
H = Transition(label='Budget Adjust')
I = Transition(label='Talent Source')
J = Transition(label='Pilot Launch')
K = Transition(label='Data Refine')
L = Transition(label='Scale Analysis')
M = Transition(label='Integration Plan')
N = Transition(label='Change Manage')
O = Transition(label='Knowledge Transfer')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O])
xor = OperatorPOWL(operator=Operator.XOR, children=[L, N])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[M, O])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[K, J])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[I, H])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[G, F])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[E, D])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[C, B])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[A, skip])
root = StrictPartialOrder(nodes=[xor8, xor7, xor6, xor5, xor4, xor3, xor2, xor, loop])
root.order.add_edge(xor8, xor7)
root.order.add_edge(xor7, xor6)
root.order.add_edge(xor6, xor5)
root.order.add_edge(xor5, xor4)
root.order.add_edge(xor4, xor3)
root.order.add_edge(xor3, xor2)
root.order.add_edge(xor2, xor)
root.order.add_edge(xor, loop)