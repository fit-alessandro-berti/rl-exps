import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
seed_selection = Transition(label='Seed Selection')
nutrient_mix = Transition(label='Nutrient Mix')
env_check = Transition(label='Environment Check')
planting_setup = Transition(label='Planting Setup')
growth_monitoring = Transition(label='Growth Monitoring')
pest_control = Transition(label='Pest Control')
automated_harvest = Transition(label='Automated Harvest')
quality_inspect = Transition(label='Quality Inspect')
packaging_prep = Transition(label='Packaging Prep')
order_fulfill = Transition(label='Order Fulfill')
local_delivery = Transition(label='Local Delivery')
waste_collect = Transition(label='Waste Collect')
biomass_process = Transition(label='Biomass Process')
compost_create = Transition(label='Compost Create')
energy_recover = Transition(label='Energy Recover')
regulation_review = Transition(label='Regulation Review')
community_engage = Transition(label='Community Engage')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[automated_harvest, quality_inspect, packaging_prep, order_fulfill, local_delivery])
xor = OperatorPOWL(operator=Operator.XOR, children=[waste_collect, biomass_process, compost_create, energy_recover])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[regulation_review, community_engage])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[seed_selection, nutrient_mix, env_check, planting_setup, growth_monitoring, pest_control])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[loop, xor, xor2, xor3])
root = StrictPartialOrder(nodes=[xor4])
root.order.add_edge(xor4, xor3)
root.order.add_edge(xor4, xor2)
root.order.add_edge(xor4, xor)
root.order.add_edge(xor4, loop)