A = Transition(label='Farm Visit')
B = Transition(label='Quality Cupping')
C = Transition(label='Sustainability Audit')
D = Transition(label='Contract Draft')
E = Transition(label='Price Negotiate')
F = Transition(label='Sample Testing')
G = Transition(label='Shipment Plan')
H = Transition(label='Customs Clear')
I = Transition(label='Inventory Update')
J = Transition(label='Supplier Review')
K = Transition(label='Risk Assess')
L = Transition(label='Forecast Adjust')
M = Transition(label='Payment Process')
N = Transition(label='Relationship Call')
O = Transition(label='Traceability Log')
P = Transition(label='Market Research')
Q = Transition(label='Compliance Check')

xor1 = OperatorPOWL(operator=Operator.XOR, children=[A, B])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[C, xor1])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[D, xor2])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[E, xor3])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[F, xor4])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[G, xor5])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[H, xor6])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[I, xor7])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[J, xor8])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[K, xor9])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[L, xor10])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[M, xor11])
xor13 = OperatorPOWL(operator=Operator.XOR, children=[N, xor12])
xor14 = OperatorPOWL(operator=Operator.XOR, children=[O, xor13])
xor15 = OperatorPOWL(operator=Operator.XOR, children=[P, xor14])
xor16 = OperatorPOWL(operator=Operator.XOR, children=[Q, xor15])

root = StrictPartialOrder(nodes=[xor16])
root.order.add_edge(xor1, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor6, xor7)
root.order.add_edge(xor7, xor8)
root.order.add_edge(xor8, xor9)
root.order.add_edge(xor9, xor10)
root.order.add_edge(xor10, xor11)
root.order.add_edge(xor11, xor12)
root.order.add_edge(xor12, xor13)
root.order.add_edge(xor13, xor14)
root.order.add_edge(xor14, xor15)
root.order.add_edge(xor15, xor16)