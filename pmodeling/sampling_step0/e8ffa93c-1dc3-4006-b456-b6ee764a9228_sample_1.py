from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition

# Define activities
site_survey = Transition(label='Site Survey')
env_analysis = Transition(label='Env Analysis')
structure_build = Transition(label='Structure Build')
hydroponics_fit = Transition(label='Hydroponics Fit')
nutrient_mix = Transition(label='Nutrient Mix')
climate_setup = Transition(label='Climate Setup')
energy_audit = Transition(label='Energy Audit')
crop_select = Transition(label='Crop Select')
pest_control = Transition(label='Pest Control')
growth_monitor = Transition(label='Growth Monitor')
harvest_plan = Transition(label='Harvest Plan')
waste_recycle = Transition(label='Waste Recycle')
community_meet = Transition(label='Community Meet')
supply_sync = Transition(label='Supply Sync')
data_review = Transition(label='Data Review')

# Define silent transitions
skip = SilentTransition()

# Define sub-processes
env_analysis_subprocess = StrictPartialOrder(nodes=[env_analysis, skip])
structure_build_subprocess = StrictPartialOrder(nodes=[structure_build, skip])
hydroponics_fit_subprocess = StrictPartialOrder(nodes=[hydroponics_fit, skip])
nutrient_mix_subprocess = StrictPartialOrder(nodes=[nutrient_mix, skip])
climate_setup_subprocess = StrictPartialOrder(nodes=[climate_setup, skip])
energy_audit_subprocess = StrictPartialOrder(nodes=[energy_audit, skip])
crop_select_subprocess = StrictPartialOrder(nodes=[crop_select, skip])
pest_control_subprocess = StrictPartialOrder(nodes=[pest_control, skip])
growth_monitor_subprocess = StrictPartialOrder(nodes=[growth_monitor, skip])
harvest_plan_subprocess = StrictPartialOrder(nodes=[harvest_plan, skip])
waste_recycle_subprocess = StrictPartialOrder(nodes=[waste_recycle, skip])
community_meet_subprocess = StrictPartialOrder(nodes=[community_meet, skip])
supply_sync_subprocess = StrictPartialOrder(nodes=[supply_sync, skip])
data_review_subprocess = StrictPartialOrder(nodes=[data_review, skip])

# Define loops
env_analysis_loop = OperatorPOWL(operator=Operator.LOOP, children=[env_analysis, skip])
structure_build_loop = OperatorPOWL(operator=Operator.LOOP, children=[structure_build, skip])
hydroponics_fit_loop = OperatorPOWL(operator=Operator.LOOP, children=[hydroponics_fit, skip])
nutrient_mix_loop = OperatorPOWL(operator=Operator.LOOP, children=[nutrient_mix, skip])
climate_setup_loop = OperatorPOWL(operator=Operator.LOOP, children=[climate_setup, skip])
energy_audit_loop = OperatorPOWL(operator=Operator.LOOP, children=[energy_audit, skip])
crop_select_loop = OperatorPOWL(operator=Operator.LOOP, children=[crop_select, skip])
pest_control_loop = OperatorPOWL(operator=Operator.LOOP, children=[pest_control, skip])
growth_monitor_loop = OperatorPOWL(operator=Operator.LOOP, children=[growth_monitor, skip])
harvest_plan_loop = OperatorPOWL(operator=Operator.LOOP, children=[harvest_plan, skip])
waste_recycle_loop = OperatorPOWL(operator=Operator.LOOP, children=[waste_recycle, skip])
community_meet_loop = OperatorPOWL(operator=Operator.LOOP, children=[community_meet, skip])
supply_sync_loop = OperatorPOWL(operator=Operator.LOOP, children=[supply_sync, skip])
data_review_loop = OperatorPOWL(operator=Operator.LOOP, children=[data_review, skip])

# Define exclusive choices
env_analysis_xor = OperatorPOWL(operator=Operator.XOR, children=[env_analysis_loop, energy_audit_loop])
structure_build_xor = OperatorPOWL(operator=Operator.XOR, children=[structure_build_loop, crop_select_loop])
hydroponics_fit_xor = OperatorPOWL(operator=Operator.XOR, children=[hydroponics_fit_loop, pest_control_loop])
nutrient_mix_xor = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix_loop, growth_monitor_loop])
climate_setup_xor = OperatorPOWL(operator=Operator.XOR, children=[climate_setup_loop, harvest_plan_loop])
energy_audit_xor = OperatorPOWL(operator=Operator.XOR, children=[energy_audit_loop, waste_recycle_loop])
crop_select_xor = OperatorPOWL(operator=Operator.XOR, children=[crop_select_loop, community_meet_loop])
pest_control_xor = OperatorPOWL(operator=Operator.XOR, children=[pest_control_loop, supply_sync_loop])
growth_monitor_xor = OperatorPOWL(operator=Operator.XOR, children=[growth_monitor_loop, data_review_loop])
harvest_plan_xor = OperatorPOWL(operator=Operator.XOR, children=[harvest_plan_loop, community_meet_loop])
waste_recycle_xor = OperatorPOWL(operator=Operator.XOR, children=[waste_recycle_loop, supply_sync_loop])
community_meet_xor = OperatorPOWL(operator=Operator.XOR, children=[community_meet_loop, data_review_loop])
supply_sync_xor = OperatorPOWL(operator=Operator.XOR, children=[supply_sync_loop, data_review_loop])
data_review_xor = OperatorPOWL(operator=Operator.XOR, children=[data_review_loop, data_review_loop])

# Define partial order
root = StrictPartialOrder(nodes=[env_analysis_xor, structure_build_xor, hydroponics_fit_xor, nutrient_mix_xor, climate_setup_xor, energy_audit_xor, crop_select_xor, pest_control_xor, growth_monitor_xor, harvest_plan_xor, waste_recycle_xor, community_meet_xor, supply_sync_xor, data_review_xor])
root.order.add_edge(env_analysis_xor, structure_build_xor)
root.order.add_edge(structure_build_xor, hydroponics_fit_xor)
root.order.add_edge(hydroponics_fit_xor, nutrient_mix_xor)
root.order.add_edge(nutrient_mix_xor, climate_setup_xor)
root.order.add_edge(climate_setup_xor, energy_audit_xor)
root.order.add_edge(energy_audit_xor, crop_select_xor)
root.order.add_edge(crop_select_xor, pest_control_xor)
root.order.add_edge(pest_control_xor, growth_monitor_xor)
root.order.add_edge(growth_monitor_xor, harvest_plan_xor)
root.order.add_edge(harvest_plan_xor, waste_recycle_xor)
root.order.add_edge(waste_recycle_xor, community_meet_xor)
root.order.add_edge(community_meet_xor, supply_sync_xor)
root.order.add_edge(supply_sync_xor, data_review_xor)
root.order.add_edge(data_review_xor, data_review_xor)