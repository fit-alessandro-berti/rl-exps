A = Transition(label='Client Onboard')
B = Transition(label='Needs Assess')
C = Transition(label='Drone Config')
D = Transition(label='Route Program')
E = Transition(label='Compliance Check')
F = Transition(label='Insurance Verify')
G = Transition(label='Lease Contract')
H = Transition(label='Fleet Deploy')
I = Transition(label='Monitor Setup')
J = Transition(label='Usage Track')
K = Transition(label='Maintenance Plan')
L = Transition(label='Incident Manage')
M = Transition(label='Billing Process')
N = Transition(label='Performance Report')
O = Transition(label='Contract Renew')
P = Transition(label='Price Adjust')
Q = Transition(label='Feedback Collect')
skip1 = SilentTransition()
skip2 = SilentTransition()
skip3 = SilentTransition()
skip4 = SilentTransition()
xor1 = OperatorPOWL(operator=Operator.XOR, children=[skip1, E])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[skip2, F])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[skip3, I])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[skip4, L])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[xor1, xor2])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[xor3, xor4])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[xor5, xor6])
loop1 = OperatorPOWL(operator=Operator.LOOP, children=[xor7])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[K])
loop3 = OperatorPOWL(operator=Operator.LOOP, children=[P])
loop4 = OperatorPOWL(operator=Operator.LOOP, children=[Q])
root = StrictPartialOrder(nodes=[loop1, loop2, loop3, loop4])
root.order.add_edge(loop1, xor7)
root.order.add_edge(loop2, K)
root.order.add_edge(loop3, P)
root.order.add_edge(loop4, Q)
root.order.add_edge(xor7, xor5)
root.order.add_edge(xor7, xor6)
root.order.add_edge(xor5, xor1)
root.order.add_edge(xor5, xor2)
root.order.add_edge(xor6, xor3)
root.order.add_edge(xor6, xor4)
root.order.add_edge(xor1, B)
root.order.add_edge(xor2, C)
root.order.add_edge(xor3, D)
root.order.add_edge(xor4, G)
root.order.add_edge(B, xor7)
root.order.add_edge(C, xor7)
root.order.add_edge(D, xor7)
root.order.add_edge(G, xor7)
root.order.add_edge(H, xor7)
root.order.add_edge(I, xor7)
root.order.add_edge(K, xor7)
root.order.add_edge(J, xor7)
root.order.add_edge(L, xor7)
root.order.add_edge(M, xor7)
root.order.add_edge(N, xor7)
root.order.add_edge(O, xor7)
root.order.add_edge(P, xor7)
root.order.add_edge(Q, xor7)
root.order.add_edge(xor1, xor5)
root.order.add_edge(xor2, xor6)
root.order.add_edge(xor3, xor5)
root.order.add_edge(xor4, xor6)