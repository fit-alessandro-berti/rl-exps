import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# define activities
SiteSurvey = Transition(label='Site Survey')
StructureReinforce = Transition(label='Structure Reinforce')
HydroponicSetup = Transition(label='Hydroponic Setup')
ClimateInstall = Transition(label='Climate Install')
AIIntegration = Transition(label='AI Integration')
SeedSourcing = Transition(label='Seed Sourcing')
NutrientPrep = Transition(label='Nutrient Prep')
SystemTesting = Transition(label='System Testing')
StaffTraining = Transition(label='Staff Training')
CropPlanting = Transition(label='Crop Planting')
GrowthMonitor = Transition(label='Growth Monitor')
PestControl = Transition(label='Pest Control')
HarvestSchedule = Transition(label='Harvest Schedule')
QualityCheck = Transition(label='Quality Check')
MarketDispatch = Transition(label='Market Dispatch')
WasteRecycle = Transition(label='Waste Recycle')
DataAnalysis = Transition(label='Data Analysis')

# define silent transitions
skip = SilentTransition()

# define sub-processes
SiteSurveySub = StrictPartialOrder(nodes=[SiteSurvey, StructureReinforce])
StructureReinforceSub = StrictPartialOrder(nodes=[StructureReinforce, HydroponicSetup])
HydroponicSetupSub = StrictPartialOrder(nodes=[HydroponicSetup, ClimateInstall])
ClimateInstallSub = StrictPartialOrder(nodes=[ClimateInstall, AIIntegration])
AIIntegrationSub = StrictPartialOrder(nodes=[AIIntegration, SeedSourcing])
SeedSourcingSub = StrictPartialOrder(nodes=[SeedSourcing, NutrientPrep])
NutrientPrepSub = StrictPartialOrder(nodes=[NutrientPrep, SystemTesting])
SystemTestingSub = StrictPartialOrder(nodes=[SystemTesting, StaffTraining])
StaffTrainingSub = StrictPartialOrder(nodes=[StaffTraining, CropPlanting])
CropPlantingSub = StrictPartialOrder(nodes=[CropPlanting, GrowthMonitor])
GrowthMonitorSub = StrictPartialOrder(nodes=[GrowthMonitor, PestControl])
PestControlSub = StrictPartialOrder(nodes=[PestControl, HarvestSchedule])
HarvestScheduleSub = StrictPartialOrder(nodes=[HarvestSchedule, QualityCheck])
QualityCheckSub = StrictPartialOrder(nodes=[QualityCheck, MarketDispatch])
MarketDispatchSub = StrictPartialOrder(nodes=[MarketDispatch, WasteRecycle])
WasteRecycleSub = StrictPartialOrder(nodes=[WasteRecycle, DataAnalysis])

# define loop sub-processes
SiteSurveyLoop = OperatorPOWL(operator=Operator.LOOP, children=[SiteSurvey, StructureReinforce])
StructureReinforceLoop = OperatorPOWL(operator=Operator.LOOP, children=[StructureReinforce, HydroponicSetup])
HydroponicSetupLoop = OperatorPOWL(operator=Operator.LOOP, children=[HydroponicSetup, ClimateInstall])
ClimateInstallLoop = OperatorPOWL(operator=Operator.LOOP, children=[ClimateInstall, AIIntegration])
AIIntegrationLoop = OperatorPOWL(operator=Operator.LOOP, children=[AIIntegration, SeedSourcing])
SeedSourcingLoop = OperatorPOWL(operator=Operator.LOOP, children=[SeedSourcing, NutrientPrep])
NutrientPrepLoop = OperatorPOWL(operator=Operator.LOOP, children=[NutrientPrep, SystemTesting])
SystemTestingLoop = OperatorPOWL(operator=Operator.LOOP, children=[SystemTesting, StaffTraining])
StaffTrainingLoop = OperatorPOWL(operator=Operator.LOOP, children=[StaffTraining, CropPlanting])
CropPlantingLoop = OperatorPOWL(operator=Operator.LOOP, children=[CropPlanting, GrowthMonitor])
GrowthMonitorLoop = OperatorPOWL(operator=Operator.LOOP, children=[GrowthMonitor, PestControl])
PestControlLoop = OperatorPOWL(operator=Operator.LOOP, children=[PestControl, HarvestSchedule])
HarvestScheduleLoop = OperatorPOWL(operator=Operator.LOOP, children=[HarvestSchedule, QualityCheck])
QualityCheckLoop = OperatorPOWL(operator=Operator.LOOP, children=[QualityCheck, MarketDispatch])
MarketDispatchLoop = OperatorPOWL(operator=Operator.LOOP, children=[MarketDispatch, WasteRecycle])
WasteRecycleLoop = OperatorPOWL(operator=Operator.LOOP, children=[WasteRecycle, DataAnalysis])

# define exclusive choices
SiteSurveyChoice = OperatorPOWL(operator=Operator.XOR, children=[SiteSurveyLoop, skip])
StructureReinforceChoice = OperatorPOWL(operator=Operator.XOR, children=[StructureReinforceLoop, skip])
HydroponicSetupChoice = OperatorPOWL(operator=Operator.XOR, children=[HydroponicSetupLoop, skip])
ClimateInstallChoice = OperatorPOWL(operator=Operator.XOR, children=[ClimateInstallLoop, skip])
AIIntegrationChoice = OperatorPOWL(operator=Operator.XOR, children=[AIIntegrationLoop, skip])
SeedSourcingChoice = OperatorPOWL(operator=Operator.XOR, children=[SeedSourcingLoop, skip])
NutrientPrepChoice = OperatorPOWL(operator=Operator.XOR, children=[NutrientPrepLoop, skip])
SystemTestingChoice = OperatorPOWL(operator=Operator.XOR, children=[SystemTestingLoop, skip])
StaffTrainingChoice = OperatorPOWL(operator=Operator.XOR, children=[StaffTrainingLoop, skip])
CropPlantingChoice = OperatorPOWL(operator=Operator.XOR, children=[CropPlantingLoop, skip])
GrowthMonitorChoice = OperatorPOWL(operator=Operator.XOR, children=[GrowthMonitorLoop, skip])
PestControlChoice = OperatorPOWL(operator=Operator.XOR, children=[PestControlLoop, skip])
HarvestScheduleChoice = OperatorPOWL(operator=Operator.XOR, children=[HarvestScheduleLoop, skip])
QualityCheckChoice = OperatorPOWL(operator=Operator.XOR, children=[QualityCheckLoop, skip])
MarketDispatchChoice = OperatorPOWL(operator=Operator.XOR, children=[MarketDispatchLoop, skip])
WasteRecycleChoice = OperatorPOWL(operator=Operator.XOR, children=[WasteRecycleLoop, skip])

# define root process
root = StrictPartialOrder(nodes=[SiteSurveyChoice, StructureReinforceChoice, HydroponicSetupChoice, ClimateInstallChoice, AIIntegrationChoice, SeedSourcingChoice, NutrientPrepChoice, SystemTestingChoice, StaffTrainingChoice, CropPlantingChoice, GrowthMonitorChoice, PestControlChoice, HarvestScheduleChoice, QualityCheckChoice, MarketDispatchChoice, WasteRecycleChoice])
root.order.add_edge(SiteSurveyChoice, StructureReinforceChoice)
root.order.add_edge(StructureReinforceChoice, HydroponicSetupChoice)
root.order.add_edge(HydroponicSetupChoice, ClimateInstallChoice)
root.order.add_edge(ClimateInstallChoice, AIIntegrationChoice)
root.order.add_edge(AIIntegrationChoice, SeedSourcingChoice)
root.order.add_edge(SeedSourcingChoice, NutrientPrepChoice)
root.order.add_edge(NutrientPrepChoice, SystemTestingChoice)
root.order.add_edge(SystemTestingChoice, StaffTrainingChoice)
root.order.add_edge(StaffTrainingChoice, CropPlantingChoice)
root.order.add_edge(CropPlantingChoice, GrowthMonitorChoice)
root.order.add_edge(GrowthMonitorChoice, PestControlChoice)
root.order.add_edge(PestControlChoice, HarvestScheduleChoice)
root.order.add_edge(HarvestScheduleChoice, QualityCheckChoice)
root.order.add_edge(QualityCheckChoice, MarketDispatchChoice)
root.order.add_edge(MarketDispatchChoice, WasteRecycleChoice)