from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition

# Define the transitions
QM = Transition(label='Quantum Modeling')
DE = Transition(label='Data Encoding')
RS = Transition(label='Route Simulation')
DF = Transition(label='Demand Forecast')
SS = Transition(label='Supplier Sync')
EN = Transition(label='Entangle Nodes')
RA = Transition(label='Risk Analysis')
IS = Transition(label='Inventory Scan')
LC = Transition(label='Latency Check')
TP = Transition(label='Transport Plan')
QC = Transition(label='Quantum Compute')
ST = Transition(label='Scenario Test')
RAA = Transition(label='Resource Align')
PU = Transition(label='Protocol Update')
FL = Transition(label='Feedback Loop')
CO = Transition(label='Cost Optimize')
IR = Transition(label='Impact Review')

# Define the silent transitions
S1 = SilentTransition()
S2 = SilentTransition()
S3 = SilentTransition()

# Define the operators
choice1 = OperatorPOWL(operator=Operator.XOR, children=[QM, S1])
choice2 = OperatorPOWL(operator=Operator.XOR, children=[DE, S2])
choice3 = OperatorPOWL(operator=Operator.XOR, children=[RS, S3])
choice4 = OperatorPOWL(operator=Operator.XOR, children=[DF, choice1])
choice5 = OperatorPOWL(operator=Operator.XOR, children=[SS, choice2])
choice6 = OperatorPOWL(operator=Operator.XOR, children=[EN, choice3])
choice7 = OperatorPOWL(operator=Operator.XOR, children=[RA, choice4])
choice8 = OperatorPOWL(operator=Operator.XOR, children=[IS, choice5])
choice9 = OperatorPOWL(operator=Operator.XOR, children=[LC, choice6])
choice10 = OperatorPOWL(operator=Operator.XOR, children=[TP, choice7])
choice11 = OperatorPOWL(operator=Operator.XOR, children=[QC, choice8])
choice12 = OperatorPOWL(operator=Operator.XOR, children=[ST, choice9])
choice13 = OperatorPOWL(operator=Operator.XOR, children=[RAA, choice10])
choice14 = OperatorPOWL(operator=Operator.XOR, children=[PU, choice11])
choice15 = OperatorPOWL(operator=Operator.XOR, children=[FL, choice12])
choice16 = OperatorPOWL(operator=Operator.XOR, children=[CO, choice13])
choice17 = OperatorPOWL(operator=Operator.XOR, children=[IR, choice14])

# Define the partial order
root = StrictPartialOrder(nodes=[choice17, choice16, choice15, choice14, choice13, choice12, choice11, choice10, choice9, choice8, choice7, choice6, choice5, choice4, choice3, choice2, choice1])
root.order.add_edge(choice17, choice16)
root.order.add_edge(choice16, choice15)
root.order.add_edge(choice15, choice14)
root.order.add_edge(choice14, choice13)
root.order.add_edge(choice13, choice12)
root.order.add_edge(choice12, choice11)
root.order.add_edge(choice11, choice10)
root.order.add_edge(choice10, choice9)
root.order.add_edge(choice9, choice8)
root.order.add_edge(choice8, choice7)
root.order.add_edge(choice7, choice6)
root.order.add_edge(choice6, choice5)
root.order.add_edge(choice5, choice4)
root.order.add_edge(choice4, choice3)
root.order.add_edge(choice3, choice2)
root.order.add_edge(choice2, choice1)