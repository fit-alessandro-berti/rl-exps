A = Transition(label='Site Survey')
B = Transition(label='Design Layout')
C = Transition(label='Structure Build')
D = Transition(label='System Install')
E = Transition(label='Climate Setup')
F = Transition(label='Nutrient Prep')
G = Transition(label='Seed Germinate')
H = Transition(label='Planting Phase')
I = Transition(label='Sensor Deploy')
J = Transition(label='Pest Control')
K = Transition(label='Water Monitor')
L = Transition(label='Data Analyze')
M = Transition(label='Staff Train')
N = Transition(label='Yield Forecast')
O = Transition(label='Community Meet')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[A, B])
xor = OperatorPOWL(operator=Operator.XOR, children=[C, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[D, E])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[F, G])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[H, I])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[J, K])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[L, M])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[N, O])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[xor4, xor5])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[xor6, xor7])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[xor8, xor9])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[xor10, xor3])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[xor2, xor11])
xor13 = OperatorPOWL(operator=Operator.XOR, children=[xor12, xor])
xor14 = OperatorPOWL(operator=Operator.XOR, children=[xor13, xor1])
root = StrictPartialOrder(nodes=[xor14])
root.order.add_edge(xor14, xor13)
root.order.add_edge(xor13, xor12)
root.order.add_edge(xor12, xor11)
root.order.add_edge(xor11, xor10)
root.order.add_edge(xor10, xor9)
root.order.add_edge(xor9, xor8)
root.order.add_edge(xor8, xor7)
root.order.add_edge(xor7, xor6)
root.order.add_edge(xor6, xor5)
root.order.add_edge(xor5, xor4)
root.order.add_edge(xor4, xor3)
root.order.add_edge(xor3, xor2)
root.order.add_edge(xor2, xor)
root.order.add_edge(xor, xor1)
root.order.add_edge(xor1, xor14)