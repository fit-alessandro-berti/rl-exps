import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

permit = Transition(label='Permit Securing')
check = Transition(label='Structure Check')
soil = Transition(label='Soil Testing')
water = Transition(label='Water Analysis')
sourcing = Transition(label='Material Sourcing')
planter = Transition(label='Planter Setup')
sensor = Transition(label='Sensor Install')
irrigation = Transition(label='Irrigation Setup')
vendor = Transition(label='Vendor Liaison')
staff = Transition(label='Staff Training')
pest = Transition(label='Pest Control')
marketing = Transition(label='Produce Marketing')
rotation = Transition(label='Crop Rotation')
health = Transition(label='Health Audit')
waste = Transition(label='Waste Composting')
skip = SilentTransition()

permit_check = OperatorPOWL(operator=Operator.XOR, children=[permit, check])
soil_water = OperatorPOWL(operator=Operator.XOR, children=[soil, water])
material_sourcing = OperatorPOWL(operator=Operator.XOR, children=[sourcing, skip])
planter_sensor = OperatorPOWL(operator=Operator.XOR, children=[planter, sensor])
irrigation_vendor = OperatorPOWL(operator=Operator.XOR, children=[irrigation, vendor])
staff_training = OperatorPOWL(operator=Operator.XOR, children=[staff, skip])
pest_control = OperatorPOWL(operator=Operator.XOR, children=[pest, skip])
produce_marketing = OperatorPOWL(operator=Operator.XOR, children=[marketing, skip])
crop_rotation = OperatorPOWL(operator=Operator.XOR, children=[rotation, skip])
health_audit = OperatorPOWL(operator=Operator.XOR, children=[health, skip])
waste_composting = OperatorPOWL(operator=Operator.XOR, children=[waste, skip])

permit_check_loop = OperatorPOWL(operator=Operator.LOOP, children=[permit_check])
soil_water_loop = OperatorPOWL(operator=Operator.LOOP, children=[soil_water])
material_sourcing_loop = OperatorPOWL(operator=Operator.LOOP, children=[material_sourcing])
planter_sensor_loop = OperatorPOWL(operator=Operator.LOOP, children=[planter_sensor])
irrigation_vendor_loop = OperatorPOWL(operator=Operator.LOOP, children=[irrigation_vendor])
staff_training_loop = OperatorPOWL(operator=Operator.LOOP, children=[staff_training])
pest_control_loop = OperatorPOWL(operator=Operator.LOOP, children=[pest_control])
produce_marketing_loop = OperatorPOWL(operator=Operator.LOOP, children=[produce_marketing])
crop_rotation_loop = OperatorPOWL(operator=Operator.LOOP, children=[crop_rotation])
health_audit_loop = OperatorPOWL(operator=Operator.LOOP, children=[health_audit])
waste_composting_loop = OperatorPOWL(operator=Operator.LOOP, children=[waste_composting])

root = StrictPartialOrder(nodes=[permit_check_loop, soil_water_loop, material_sourcing_loop, planter_sensor_loop, irrigation_vendor_loop, staff_training_loop, pest_control_loop, produce_marketing_loop, crop_rotation_loop, health_audit_loop, waste_composting_loop])
root.order.add_edge(permit_check_loop, soil_water_loop)
root.order.add_edge(soil_water_loop, material_sourcing_loop)
root.order.add_edge(material_sourcing_loop, planter_sensor_loop)
root.order.add_edge(planter_sensor_loop, irrigation_vendor_loop)
root.order.add_edge(irrigation_vendor_loop, staff_training_loop)
root.order.add_edge(staff_training_loop, pest_control_loop)
root.order.add_edge(pest_control_loop, produce_marketing_loop)
root.order.add_edge(produce_marketing_loop, crop_rotation_loop)
root.order.add_edge(crop_rotation_loop, health_audit_loop)
root.order.add_edge(health_audit_loop, waste_composting_loop)