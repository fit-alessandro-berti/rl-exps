from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define transitions for each activity
inquiry = Transition(label='Inquiry Intake')
consultation = Transition(label='Consultation Call')
concept_draft = Transition(label='Concept Draft')
feedback = Transition(label='Feedback Loop')
contract = Transition(label='Contract Setup')
artist_match = Transition(label='Artist Match')
material_sourcing = Transition(label='Material Sourcing')
ethics = Transition(label='Ethics Review')
progress = Transition(label='Progress Check')
milestone = Transition(label='Milestone Approve')
quality = Transition(label='Quality Audit')
copyright = Transition(label='Copyright Transfer')
packaging = Transition(label='Packaging Plan')
shipping = Transition(label='Shipping Arrange')
post_delivery = Transition(label='Post Delivery')
survey = Transition(label='Client Survey')

# Define silent transitions
skip_inquiry = SilentTransition()
skip_consultation = SilentTransition()
skip_concept_draft = SilentTransition()
skip_feedback = SilentTransition()
skip_contract = SilentTransition()
skip_artist_match = SilentTransition()
skip_material_sourcing = SilentTransition()
skip_ethics = SilentTransition()
skip_progress = SilentTransition()
skip_milestone = SilentTransition()
skip_quality = SilentTransition()
skip_copyright = SilentTransition()
skip_packaging = SilentTransition()
skip_shipping = SilentTransition()
skip_post_delivery = SilentTransition()
skip_survey = SilentTransition()

# Define loops and exclusive choices
loop_inquiry = OperatorPOWL(operator=Operator.LOOP, children=[inquiry, skip_inquiry])
loop_consultation = OperatorPOWL(operator=Operator.LOOP, children=[consultation, skip_consultation])
loop_concept_draft = OperatorPOWL(operator=Operator.LOOP, children=[concept_draft, skip_concept_draft])
loop_feedback = OperatorPOWL(operator=Operator.LOOP, children=[feedback, skip_feedback])
loop_contract = OperatorPOWL(operator=Operator.LOOP, children=[contract, skip_contract])
loop_artist_match = OperatorPOWL(operator=Operator.LOOP, children=[artist_match, skip_artist_match])
loop_material_sourcing = OperatorPOWL(operator=Operator.LOOP, children=[material_sourcing, skip_material_sourcing])
loop_ethics = OperatorPOWL(operator=Operator.LOOP, children=[ethics, skip_ethics])
loop_progress = OperatorPOWL(operator=Operator.LOOP, children=[progress, skip_progress])
loop_milestone = OperatorPOWL(operator=Operator.LOOP, children=[milestone, skip_milestone])
loop_quality = OperatorPOWL(operator=Operator.LOOP, children=[quality, skip_quality])
loop_copyright = OperatorPOWL(operator=Operator.LOOP, children=[copyright, skip_copyright])
loop_packaging = OperatorPOWL(operator=Operator.LOOP, children=[packaging, skip_packaging])
loop_shipping = OperatorPOWL(operator=Operator.LOOP, children=[shipping, skip_shipping])
loop_post_delivery = OperatorPOWL(operator=Operator.LOOP, children=[post_delivery, skip_post_delivery])
loop_survey = OperatorPOWL(operator=Operator.LOOP, children=[survey, skip_survey])

# Define exclusive choices
xor_inquiry = OperatorPOWL(operator=Operator.XOR, children=[loop_inquiry, skip_inquiry])
xor_consultation = OperatorPOWL(operator=Operator.XOR, children=[loop_consultation, skip_consultation])
xor_concept_draft = OperatorPOWL(operator=Operator.XOR, children=[loop_concept_draft, skip_concept_draft])
xor_feedback = OperatorPOWL(operator=Operator.XOR, children=[loop_feedback, skip_feedback])
xor_contract = OperatorPOWL(operator=Operator.XOR, children=[loop_contract, skip_contract])
xor_artist_match = OperatorPOWL(operator=Operator.XOR, children=[loop_artist_match, skip_artist_match])
xor_material_sourcing = OperatorPOWL(operator=Operator.XOR, children=[loop_material_sourcing, skip_material_sourcing])
xor_ethics = OperatorPOWL(operator=Operator.XOR, children=[loop_ethics, skip_ethics])
xor_progress = OperatorPOWL(operator=Operator.XOR, children=[loop_progress, skip_progress])
xor_milestone = OperatorPOWL(operator=Operator.XOR, children=[loop_milestone, skip_milestone])
xor_quality = OperatorPOWL(operator=Operator.XOR, children=[loop_quality, skip_quality])
xor_copyright = OperatorPOWL(operator=Operator.XOR, children=[loop_copyright, skip_copyright])
xor_packaging = OperatorPOWL(operator=Operator.XOR, children=[loop_packaging, skip_packaging])
xor_shipping = OperatorPOWL(operator=Operator.XOR, children=[loop_shipping, skip_shipping])
xor_post_delivery = OperatorPOWL(operator=Operator.XOR, children=[loop_post_delivery, skip_post_delivery])
xor_survey = OperatorPOWL(operator=Operator.XOR, children=[loop_survey, skip_survey])

# Define root POWL model
root = StrictPartialOrder(nodes=[xor_inquiry, xor_consultation, xor_concept_draft, xor_feedback, xor_contract, xor_artist_match, xor_material_sourcing, xor_ethics, xor_progress, xor_milestone, xor_quality, xor_copyright, xor_packaging, xor_shipping, xor_post_delivery, xor_survey])
root.order.add_edge(xor_inquiry, xor_consultation)
root.order.add_edge(xor_consultation, xor_concept_draft)
root.order.add_edge(xor_concept_draft, xor_feedback)
root.order.add_edge(xor_feedback, xor_contract)
root.order.add_edge(xor_contract, xor_artist_match)
root.order.add_edge(xor_artist_match, xor_material_sourcing)
root.order.add_edge(xor_material_sourcing, xor_ethics)
root.order.add_edge(xor_ethics, xor_progress)
root.order.add_edge(xor_progress, xor_milestone)
root.order.add_edge(xor_milestone, xor_quality)
root.order.add_edge(xor_quality, xor_copyright)
root.order.add_edge(xor_copyright, xor_packaging)
root.order.add_edge(xor_packaging, xor_shipping)
root.order.add_edge(xor_shipping, xor_post_delivery)
root.order.add_edge(xor_post_delivery, xor_survey)

print(root)