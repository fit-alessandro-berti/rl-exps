A = Transition(label='Artifact Intake')
B = Transition(label='Visual Inspection')
C = Transition(label='Material Testing')
D = Transition(label='Radiocarbon Dating')
E = Transition(label='Provenance Check')
F = Transition(label='Archive Research')
G = Transition(label='Expert Review')
H = Transition(label='Style Analysis')
I = Transition(label='Craftsmanship Eval')
J = Transition(label='Condition Check')
K = Transition(label='Restoration Plan')
L = Transition(label='Forgery Risk')
M = Transition(label='Legal Review')
N = Transition(label='Report Drafting')
O = Transition(label='Catalog Entry')
skip = SilentTransition()
xor = OperatorPOWL(operator=Operator.XOR, children=[skip, M])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[skip, L])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[skip, K])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[skip, J])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[skip, I])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[skip, H])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[skip, G])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[skip, F])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[skip, E])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[skip, D])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[skip, C])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[skip, B])
xor13 = OperatorPOWL(operator=Operator.XOR, children=[skip, A])
loop = OperatorPOWL(operator=Operator.LOOP, children=[xor, xor2, xor3, xor4, xor5, xor6, xor7, xor8, xor9, xor10, xor11, xor12, xor13])
root = StrictPartialOrder(nodes=[loop])
root.order.add_edge(loop, xor)
root.order.add_edge(xor, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor6, xor7)
root.order.add_edge(xor7, xor8)
root.order.add_edge(xor8, xor9)
root.order.add_edge(xor9, xor10)
root.order.add_edge(xor10, xor11)
root.order.add_edge(xor11, xor12)
root.order.add_edge(xor12, xor13)
root.order.add_edge(xor13, loop)