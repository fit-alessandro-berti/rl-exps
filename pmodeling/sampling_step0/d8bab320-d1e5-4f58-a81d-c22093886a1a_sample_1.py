import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
# Define the activities
milk_sourcing = Transition(label='Milk Sourcing')
culture_selection = Transition(label='Culture Selection')
milk_pasturize = Transition(label='Milk Pasteurize')
curd_formation = Transition(label='Curd Formation')
whey_separation = Transition(label='Whey Separation')
mold_inoculate = Transition(label='Mold Inoculate')
cheese_pressing = Transition(label='Cheese Pressing')
aging_setup = Transition(label='Aging Setup')
humidity_control = Transition(label='Humidity Control')
flavor_testing = Transition(label='Flavor Testing')
packaging_design = Transition(label='Packaging Design')
label_approval = Transition(label='Label Approval')
order_forecast = Transition(label='Order Forecast')
regulation_audit = Transition(label='Regulation Audit')
waste_recycling = Transition(label='Waste Recycling')
market_delivery = Transition(label='Market Delivery')
customer_feedback = Transition(label='Customer Feedback')
# Define the control flow
loop1 = OperatorPOWL(operator=OperatorPOWL.LOOP, children=[milk_sourcing, culture_selection, milk_pasturize, curd_formation, whey_separation, mold_inoculate, cheese_pressing])
loop2 = OperatorPOWL(operator=OperatorPOWL.LOOP, children=[aging_setup, humidity_control, flavor_testing, packaging_design, label_approval])
loop3 = OperatorPOWL(operator=OperatorPOWL.LOOP, children=[order_forecast, regulation_audit, waste_recycling, market_delivery, customer_feedback])
xor1 = OperatorPOWL(operator=OperatorPOWL.XOR, children=[loop1, loop2])
xor2 = OperatorPOWL(operator=OperatorPOWL.XOR, children=[xor1, loop3])
# Define the root of the POWL model
root = StrictPartialOrder(nodes=[xor2])
root.order.add_edge(xor2, loop1)
root.order.add_edge(xor2, loop2)
root.order.add_edge(xor2, loop3)