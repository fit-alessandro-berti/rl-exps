import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
# Define the transitions
material_sourcing = Transition(label='Material Sourcing')
cultural_verify = Transition(label='Cultural Verify')
eco_transport = Transition(label='Eco Transport')
batch_storytelling = Transition(label='Batch Storytelling')
craftsman_assignment = Transition(label='Craftsman Assignment')
product_creation = Transition(label='Product Creation')
provenance_catalog = Transition(label='Provenance Catalog')
community_marketing = Transition(label='Community Marketing')
collector_targeting = Transition(label='Collector Targeting')
package_assembly = Transition(label='Package Assembly')
local_cooperatives = Transition(label='Local Cooperatives')
environmental_audit = Transition(label='Environmental Audit')
ethical_logistics = Transition(label='Ethical Logistics')
global_shipping = Transition(label='Global Shipping')
feedback_collection = Transition(label='Feedback Collection')
# Define the operators
material_sourcing_cultural_verify = OperatorPOWL(operator=Operator.XOR, children=[material_sourcing, cultural_verify])
material_sourcing_cultural_verify_eco_transport = OperatorPOWL(operator=Operator.XOR, children=[material_sourcing_cultural_verify, eco_transport])
material_sourcing_cultural_verify_eco_transport_batch_storytelling = OperatorPOWL(operator=Operator.XOR, children=[material_sourcing_cultural_verify_eco_transport, batch_storytelling])
material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment = OperatorPOWL(operator=Operator.XOR, children=[material_sourcing_cultural_verify_eco_transport_batch_storytelling, craftsman_assignment])
material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation = OperatorPOWL(operator=Operator.XOR, children=[material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment, product_creation])
material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog = OperatorPOWL(operator=Operator.XOR, children=[material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation, provenance_catalog])
material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing = OperatorPOWL(operator=Operator.XOR, children=[material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog, community_marketing])
material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting = OperatorPOWL(operator=Operator.XOR, children=[material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing, collector_targeting])
material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly = OperatorPOWL(operator=Operator.XOR, children=[material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting, package_assembly])
material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives = OperatorPOWL(operator=Operator.XOR, children=[material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly, local_cooperatives])
material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit = OperatorPOWL(operator=Operator.XOR, children=[material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives, environmental_audit])
material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit_ethical_logistics = OperatorPOWL(operator=Operator.XOR, children=[material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit, ethical_logistics])
material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit_ethical_logistics_global_shipping = OperatorPOWL(operator=Operator.XOR, children=[material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit_ethical_logistics, global_shipping])
material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit_ethical_logistics_global_shipping_feedback_collection = OperatorPOWL(operator=Operator.XOR, children=[material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit_ethical_logistics_global_shipping, feedback_collection])
# Define the root
root = StrictPartialOrder(nodes=[material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit_ethical_logistics_global_shipping_feedback_collection])
# Add the edges
root.order.add_edge(material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit_ethical_logistics_global_shipping_feedback_collection, material_sourcing)
root.order.add_edge(material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit_ethical_logistics_global_shipping_feedback_collection, cultural_verify)
root.order.add_edge(material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit_ethical_logistics_global_shipping_feedback_collection, eco_transport)
root.order.add_edge(material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit_ethical_logistics_global_shipping_feedback_collection, batch_storytelling)
root.order.add_edge(material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit_ethical_logistics_global_shipping_feedback_collection, craftsman_assignment)
root.order.add_edge(material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit_ethical_logistics_global_shipping_feedback_collection, product_creation)
root.order.add_edge(material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit_ethical_logistics_global_shipping_feedback_collection, provenance_catalog)
root.order.add_edge(material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit_ethical_logistics_global_shipping_feedback_collection, community_marketing)
root.order.add_edge(material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit_ethical_logistics_global_shipping_feedback_collection, collector_targeting)
root.order.add_edge(material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit_ethical_logistics_global_shipping_feedback_collection, package_assembly)
root.order.add_edge(material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit_ethical_logistics_global_shipping_feedback_collection, local_cooperatives)
root.order.add_edge(material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit_ethical_logistics_global_shipping_feedback_collection, environmental_audit)
root.order.add_edge(material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit_ethical_logistics_global_shipping_feedback_collection, ethical_logistics)
root.order.add_edge(material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit_ethical_logistics_global_shipping_feedback_collection, global_shipping)
root.order.add_edge(material_sourcing_cultural_verify_eco_transport_batch_storytelling_craftsman_assignment_product_creation_provenance_catalog_community_marketing_collector_targeting_package_assembly_local_cooperatives_environmental_audit_ethical_logistics_global_shipping_feedback_collection, feedback_collection)
# Print the root
print(root)