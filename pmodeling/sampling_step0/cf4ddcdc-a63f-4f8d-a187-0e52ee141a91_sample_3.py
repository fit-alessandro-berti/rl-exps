import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
root = StrictPartialOrder()
ReturnRequest = Transition(label='Return Request')
AuthorizationCheck = Transition(label='Authorization Check')
PickupSchedule = Transition(label='Pickup Schedule')
TransportDispatch = Transition(label='Transport Dispatch')
ReceivingGoods = Transition(label='Receiving Goods')
QualityInspect = Transition(label='Quality Inspect')
SortItems = Transition(label='Sort Items')
RefurbishPrep = Transition(label='Refurbish Prep')
RecycleProcess = Transition(label='Recycle Process')
InventoryUpdate = Transition(label='Inventory Update')
CustomerNotify = Transition(label='Customer Notify')
DisposalArrange = Transition(label='Disposal Arrange')
ComplianceAudit = Transition(label='Compliance Audit')
CostAnalysis = Transition(label='Cost Analysis')
ReportGenerate = Transition(label='Report Generate')

# Define the process steps
return_request = OperatorPOWL(operator=Operator.SILENT, children=[ReturnRequest])
authorization_check = OperatorPOWL(operator=Operator.SILENT, children=[AuthorizationCheck])
pickup_schedule = OperatorPOWL(operator=Operator.SILENT, children=[PickupSchedule])
transport_dispatch = OperatorPOWL(operator=Operator.SILENT, children=[TransportDispatch])
receiving_goods = OperatorPOWL(operator=Operator.SILENT, children=[ReceivingGoods])
quality_inspect = OperatorPOWL(operator=Operator.SILENT, children=[QualityInspect])
sort_items = OperatorPOWL(operator=Operator.SILENT, children=[SortItems])
refurbish_prep = OperatorPOWL(operator=Operator.SILENT, children=[RefurbishPrep])
recycle_process = OperatorPOWL(operator=Operator.SILENT, children=[RecycleProcess])
inventory_update = OperatorPOWL(operator=Operator.SILENT, children=[InventoryUpdate])
customer_notify = OperatorPOWL(operator=Operator.SILENT, children=[CustomerNotify])
disposal_arrange = OperatorPOWL(operator=Operator.SILENT, children=[DisposalArrange])
compliance_audit = OperatorPOWL(operator=Operator.SILENT, children=[ComplianceAudit])
cost_analysis = OperatorPOWL(operator=Operator.SILENT, children=[CostAnalysis])
report_generate = OperatorPOWL(operator=Operator.SILENT, children=[ReportGenerate])

# Define the process flow
root.order.add_edge(return_request, authorization_check)
root.order.add_edge(authorization_check, pickup_schedule)
root.order.add_edge(pickup_schedule, transport_dispatch)
root.order.add_edge(transport_dispatch, receiving_goods)
root.order.add_edge(receiving_goods, quality_inspect)
root.order.add_edge(quality_inspect, sort_items)
root.order.add_edge(sort_items, refurbish_prep)
root.order.add_edge(refurbish_prep, recycle_process)
root.order.add_edge(recycle_process, inventory_update)
root.order.add_edge(inventory_update, customer_notify)
root.order.add_edge(customer_notify, disposal_arrange)
root.order.add_edge(disposal_arrange, compliance_audit)
root.order.add_edge(compliance_audit, cost_analysis)
root.order.add_edge(cost_analysis, report_generate)

print(root)