from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

concept_approve = Transition(label='Concept Approve')
budget_align = Transition(label='Budget Align')
design_review = Transition(label='Design Review')
structure_simulate = Transition(label='Structure Simulate')
material_procure = Transition(label='Material Procure')
vendor_select = Transition(label='Vendor Select')
permit_apply = Transition(label='Permit Apply')
safety_check = Transition(label='Safety Check')
site_prep = Transition(label='Site Prep')
logistics_plan = Transition(label='Logistics Plan')
fabricate_parts = Transition(label='Fabricate Parts')
assemble_onsite = Transition(label='Assemble Onsite')
quality_inspect = Transition(label='Quality Inspect')
weather_monitor = Transition(label='Weather Monitor')
public_unveil = Transition(label='Public Unveil')
maintenance_plan = Transition(label='Maintenance Plan')
stakeholder_meet = Transition(label='Stakeholder Meet')

skip = SilentTransition()

loop = OperatorPOWL(operator=Operator.LOOP, children=[fabricate_parts, assemble_onsite])
xor = OperatorPOWL(operator=Operator.XOR, children=[weather_monitor, quality_inspect])

root = StrictPartialOrder(nodes=[permit_apply, safety_check, site_prep, logistics_plan, loop, xor, public_unveil, maintenance_plan, stakeholder_meet])
root.order.add_edge(permit_apply, safety_check)
root.order.add_edge(permit_apply, site_prep)
root.order.add_edge(permit_apply, logistics_plan)
root.order.add_edge(safety_check, site_prep)
root.order.add_edge(site_prep, logistics_plan)
root.order.add_edge(logistics_plan, loop)
root.order.add_edge(loop, xor)
root.order.add_edge(xor, public_unveil)
root.order.add_edge(public_unveil, maintenance_plan)
root.order.add_edge(maintenance_plan, stakeholder_meet)