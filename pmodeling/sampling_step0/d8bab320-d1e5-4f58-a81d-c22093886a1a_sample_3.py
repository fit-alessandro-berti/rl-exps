import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

Milk_Sourcing = Transition(label='Milk Sourcing')
Culture_Selection = Transition(label='Culture Selection')
Milk_Pasteurize = Transition(label='Milk Pasteurize')
Curd_Formation = Transition(label='Curd Formation')
Whey_Separation = Transition(label='Whey Separation')
Mold_Inoculate = Transition(label='Mold Inoculate')
Cheese_Pressing = Transition(label='Cheese Pressing')
Aging_Setup = Transition(label='Aging Setup')
Humidity_Control = Transition(label='Humidity Control')
Flavor_Testing = Transition(label='Flavor Testing')
Packaging_Design = Transition(label='Packaging Design')
Label_Approval = Transition(label='Label Approval')
Order_Forecast = Transition(label='Order Forecast')
Regulation_Audit = Transition(label='Regulation Audit')
Waste_Recycling = Transition(label='Waste Recycling')
Market_Delivery = Transition(label='Market Delivery')
Customer_Feedback = Transition(label='Customer Feedback')
skip = SilentTransition()

Milk_Pasteurize_child = OperatorPOWL(operator=Operator.XOR, children=[Culture_Selection, skip])
Culture_Selection_child = OperatorPOWL(operator=Operator.XOR, children=[Milk_Sourcing, skip])
Curd_Formation_child = OperatorPOWL(operator=Operator.XOR, children=[Milk_Pasteurize, skip])
Whey_Separation_child = OperatorPOWL(operator=Operator.XOR, children=[Curd_Formation, skip])
Mold_Inoculate_child = OperatorPOWL(operator=Operator.XOR, children=[Whey_Separation, skip])
Cheese_Pressing_child = OperatorPOWL(operator=Operator.XOR, children=[Mold_Inoculate, skip])
Aging_Setup_child = OperatorPOWL(operator=Operator.XOR, children=[Cheese_Pressing, skip])
Humidity_Control_child = OperatorPOWL(operator=Operator.XOR, children=[Aging_Setup, skip])
Flavor_Testing_child = OperatorPOWL(operator=Operator.XOR, children=[Humidity_Control, skip])
Packaging_Design_child = OperatorPOWL(operator=Operator.XOR, children=[Flavor_Testing, skip])
Label_Approval_child = OperatorPOWL(operator=Operator.XOR, children=[Packaging_Design, skip])
Order_Forecast_child = OperatorPOWL(operator=Operator.XOR, children=[Label_Approval, skip])
Regulation_Audit_child = OperatorPOWL(operator=Operator.XOR, children=[Order_Forecast, skip])
Waste_Recycling_child = OperatorPOWL(operator=Operator.XOR, children=[Regulation_Audit, skip])
Market_Delivery_child = OperatorPOWL(operator=Operator.XOR, children=[Waste_Recycling, skip])
Customer_Feedback_child = OperatorPOWL(operator=Operator.XOR, children=[Market_Delivery, skip])

root = StrictPartialOrder(nodes=[Milk_Pasteurize_child, Culture_Selection_child, Curd_Formation_child, Whey_Separation_child, Mold_Inoculate_child, Cheese_Pressing_child, Aging_Setup_child, Humidity_Control_child, Flavor_Testing_child, Packaging_Design_child, Label_Approval_child, Order_Forecast_child, Regulation_Audit_child, Waste_Recycling_child, Market_Delivery_child, Customer_Feedback_child])
root.order.add_edge(Milk_Pasteurize_child, Culture_Selection_child)
root.order.add_edge(Culture_Selection_child, Milk_Sourcing)
root.order.add_edge(Milk_Sourcing, Culture_Selection_child)
root.order.add_edge(Curd_Formation_child, Milk_Pasteurize)
root.order.add_edge(Milk_Pasteurize, Curd_Formation_child)
root.order.add_edge(Whey_Separation_child, Curd_Formation)
root.order.add_edge(Curd_Formation, Whey_Separation_child)
root.order.add_edge(Mold_Inoculate_child, Whey_Separation)
root.order.add_edge(Whey_Separation, Mold_Inoculate_child)
root.order.add_edge(Cheese_Pressing_child, Mold_Inoculate)
root.order.add_edge(Mold_Inoculate, Cheese_Pressing_child)
root.order.add_edge(Aging_Setup_child, Cheese_Pressing)
root.order.add_edge(Cheese_Pressing, Aging_Setup_child)
root.order.add_edge(Humidity_Control_child, Aging_Setup)
root.order.add_edge(Aging_Setup, Humidity_Control_child)
root.order.add_edge(Flavor_Testing_child, Humidity_Control)
root.order.add_edge(Humidity_Control, Flavor_Testing_child)
root.order.add_edge(Packaging_Design_child, Flavor_Testing)
root.order.add_edge(Flavor_Testing, Packaging_Design_child)
root.order.add_edge(Label_Approval_child, Packaging_Design)
root.order.add_edge(Packaging_Design, Label_Approval_child)
root.order.add_edge(Order_Forecast_child, Label_Approval)
root.order.add_edge(Label_Approval, Order_Forecast_child)
root.order.add_edge(Regulation_Audit_child, Order_Forecast)
root.order.add_edge(Order_Forecast, Regulation_Audit_child)
root.order.add_edge(Waste_Recycling_child, Regulation_Audit)
root.order.add_edge(Regulation_Audit, Waste_Recycling_child)
root.order.add_edge(Market_Delivery_child, Waste_Recycling)
root.order.add_edge(Waste_Recycling, Market_Delivery_child)
root.order.add_edge(Customer_Feedback_child, Market_Delivery)
root.order.add_edge(Market_Delivery, Customer_Feedback_child)

print(root)