import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
SiteAssess = Transition(label='Site Assess')
LoadTesting = Transition(label='Load Testing')
ClimateStudy = Transition(label='Climate Study')
MediumPrep = Transition(label='Medium Prep')
BedInstall = Transition(label='Bed Install')
IrrigationSetup = Transition(label='Irrigation Setup')
CropSelect = Transition(label='Crop Select')
PestControl = Transition(label='Pest Control')
CommunityMeet = Transition(label='Community Meet')
MonitorDeploy = Transition(label='Monitor Deploy')
WasteCycle = Transition(label='Waste Cycle')
YieldForecast = Transition(label='Yield Forecast')
MarketLink = Transition(label='Market Link')
WorkshopPlan = Transition(label='Workshop Plan')
TechIntegrate = Transition(label='Tech Integrate')
skip = SilentTransition()
site_assess = OperatorPOWL(operator=Operator.XOR, children=[SiteAssess, skip])
load_testing = OperatorPOWL(operator=Operator.XOR, children=[LoadTesting, skip])
climate_study = OperatorPOWL(operator=Operator.XOR, children=[ClimateStudy, skip])
medium_prep = OperatorPOWL(operator=Operator.XOR, children=[MediumPrep, skip])
bed_install = OperatorPOWL(operator=Operator.XOR, children=[BedInstall, skip])
irrigation_setup = OperatorPOWL(operator=Operator.XOR, children=[IrrigationSetup, skip])
crop_select = OperatorPOWL(operator=Operator.XOR, children=[CropSelect, skip])
pest_control = OperatorPOWL(operator=Operator.XOR, children=[PestControl, skip])
community_meet = OperatorPOWL(operator=Operator.XOR, children=[CommunityMeet, skip])
monitor_deploy = OperatorPOWL(operator=Operator.XOR, children=[MonitorDeploy, skip])
waste_cycle = OperatorPOWL(operator=Operator.XOR, children=[WasteCycle, skip])
yield_forecast = OperatorPOWL(operator=Operator.XOR, children=[YieldForecast, skip])
market_link = OperatorPOWL(operator=Operator.XOR, children=[MarketLink, skip])
workshop_plan = OperatorPOWL(operator=Operator.XOR, children=[WorkshopPlan, skip])
tech_integrate = OperatorPOWL(operator=Operator.XOR, children=[TechIntegrate, skip])
root = StrictPartialOrder(nodes=[site_assess, load_testing, climate_study, medium_prep, bed_install, irrigation_setup, crop_select, pest_control, community_meet, monitor_deploy, waste_cycle, yield_forecast, market_link, workshop_plan, tech_integrate])
root.order.add_edge(site_assess, load_testing)
root.order.add_edge(site_assess, climate_study)
root.order.add_edge(site_assess, medium_prep)
root.order.add_edge(site_assess, bed_install)
root.order.add_edge(site_assess, irrigation_setup)
root.order.add_edge(site_assess, crop_select)
root.order.add_edge(site_assess, pest_control)
root.order.add_edge(site_assess, community_meet)
root.order.add_edge(site_assess, monitor_deploy)
root.order.add_edge(site_assess, waste_cycle)
root.order.add_edge(site_assess, yield_forecast)
root.order.add_edge(site_assess, market_link)
root.order.add_edge(site_assess, workshop_plan)
root.order.add_edge(site_assess, tech_integrate)
root.order.add_edge(load_testing, climate_study)
root.order.add_edge(load_testing, medium_prep)
root.order.add_edge(load_testing, bed_install)
root.order.add_edge(load_testing, irrigation_setup)
root.order.add_edge(load_testing, crop_select)
root.order.add_edge(load_testing, pest_control)
root.order.add_edge(load_testing, community_meet)
root.order.add_edge(load_testing, monitor_deploy)
root.order.add_edge(load_testing, waste_cycle)
root.order.add_edge(load_testing, yield_forecast)
root.order.add_edge(load_testing, market_link)
root.order.add_edge(load_testing, workshop_plan)
root.order.add_edge(load_testing, tech_integrate)
root.order.add_edge(climate_study, medium_prep)
root.order.add_edge(climate_study, bed_install)
root.order.add_edge(climate_study, irrigation_setup)
root.order.add_edge(climate_study, crop_select)
root.order.add_edge(climate_study, pest_control)
root.order.add_edge(climate_study, community_meet)
root.order.add_edge(climate_study, monitor_deploy)
root.order.add_edge(climate_study, waste_cycle)
root.order.add_edge(climate_study, yield_forecast)
root.order.add_edge(climate_study, market_link)
root.order.add_edge(climate_study, workshop_plan)
root.order.add_edge(climate_study, tech_integrate)
root.order.add_edge(medium_prep, bed_install)
root.order.add_edge(medium_prep, irrigation_setup)
root.order.add_edge(medium_prep, crop_select)
root.order.add_edge(medium_prep, pest_control)
root.order.add_edge(medium_prep, community_meet)
root.order.add_edge(medium_prep, monitor_deploy)
root.order.add_edge(medium_prep, waste_cycle)
root.order.add_edge(medium_prep, yield_forecast)
root.order.add_edge(medium_prep, market_link)
root.order.add_edge(medium_prep, workshop_plan)
root.order.add_edge(medium_prep, tech_integrate)
root.order.add_edge(bed_install, irrigation_setup)
root.order.add_edge(bed_install, crop_select)
root.order.add_edge(bed_install, pest_control)
root.order.add_edge(bed_install, community_meet)
root.order.add_edge(bed_install, monitor_deploy)
root.order.add_edge(bed_install, waste_cycle)
root.order.add_edge(bed_install, yield_forecast)
root.order.add_edge(bed_install, market_link)
root.order.add_edge(bed_install, workshop_plan)
root.order.add_edge(bed_install, tech_integrate)
root.order.add_edge(irrigation_setup, crop_select)
root.order.add_edge(irrigation_setup, pest_control)
root.order.add_edge(irrigation_setup, community_meet)
root.order.add_edge(irrigation_setup, monitor_deploy)
root.order.add_edge(irrigation_setup, waste_cycle)
root.order.add_edge(irrigation_setup, yield_forecast)
root.order.add_edge(irrigation_setup, market_link)
root.order.add_edge(irrigation_setup, workshop_plan)
root.order.add_edge(irrigation_setup, tech_integrate)
root.order.add_edge(crop_select, pest_control)
root.order.add_edge(crop_select, community_meet)
root.order.add_edge(crop_select, monitor_deploy)
root.order.add_edge(crop_select, waste_cycle)
root.order.add_edge(crop_select, yield_forecast)
root.order.add_edge(crop_select, market_link)
root.order.add_edge(crop_select, workshop_plan)
root.order.add_edge(crop_select, tech_integrate)
root.order.add_edge(pest_control, community_meet)
root.order.add_edge(pest_control, monitor_deploy)
root.order.add_edge(pest_control, waste_cycle)
root.order.add_edge(pest_control, yield_forecast)
root.order.add_edge(pest_control, market_link)
root.order.add_edge(pest_control, workshop_plan)
root.order.add_edge(pest_control, tech_integrate)
root.order.add_edge(community_meet, monitor_deploy)
root.order.add_edge(community_meet, waste_cycle)
root.order.add_edge(community_meet, yield_forecast)
root.order.add_edge(community_meet, market_link)
root.order.add_edge(community_meet, workshop_plan)
root.order.add_edge(community_meet, tech_integrate)
root.order.add_edge(monitor_deploy, waste_cycle)
root.order.add_edge(monitor_deploy, yield_forecast)
root.order.add_edge(monitor_deploy, market_link)
root.order.add_edge(monitor_deploy, workshop_plan)
root.order.add_edge(monitor_deploy, tech_integrate)
root.order.add_edge(waste_cycle, yield_forecast)
root.order.add_edge(waste_cycle, market_link)
root.order.add_edge(waste_cycle, workshop_plan)
root.order.add_edge(waste_cycle, tech_integrate)
root.order.add_edge(yield_forecast, market_link)
root.order.add_edge(yield_forecast, workshop_plan)
root.order.add_edge(yield_forecast, tech_integrate)
root.order.add_edge(market_link, workshop_plan)
root.order.add_edge(market_link, tech_integrate)
root.order.add_edge(workshop_plan, tech_integrate)