import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
site_survey = Transition(label='Site Survey')
permit_check = Transition(label='Permit Check')
hive_setup = Transition(label='Hive Setup')
community_meet = Transition(label='Community Meet')
hive_monitor = Transition(label='Hive Monitor')
pest_control = Transition(label='Pest Control')
honey_harvest = Transition(label='Honey Harvest')
data_logging = Transition(label='Data Logging')
workshop_plan = Transition(label='Workshop Plan')
supply_order = Transition(label='Supply Order')
volunteer_coord = Transition(label='Volunteer Coord')
regulation_review = Transition(label='Regulation Review')
pollination_map = Transition(label='Pollination Map')
apiary_audit = Transition(label='Apiary Audit')
feedback_gather = Transition(label='Feedback Gather')
waste_manage = Transition(label='Waste Manage')
skip = SilentTransition()
site_survey_loop = OperatorPOWL(operator=Operator.LOOP, children=[site_survey, permit_check, hive_setup])
community_meet_loop = OperatorPOWL(operator=Operator.LOOP, children=[community_meet])
hive_monitor_loop = OperatorPOWL(operator=Operator.LOOP, children=[hive_monitor])
pest_control_loop = OperatorPOWL(operator=Operator.LOOP, children=[pest_control])
honey_harvest_loop = OperatorPOWL(operator=Operator.LOOP, children=[honey_harvest])
data_logging_loop = OperatorPOWL(operator=Operator.LOOP, children=[data_logging])
workshop_plan_loop = OperatorPOWL(operator=Operator.LOOP, children=[workshop_plan])
supply_order_loop = OperatorPOWL(operator=Operator.LOOP, children=[supply_order])
volunteer_coord_loop = OperatorPOWL(operator=Operator.LOOP, children=[volunteer_coord])
regulation_review_loop = OperatorPOWL(operator=Operator.LOOP, children=[regulation_review])
pollination_map_loop = OperatorPOWL(operator=Operator.LOOP, children=[pollination_map])
apiary_audit_loop = OperatorPOWL(operator=Operator.LOOP, children=[apiary_audit])
feedback_gather_loop = OperatorPOWL(operator=Operator.LOOP, children=[feedback_gather])
waste_manage_loop = OperatorPOWL(operator=Operator.LOOP, children=[waste_manage])
root = StrictPartialOrder(nodes=[site_survey_loop, community_meet_loop, hive_monitor_loop, pest_control_loop, honey_harvest_loop, data_logging_loop, workshop_plan_loop, supply_order_loop, volunteer_coord_loop, regulation_review_loop, pollination_map_loop, apiary_audit_loop, feedback_gather_loop, waste_manage_loop])
root.order.add_edge(site_survey_loop, community_meet_loop)
root.order.add_edge(community_meet_loop, hive_monitor_loop)
root.order.add_edge(hive_monitor_loop, pest_control_loop)
root.order.add_edge(pest_control_loop, honey_harvest_loop)
root.order.add_edge(honey_harvest_loop, data_logging_loop)
root.order.add_edge(data_logging_loop, workshop_plan_loop)
root.order.add_edge(workshop_plan_loop, supply_order_loop)
root.order.add_edge(supply_order_loop, volunteer_coord_loop)
root.order.add_edge(volunteer_coord_loop, regulation_review_loop)
root.order.add_edge(regulation_review_loop, pollination_map_loop)
root.order.add_edge(pollination_map_loop, apiary_audit_loop)
root.order.add_edge(apiary_audit_loop, feedback_gather_loop)
root.order.add_edge(feedback_gather_loop, waste_manage_loop)
root.order.add_edge(waste_manage_loop, site_survey_loop)