import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

seed_select = Transition(label='Seed Select')
germinate_seeds = Transition(label='Germinate Seeds')
transplant_seedlings = Transition(label='Transplant Seedlings')
mix_nutrients = Transition(label='Mix Nutrients')
adjust_pH = Transition(label='Adjust pH')
monitor_climate = Transition(label='Monitor Climate')
control_humidity = Transition(label='Control Humidity')
co2_regulation = Transition(label='CO2 Regulation')
detect_pests = Transition(label='Detect Pests')
deploy_biocontrols = Transition(label='Deploy Biocontrols')
schedule_harvest = Transition(label='Schedule Harvest')
automate_picking = Transition(label='Automate Picking')
package_produce = Transition(label='Package Produce')
compost_waste = Transition(label='Compost Waste')
recycle_water = Transition(label='Recycle Water')
data_logging = Transition(label='Data Logging')
system_maintenance = Transition(label='System Maintenance')

skip = SilentTransition()

seed_selection_loop = OperatorPOWL(operator=Operator.LOOP, children=[seed_select, germinate_seeds, transplant_seedlings])
hydroponic_tower_loop = OperatorPOWL(operator=Operator.LOOP, children=[mix_nutrients, adjust_pH])
climate_control_loop = OperatorPOWL(operator=Operator.LOOP, children=[monitor_climate, control_humidity, co2_regulation])
pest_management_loop = OperatorPOWL(operator=Operator.LOOP, children=[detect_pests, deploy_biocontrols])
harvesting_loop = OperatorPOWL(operator=Operator.LOOP, children=[schedule_harvest, automate_picking])
robotic_picking_loop = OperatorPOWL(operator=Operator.LOOP, children=[package_produce])
composting_loop = OperatorPOWL(operator=Operator.LOOP, children=[compost_waste])
water_recycling_loop = OperatorPOWL(operator=Operator.LOOP, children=[recycle_water])
data_logging_loop = OperatorPOWL(operator=Operator.LOOP, children=[data_logging])
system_maintenance_loop = OperatorPOWL(operator=Operator.LOOP, children=[system_maintenance])

root = StrictPartialOrder(nodes=[seed_selection_loop, hydroponic_tower_loop, climate_control_loop, pest_management_loop, harvesting_loop, robotic_picking_loop, composting_loop, water_recycling_loop, data_logging_loop, system_maintenance_loop])
root.order.add_edge(seed_selection_loop, hydroponic_tower_loop)
root.order.add_edge(hydroponic_tower_loop, climate_control_loop)
root.order.add_edge(climate_control_loop, pest_management_loop)
root.order.add_edge(pest_management_loop, harvesting_loop)
root.order.add_edge(harvesting_loop, robotic_picking_loop)
root.order.add_edge(robotic_picking_loop, composting_loop)
root.order.add_edge(composting_loop, water_recycling_loop)
root.order.add_edge(water_recycling_loop, data_logging_loop)
root.order.add_edge(data_logging_loop, system_maintenance_loop)