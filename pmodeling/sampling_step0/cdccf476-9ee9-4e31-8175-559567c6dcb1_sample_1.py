import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

Milk_Sourcing = Transition(label='Milk Sourcing')
Curd_Formation = Transition(label='Curd Formation')
Microbial_Test = Transition(label='Microbial Test')
Whey_Removal = Transition(label='Whey Removal')
Pressing_Cheese = Transition(label='Pressing Cheese')
Salt_Application = Transition(label='Salt Application')
Aging_Control = Transition(label='Aging Control')
Quality_Check = Transition(label='Quality Check')
Eco_Packaging = Transition(label='Eco Packaging')
Inventory_Log = Transition(label='Inventory Log')
Temp_Monitoring = Transition(label='Temp Monitoring')
Carrier_Booking = Transition(label='Carrier Booking')
Trace_Recording = Transition(label='Trace Recording')
Feedback_Review = Transition(label='Feedback Review')
Compliance_Audit = Transition(label='Compliance Audit')
Batch_Adjustment = Transition(label='Batch Adjustment')

skip = SilentTransition()

Milk_Sourcing_XOR_Curd_Formation = OperatorPOWL(operator=Operator.XOR, children=[Milk_Sourcing, Curd_Formation])
Curd_Formation_XOR_Whey_Removal = OperatorPOWL(operator=Operator.XOR, children=[Curd_Formation, Whey_Removal])
Whey_Removal_XOR_Pressing_Cheese = OperatorPOWL(operator=Operator.XOR, children=[Whey_Removal, Pressing_Cheese])
Pressing_Cheese_XOR_Salt_Application = OperatorPOWL(operator=Operator.XOR, children=[Pressing_Cheese, Salt_Application])
Salt_Application_XOR_Aging_Control = OperatorPOWL(operator=Operator.XOR, children=[Salt_Application, Aging_Control])
Aging_Control_XOR_Quality_Check = OperatorPOWL(operator=Operator.XOR, children=[Aging_Control, Quality_Check])
Quality_Check_XOR_Eco_Packaging = OperatorPOWL(operator=Operator.XOR, children=[Quality_Check, Eco_Packaging])
Eco_Packaging_XOR_Inventory_Log = OperatorPOWL(operator=Operator.XOR, children=[Eco_Packaging, Inventory_Log])
Inventory_Log_XOR_Temp_Monitoring = OperatorPOWL(operator=Operator.XOR, children=[Inventory_Log, Temp_Monitoring])
Temp_Monitoring_XOR_Carrier_Booking = OperatorPOWL(operator=Operator.XOR, children=[Temp_Monitoring, Carrier_Booking])
Carrier_Booking_XOR_Trace_Recording = OperatorPOWL(operator=Operator.XOR, children=[Carrier_Booking, Trace_Recording])
Trace_Recording_XOR_Feedback_Review = OperatorPOWL(operator=Operator.XOR, children=[Trace_Recording, Feedback_Review])
Feedback_Review_XOR_Compliance_Audit = OperatorPOWL(operator=Operator.XOR, children=[Feedback_Review, Compliance_Audit])
Compliance_Audit_XOR_Batch_Adjustment = OperatorPOWL(operator=Operator.XOR, children=[Compliance_Audit, Batch_Adjustment])

root = StrictPartialOrder(nodes=[Milk_Sourcing_XOR_Curd_Formation, Curd_Formation_XOR_Whey_Removal, Whey_Removal_XOR_Pressing_Cheese, Pressing_Cheese_XOR_Salt_Application, Salt_Application_XOR_Aging_Control, Aging_Control_XOR_Quality_Check, Quality_Check_XOR_Eco_Packaging, Eco_Packaging_XOR_Inventory_Log, Inventory_Log_XOR_Temp_Monitoring, Temp_Monitoring_XOR_Carrier_Booking, Carrier_Booking_XOR_Trace_Recording, Trace_Recording_XOR_Feedback_Review, Feedback_Review_XOR_Compliance_Audit, Compliance_Audit_XOR_Batch_Adjustment])
root.order.add_edge(Milk_Sourcing_XOR_Curd_Formation, Curd_Formation_XOR_Whey_Removal)
root.order.add_edge(Curd_Formation_XOR_Whey_Removal, Whey_Removal_XOR_Pressing_Cheese)
root.order.add_edge(Whey_Removal_XOR_Pressing_Cheese, Pressing_Cheese_XOR_Salt_Application)
root.order.add_edge(Pressing_Cheese_XOR_Salt_Application, Salt_Application_XOR_Aging_Control)
root.order.add_edge(Salt_Application_XOR_Aging_Control, Aging_Control_XOR_Quality_Check)
root.order.add_edge(Aging_Control_XOR_Quality_Check, Quality_Check_XOR_Eco_Packaging)
root.order.add_edge(Quality_Check_XOR_Eco_Packaging, Eco_Packaging_XOR_Inventory_Log)
root.order.add_edge(Eco_Packaging_XOR_Inventory_Log, Inventory_Log_XOR_Temp_Monitoring)
root.order.add_edge(Inventory_Log_XOR_Temp_Monitoring, Temp_Monitoring_XOR_Carrier_Booking)
root.order.add_edge(Temp_Monitoring_XOR_Carrier_Booking, Carrier_Booking_XOR_Trace_Recording)
root.order.add_edge(Carrier_Booking_XOR_Trace_Recording, Trace_Recording_XOR_Feedback_Review)
root.order.add_edge(Trace_Recording_XOR_Feedback_Review, Feedback_Review_XOR_Compliance_Audit)
root.order.add_edge(Feedback_Review_XOR_Compliance_Audit, Compliance_Audit_XOR_Batch_Adjustment)