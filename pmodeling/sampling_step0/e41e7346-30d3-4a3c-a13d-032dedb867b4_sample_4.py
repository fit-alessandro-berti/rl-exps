import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

seed_select = Transition(label='Seed Select')
nutrient_mix = Transition(label='Nutrient Mix')
climate_setup = Transition(label='Climate Setup')
light_adjust = Transition(label='Light Adjust')
co2_control = Transition(label='CO2 Control')
humidity_tune = Transition(label='Humidity Tune')
growth_monitor = Transition(label='Growth Monitor')
pest_detect = Transition(label='Pest Detect')
harvest_plan = Transition(label='Harvest Plan')
produce_sort = Transition(label='Produce Sort')
pack_biodeg = Transition(label='Pack Biodeg')
drone_dispatch = Transition(label='Drone Dispatch')
waste_recycle = Transition(label='Waste Recycle')
compost_create = Transition(label='Compost Create')
cycle_review = Transition(label='Cycle Review')

skip = SilentTransition()
xor = OperatorPOWL(operator=Operator.XOR, children=[cycle_review, skip])

seed_select_next = OperatorPOWL(operator=Operator.SEQUENCE, children=[seed_select, nutrient_mix])
climate_setup_next = OperatorPOWL(operator=Operator.SEQUENCE, children=[climate_setup, light_adjust])
co2_control_next = OperatorPOWL(operator=Operator.SEQUENCE, children=[co2_control, co2_control])
humidity_tune_next = OperatorPOWL(operator=Operator.SEQUENCE, children=[humidity_tune, humidity_tune])
growth_monitor_next = OperatorPOWL(operator=Operator.SEQUENCE, children=[growth_monitor, pest_detect])
pest_detect_next = OperatorPOWL(operator=Operator.SEQUENCE, children=[pest_detect, harvest_plan])
harvest_plan_next = OperatorPOWL(operator=Operator.SEQUENCE, children=[harvest_plan, produce_sort])
produce_sort_next = OperatorPOWL(operator=Operator.SEQUENCE, children=[produce_sort, pack_biodeg])
pack_biodeg_next = OperatorPOWL(operator=Operator.SEQUENCE, children=[pack_biodeg, drone_dispatch])
drone_dispatch_next = OperatorPOWL(operator=Operator.SEQUENCE, children=[drone_dispatch, waste_recycle])
waste_recycle_next = OperatorPOWL(operator=Operator.SEQUENCE, children=[waste_recycle, compost_create])

root = StrictPartialOrder(nodes=[seed_select_next, climate_setup_next, co2_control_next, humidity_tune_next, growth_monitor_next, pest_detect_next, harvest_plan_next, produce_sort_next, pack_biodeg_next, drone_dispatch_next, waste_recycle_next, xor])
root.order.add_edge(seed_select_next, climate_setup_next)
root.order.add_edge(climate_setup_next, co2_control_next)
root.order.add_edge(co2_control_next, humidity_tune_next)
root.order.add_edge(humidity_tune_next, growth_monitor_next)
root.order.add_edge(growth_monitor_next, pest_detect_next)
root.order.add_edge(pest_detect_next, harvest_plan_next)
root.order.add_edge(harvest_plan_next, produce_sort_next)
root.order.add_edge(produce_sort_next, pack_biodeg_next)
root.order.add_edge(pack_biodeg_next, drone_dispatch_next)
root.order.add_edge(drone_dispatch_next, waste_recycle_next)
root.order.add_edge(waste_recycle_next, xor)