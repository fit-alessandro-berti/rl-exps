import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
site_assess = Transition(label='Site Assess')
plan_layout = Transition(label='Plan Layout')
install_racks = Transition(label='Install Racks')
mix_nutrients = Transition(label='Mix Nutrients')
calibrate_sensors = Transition(label='Calibrate Sensors')
setup_lighting = Transition(label='Setup Lighting')
configure_climate = Transition(label='Configure Climate')
select_seeds = Transition(label='Select Seeds')
monitor_germinate = Transition(label='Monitor Germinate')
apply_bio_controls = Transition(label='Apply Bio-controls')
maintain_systems = Transition(label='Maintain Systems')
analyze_data = Transition(label='Analyze Data')
harvest_crops = Transition(label='Harvest Crops')
quality_check = Transition(label='Quality Check')
package_produce = Transition(label='Package Produce')
distribute_goods = Transition(label='Distribute Goods')
skip = SilentTransition()
loop_site_assess = OperatorPOWL(operator=Operator.LOOP, children=[site_assess, plan_layout])
loop_install_racks = OperatorPOWL(operator=Operator.LOOP, children=[install_racks, mix_nutrients, calibrate_sensors])
loop_setup_lighting = OperatorPOWL(operator=Operator.LOOP, children=[setup_lighting, configure_climate])
loop_select_seeds = OperatorPOWL(operator=Operator.LOOP, children=[select_seeds, monitor_germinate, apply_bio_controls])
loop_maintain_systems = OperatorPOWL(operator=Operator.LOOP, children=[maintain_systems, analyze_data])
loop_harvest_crops = OperatorPOWL(operator=Operator.LOOP, children=[harvest_crops, quality_check, package_produce])
xor_distribute_goods = OperatorPOWL(operator=Operator.XOR, children=[distribute_goods, skip])
root = StrictPartialOrder(nodes=[loop_site_assess, loop_install_racks, loop_setup_lighting, loop_select_seeds, loop_maintain_systems, loop_harvest_crops, xor_distribute_goods])
root.order.add_edge(loop_site_assess, loop_install_racks)
root.order.add_edge(loop_install_racks, loop_setup_lighting)
root.order.add_edge(loop_setup_lighting, loop_select_seeds)
root.order.add_edge(loop_select_seeds, loop_maintain_systems)
root.order.add_edge(loop_maintain_systems, loop_harvest_crops)
root.order.add_edge(loop_harvest_crops, xor_distribute_goods)