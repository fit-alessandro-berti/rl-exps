import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
begin_onboarding = Transition(label='Begin onboarding process')
choose_candidate = Transition(label='Choose candidate')
collect_resumes = Transition(label='Collect resumes')
complete_orientation = Transition(label='Complete orientation')
complete_paperwork = Transition(label='Complete paperwork')
complete_training = Transition(label='Complete training')
conduct_virtual_interview = Transition(label='Conduct a virtual interview')
conduct_in_person_interview = Transition(label='Conduct an in-person interview')
conduct_initial_phone_interviews = Transition(label='Conduct initial phone interviews')
create_job_description = Transition(label='Create job description')
extend_offer = Transition(label='Extend offer')
identify_need_for_new_hire = Transition(label='Identify need for new hire')
invite_candidates_for_interviews = Transition(label='Invite candidates for interviews')
negotiate_salary = Transition(label='Negotiate salary')
post_job_description = Transition(label='Post job description')
screen_resumes = Transition(label='Screen resumes')

xor = OperatorPOWL(operator=Operator.XOR, children=[extend_offer, identify_need_for_new_hire])
loop1 = OperatorPOWL(operator=Operator.LOOP, children=[conduct_virtual_interview, conduct_in_person_interview, conduct_initial_phone_interviews])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[complete_orientation, complete_paperwork, complete_training])
loop3 = OperatorPOWL(operator=Operator.LOOP, children=[post_job_description, screen_resumes])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[invite_candidates_for_interviews, negotiate_salary])

root = StrictPartialOrder(nodes=[begin_onboarding, xor, loop1, loop2, loop3, xor2])
root.order.add_edge(begin_onboarding, xor)
root.order.add_edge(xor, loop1)
root.order.add_edge(loop1, loop2)
root.order.add_edge(loop2, loop3)
root.order.add_edge(loop3, xor2)
root.order.add_edge(xor2, begin_onboarding)