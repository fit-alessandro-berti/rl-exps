import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

A = Transition(label='Prepare documentation')
B = Transition(label='Schedule compliance audit')
C = Transition(label='Conduct self-assessment')
D = Transition(label='Gather evidence')
E = Transition(label='Identify gaps or issues')
F = Transition(label='Make necessary corrections or improvements')
G = Transition(label='Conduct external audit')
H = Transition(label='Conduct final audit')
I = Transition(label='Issue official documents')
J = Transition(label='Award certification')

skip = SilentTransition()
xor = OperatorPOWL(operator=Operator.XOR, children=[F, skip])
loop = OperatorPOWL(operator=Operator.LOOP, children=[C, D, E, xor])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[G, H])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[I, J])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[xor2, xor3])

root = StrictPartialOrder(nodes=[A, B, C, D, E, F, G, H, I, J, xor, loop, xor2, xor3, xor4])
root.order.add_edge(A, B)
root.order.add_edge(B, C)
root.order.add_edge(C, D)
root.order.add_edge(D, E)
root.order.add_edge(E, xor)
root.order.add_edge(xor, F)
root.order.add_edge(F, xor)
root.order.add_edge(xor, G)
root.order.add_edge(G, H)
root.order.add_edge(H, xor)
root.order.add_edge(xor, I)
root.order.add_edge(I, J)
root.order.add_edge(J, xor)
root.order.add_edge(xor, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)