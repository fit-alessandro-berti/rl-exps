import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define transitions for activities
check_inventory = Transition(label='Check current inventory level')
inspect_stock = Transition(label='Inspect stock for quality')
place_order = Transition(label='Place order with suppliers')
place_stock_storage = Transition(label='Place stock in storage')
place_stock_shelves = Transition(label='Place stock on shelves')
receive_stock = Transition(label='Receive stock')
record_stock = Transition(label='Record stock in system')
manual_alert = Transition(label='Send a manual alert')
automated_alert = Transition(label='Send an automated alert')
update_inventory = Transition(label='Update inventory levels')
update_inventory_system = Transition(label='Update inventory system with expected delivery dates')

# Define silent transitions
skip = SilentTransition()

# Define nodes
check_inventory_node = Transition(label='Check current inventory level')
inspect_stock_node = Transition(label='Inspect stock for quality')
place_order_node = Transition(label='Place order with suppliers')
place_stock_storage_node = Transition(label='Place stock in storage')
place_stock_shelves_node = Transition(label='Place stock on shelves')
receive_stock_node = Transition(label='Receive stock')
record_stock_node = Transition(label='Record stock in system')
manual_alert_node = Transition(label='Send a manual alert')
automated_alert_node = Transition(label='Send an automated alert')
update_inventory_node = Transition(label='Update inventory levels')
update_inventory_system_node = Transition(label='Update inventory system with expected delivery dates')

# Define loop
loop_node = OperatorPOWL(operator=Operator.LOOP, children=[check_inventory_node, inspect_stock_node, place_order_node, place_stock_storage_node, place_stock_shelves_node, receive_stock_node, record_stock_node, manual_alert_node, automated_alert_node, update_inventory_node, update_inventory_system_node])

# Define XOR
xor_node = OperatorPOWL(operator=Operator.XOR, children=[loop_node, skip])

# Define root
root = StrictPartialOrder(nodes=[check_inventory_node, inspect_stock_node, place_order_node, place_stock_storage_node, place_stock_shelves_node, receive_stock_node, record_stock_node, manual_alert_node, automated_alert_node, update_inventory_node, update_inventory_system_node, loop_node, xor_node])
root.order.add_edge(check_inventory_node, inspect_stock_node)
root.order.add_edge(inspect_stock_node, place_order_node)
root.order.add_edge(place_order_node, place_stock_storage_node)
root.order.add_edge(place_stock_storage_node, place_stock_shelves_node)
root.order.add_edge(place_stock_shelves_node, receive_stock_node)
root.order.add_edge(receive_stock_node, record_stock_node)
root.order.add_edge(record_stock_node, manual_alert_node)
root.order.add_edge(manual_alert_node, automated_alert_node)
root.order.add_edge(automated_alert_node, update_inventory_node)
root.order.add_edge(update_inventory_node, update_inventory_system_node)
root.order.add_edge(update_inventory_system_node, loop_node)
root.order.add_edge(loop_node, xor_node)
root.order.add_edge(xor_node, loop_node)
root.order.add_edge(loop_node, update_inventory_system_node)
root.order.add_edge(update_inventory_system_node, loop_node)
root.order.add_edge(loop_node, update_inventory_node)
root.order.add_edge(update_inventory_node, loop_node)
root.order.add_edge(loop_node, record_stock_node)
root.order.add_edge(record_stock_node, loop_node)
root.order.add_edge(loop_node, receive_stock_node)
root.order.add_edge(receive_stock_node, loop_node)
root.order.add_edge(loop_node, place_stock_shelves_node)
root.order.add_edge(place_stock_shelves_node, loop_node)
root.order.add_edge(loop_node, place_stock_storage_node)
root.order.add_edge(place_stock_storage_node, loop_node)
root.order.add_edge(loop_node, place_order_node)
root.order.add_edge(place_order_node, loop_node)
root.order.add_edge(loop_node, inspect_stock_node)
root.order.add_edge(inspect_stock_node, loop_node)
root.order.add_edge(loop_node, check_inventory_node)
root.order.add_edge(check_inventory_node, loop_node)
root.order.add_edge(loop_node, automated_alert_node)
root.order.add_edge(automated_alert_node, loop_node)
root.order.add_edge(loop_node, manual_alert_node)
root.order.add_edge(manual_alert_node, loop_node)
root.order.add_edge(loop_node, update_inventory_system_node)
root.order.add_edge(update_inventory_system_node, loop_node)
root.order.add_edge(loop_node, update_inventory_node)
root.order.add_edge(update_inventory_node, loop_node)
root.order.add_edge(loop_node, record_stock_node)
root.order.add_edge(record_stock_node, loop_node)
root.order.add_edge(loop_node, receive_stock_node)
root.order.add_edge(receive_stock_node, loop_node)
root.order.add_edge(loop_node, place_stock_shelves_node)
root.order.add_edge(place_stock_shelves_node, loop_node)
root.order.add_edge(loop_node, place_stock_storage_node)
root.order.add_edge(place_stock_storage_node, loop_node)
root.order.add_edge(loop_node, place_order_node)
root.order.add_edge(place_order_node, loop_node)
root.order.add_edge(loop_node, inspect_stock_node)
root.order.add_edge(inspect_stock_node, loop_node)
root.order.add_edge(loop_node, check_inventory_node)
root.order.add_edge(check_inventory_node, loop_node)
root.order.add_edge(loop_node, automated_alert_node)
root.order.add_edge(automated_alert_node, loop_node)
root.order.add_edge(loop_node, manual_alert_node)
root.order.add_edge(manual_alert_node, loop_node)
root.order.add_edge(loop_node, update_inventory_system_node)
root.order.add_edge(update_inventory_system_node, loop_node)
root.order.add_edge(loop_node, update_inventory_node)
root.order.add_edge(update_inventory_node, loop_node)
root.order.add_edge(loop_node, record_stock_node)
root.order.add_edge(record_stock_node, loop_node)
root.order.add_edge(loop_node, receive_stock_node)
root.order.add_edge(receive_stock_node, loop_node)
root.order.add_edge(loop_node, place_stock_shelves_node)
root.order.add_edge(place_stock_shelves_node, loop_node)
root.order.add_edge(loop_node, place_stock_storage_node)
root.order.add_edge(place_stock_storage_node, loop_node)
root.order.add_edge(loop_node, place_order_node)
root.order.add_edge(place_order_node, loop_node)
root.order.add_edge(loop_node, inspect_stock_node)
root.order.add_edge(inspect_stock_node, loop_node)
root.order.add_edge(loop_node, check_inventory_node)
root.order.add_edge(check_inventory_node, loop_node)
root.order.add_edge(loop_node, automated_alert_node)
root.order.add_edge(automated_alert_node, loop_node)
root.order.add_edge(loop_node, manual_alert_node)
root.order.add_edge(manual_alert_node, loop_node)
root.order.add_edge(loop_node, update_inventory_system_node)
root.order.add_edge(update_inventory_system_node, loop_node)
root.order.add_edge(loop_node, update_inventory_node)
root.order.add_edge(update_inventory_node, loop_node)
root.order.add_edge(loop_node, record_stock_node)
root.order.add_edge(record_stock_node, loop_node)
root.order.add_edge(loop_node, receive_stock_node)
root.order.add_edge(receive_stock_node, loop_node)
root.order.add_edge(loop_node, place_stock_shelves_node)
root.order.add_edge(place_stock_shelves_node, loop_node)
root.order.add_edge(loop_node, place_stock_storage_node)
root.order.add_edge(place_stock_storage_node, loop_node)
root.order.add_edge(loop_node, place_order_node)
root.order.add_edge(place_order_node, loop_node)
root.order.add_edge(loop_node, inspect_stock_node)
root.order.add_edge(inspect_stock_node, loop_node)
root.order.add_edge(loop_node, check_inventory_node)
root.order.add_edge(check_inventory_node, loop_node)
root.order.add_edge(loop_node, automated_alert_node)
root.order.add_edge(automated_alert_node, loop_node)
root.order.add_edge(loop_node, manual_alert_node)
root.order.add_edge(manual_alert_node, loop_node)
root.order.add_edge(loop_node, update_inventory_system_node)
root.order.add_edge(update_inventory_system_node, loop_node)
root.order.add_edge(loop_node, update_inventory_node)
root.order.add_edge(update_inventory_node, loop_node)
root.order.add_edge(loop_node, record_stock_node)
root.order.add_edge(record_stock_node, loop_node)
root.order.add_edge(loop_node, receive_stock_node)
root.order.add_edge(receive_stock_node, loop_node)
root.order.add_edge(loop_node, place_stock_shelves_node)
root.order.add_edge(place_stock_shelves_node, loop_node)
root.order.add_edge(loop_node, place_stock_storage_node)
root.order.add_edge(place_stock_storage_node, loop_node)
root.order.add_edge(loop_node, place_order_node)
root.order.add_edge(place_order_node, loop_node)
root.order.add_edge(loop_node, inspect_stock_node)
root.order.add_edge(inspect_stock_node, loop_node)
root.order.add_edge(loop_node, check_inventory_node)
root.order.add_edge(check_inventory_node, loop_node)
root.order.add_edge(loop_node, automated_alert_node)
root.order.add_edge(automated_alert_node, loop_node)
root.order.add_edge(loop_node, manual_alert_node)
root.order.add_edge(manual_alert_node, loop_node)
root.order.add_edge(loop_node, update_inventory_system_node)
root.order.add_edge(update_inventory_system_node, loop_node)
root.order.add_edge(loop_node, update_inventory_node)
root.order.add_edge(update_inventory_node, loop_node)
root.order.add_edge(loop_node, record_stock_node)
root.order.add_edge(record_stock_node, loop_node)
root.order.add_edge(loop_node, receive_stock_node)
root.order.add_edge(receive_stock_node, loop_node)
root.order.add_edge(loop_node, place_stock_shelves_node)
root.order.add_edge(place_stock_shelves_node, loop_node)
root.order.add_edge(loop_node, place_stock_storage_node)
root.order.add_edge(place_stock_storage_node, loop_node)
root.order.add_edge(loop_node, place_order_node)
root.order.add_edge(place_order_node, loop_node)
root.order.add_edge(loop_node, inspect_stock_node)
root.order.add_edge(inspect_stock_node, loop_node)
root.order.add_edge(loop_node, check_inventory_node)
root.order.add_edge(check_inventory_node, loop_node)
root.order.add_edge(loop_node, automated_alert_node)
root.order.add_edge(automated_alert_node, loop_node)
root.order.add_edge(loop_node, manual_alert_node)
root.order.add_edge(manual_alert_node, loop_node)
root.order.add_edge(loop_node, update_inventory_system_node)
root.order.add_edge(update_inventory_system_node, loop_node)
root.order.add_edge(loop_node, update_inventory_node)
root.order.add_edge(update_inventory_node, loop_node)
root.order.add_edge(loop_node, record_stock_node)
root.order.add_edge(record_stock_node, loop_node)
root.order.add_edge(loop_node, receive_stock_node)
root.order.add_edge(receive_stock_node, loop_node)
root.order.add_edge(loop_node, place_stock_shelves_node)
root.order.add_edge(place_stock_shelves_node, loop_node)
root.order.add_edge(loop_node, place_stock_storage_node)
root.order.add_edge(place_stock_storage_node, loop_node)
root.order.add_edge(loop_node, place_order_node)
root.order.add_edge(place_order_node, loop_node)
root.order.add_edge(loop_node, inspect_stock_node)
root.order.add_edge(inspect_stock_node, loop_node)
root.order.add_edge(loop_node, check_inventory_node)
root.order.add_edge(check_inventory_node, loop_node)
root.order.add_edge(loop_node, automated_alert_node)
root.order.add_edge(automated_alert_node, loop_node)
root.order.add_edge(loop_node, manual_alert_node)
root.order.add_edge(manual_alert_node, loop_node)
root.order.add_edge(loop_node, update_inventory_system_node)
root.order.add_edge(update_inventory_system_node, loop_node)
root.order.add_edge(loop_node, update_inventory_node)
root.order.add_edge(update_inventory_node, loop_node)
root.order.add_edge(loop_node, record_stock_node)
root.order.add_edge(record_stock_node, loop_node)
root.order.add_edge(loop_node, receive_stock_node)
root.order.add_edge(receive_stock_node, loop_node)
root.order.add_edge(loop_node, place_stock_shelves_node)
root.order.add_edge(place_stock_shelves_node, loop_node)
root.order.add_edge(loop_node, place_stock_storage_node)
root.order.add_edge(place_stock_storage_node, loop_node)
root.order.add_edge(loop_node, place_order_node)
root.order.add_edge(place_order_node, loop_node)
root.order.add_edge(loop_node, inspect_stock_node)
root.order.add_edge(inspect_stock_node, loop_node)
root.order.add_edge(loop_node, check_inventory_node)
root.order.add_edge(check_inventory_node, loop_node)
root.order.add_edge(loop_node, automated_alert_node)
root.order.add_edge(automated_alert_node, loop_node)
root.order.add_edge(loop_node, manual_alert_node)
root.order.add_edge(manual_alert_node, loop_node)
root.order.add_edge(loop_node, update_inventory_system_node)
root.order.add_edge(update_inventory_system_node, loop_node)
root.order.add_edge(loop_node, update_inventory_node)
root.order.add_edge(update_inventory_node, loop_node)
root.order.add_edge(loop_node, record_stock_node)
root.order.add_edge(record_stock_node, loop_node)
root.order.add_edge(loop_node, receive_stock_node)
root.order.add_edge(receive_stock_node, loop_node)
root.order.add_edge(loop_node, place_stock_shelves_node)
root.order.add_edge(place_stock_shelves_node, loop_node)
root.order.add_edge(loop_node, place_stock_storage_node)
root.order.add_edge(place_stock_storage_node, loop_node)
root.order.add_edge(loop_node, place_order_node)
root.order.add_edge(place_order_node, loop_node)
root.order.add_edge(loop_node, inspect_stock_node)
root.order.add_edge(inspect_stock_node, loop_node)
root.order.add_edge(loop_node, check_inventory_node)
root.order.add_edge(check_inventory_node, loop_node)
root.order.add_edge(loop_node, automated_alert_node)
root.order.add_edge(automated_alert_node, loop_node)
root.order.add_edge(loop_node, manual_alert_node)
root.order.add_edge(manual_alert_node, loop_node)
root.order.add_edge(loop_node, update_inventory_system_node)
root.order.add_edge(update_inventory_system_node, loop_node)
root.order.add_edge(loop_node, update_inventory_node)
root.order.add_edge(update_inventory_node, loop_node)
root.order.add_edge(loop_node, record_stock_node)
root.order.add_edge(record_stock_node, loop_node)
root.order.add_edge(loop_node, receive_stock_node)
root.order.add_edge(receive_stock_node, loop_node)
root.order.add_edge(loop_node, place_stock_shelves_node)
root.order.add_edge(place_stock_shelves_node, loop_node)
root.order.add_edge(loop_node, place_stock_storage_node)
root.order.add_edge(place_stock_storage_node, loop_node)
root.order.add_edge(loop_node, place_order_node)
root.order.add_edge(place_order_node, loop_node)
root.order.add_edge(loop_node, inspect_stock_node)
root.order.add_edge(inspect_stock_node, loop_node)
root.order.add_edge(loop_node, check_inventory_node)
root.order.add_edge(check_inventory_node, loop_node)
root.order.add_edge(loop_node, automated_alert_node)
root.order.add_edge(automated_alert_node, loop_node)
root.order.add_edge(loop_node, manual_alert_node)
root.order.add_edge(manual_alert_node, loop_node)
root.order.add_edge(loop_node, update_inventory_system_node)
root.order.add_edge(update_inventory_system_node, loop_node)
root.order.add_edge(loop_node, update_inventory_node)
root.order.add_edge(update_inventory_node, loop_node)
root.order.add_edge(loop_node, record_stock_node)
root.order.add_edge(record_stock_node, loop_node)
root.order.add_edge(loop_node, receive_stock_node)
root.order.add_edge(receive_stock_node, loop_node)
root.order.add_edge(loop_node, place_stock_shelves_node)
root.order.add_edge(place_stock_shelves_node, loop_node)
root.order.add_edge(loop_node, place_stock_storage_node)
root.order.add_edge(place_stock_storage_node, loop_node)
root.order.add_edge(loop_node, place_order_node)
root.order.add_edge(place_order_node, loop_node)
root.order.add_edge(loop_node, inspect_stock_node)
root.order.add_edge(inspect_stock_node, loop_node)
root.order.add_edge(loop_node, check_inventory_node)
root.order.add_edge(check_inventory_node, loop_node)
root.order.add_edge(loop_node, automated_alert_node)
root.order.add_edge(automated_alert_node, loop_node)
root.order.add_edge(loop_node, manual_alert_node)
root.order.add_edge(manual_alert_node, loop_node)
root.order.add_edge(loop_node, update_inventory_system_node)
root.order.add_edge(update_inventory_system_node, loop_node)
root.order.add_edge(loop_node, update_inventory_node)
root.order.add_edge(update_inventory_node, loop_node)
root.order.add_edge(loop_node, record_stock_node)
root.order.add_edge(record_stock_node, loop_node)
root.order.add_edge(loop_node, receive_stock_node)
root.order.add_edge(receive_stock_node, loop_node)
root.order.add_edge(loop_node, place_stock_shelves_node)
root.order.add_edge(place_stock_shelves_node, loop_node)
root.order.add_edge(loop_node, place_stock_storage_node)
root.order.add_edge(place_stock_storage_node, loop_node)
root.order.add_edge(loop_node, place_order_node)
root.order.add_edge(place_order_node, loop_node)
root.order.add_edge(loop_node, inspect_stock_node)
root.order.add_edge(inspect_stock_node, loop_node)
root.order.add_edge(loop_node, check_inventory_node)
root.order.add_edge(check_inventory_node, loop_node)
root.order.add_edge(loop_node, automated_alert_node)
root.order.add_edge(automated_alert_node, loop_node)
root.order.add_edge(loop_node, manual_alert_node)
root.order.add_edge(manual_alert_node, loop_node)
root.order.add_edge(loop_node, update_inventory_system_node)
root.order.add_edge(update_inventory_system_node, loop_node)
root.order.add_edge(loop_node, update_inventory_node)
root.order.add_edge(update_inventory_node, loop_node)
root.order.add_edge(loop_node, record_stock_node)
root.order.add_edge(record_stock_node, loop_node)
root.order.add_edge(loop_node, receive_stock_node)
root.order.add_edge(receive_stock_node, loop_node)
root.order.add_edge(loop_node, place_stock_shelves_node)
root.order.add_edge(place_stock_shelves_node, loop_node)
root.order.add_edge(loop_node, place_stock_storage_node)
root.order.add_edge(place_stock_storage_node, loop_node)
root.order.add_edge(loop_node, place_order_node)
root.order.add_edge(place_order_node, loop_node)
root.order.add_edge(loop_node, inspect_stock_node)
root.order.add_edge(inspect_stock_node, loop_node)
root.order.add_edge(loop_node, check_inventory_node)
root.order.add_edge(check_inventory_node, loop_node)
root.order.add_edge(loop_node, automated_alert_node)
root.order.add_edge(automated_alert_node, loop_node)
root.order.add_edge(loop_node, manual_alert_node)
root.order.add_edge(manual_alert_node, loop_node)
root.order.add_edge(loop_node, update_inventory_system_node)
root.order.add_edge(update_inventory_system_node, loop_node)
root.order.add_edge(loop_node, update_inventory_node)
root.order.add_edge(update_inventory_node, loop_node)
root.order.add_edge(loop_node, record_stock_node)
root.order.add_edge(record_stock_node, loop_node)
root.order.add_edge(loop_node, receive_stock_node)
root.order.add_edge(receive_stock_node, loop_node)
root.order.add_edge(loop_node, place_stock_shelves_node)
root.order.add_edge(place_stock_shelves_node, loop_node)
root.order.add_edge(loop_node, place_stock_storage_node)
root.order.add_edge(place_stock_storage_node