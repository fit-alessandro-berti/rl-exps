import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
begin_contract_negotiations = Transition(label='Begin contract negotiations')
conduct_interview = Transition(label='Conduct interview')
conduct_site_visit = Transition(label='Conduct site visit')
evaluate_proposal = Transition(label='Evaluate proposal')
execute_contract = Transition(label='Execute contract')
identify_need_for_new_supplier_or_vendor = Transition(label='Identify need for new supplier or vendor')
issue_request_for_proposals_RFP = Transition(label='Issue request for proposals (RFP)')
onboard_supplier = Transition(label='Onboard supplier')
receive_supplier_proposals = Transition(label='Receive supplier proposals')
select_supplier = Transition(label='Select supplier')
sign_contract = Transition(label='Sign contract')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[evaluate_proposal, select_supplier, sign_contract])
xor = OperatorPOWL(operator=Operator.XOR, children=[conduct_interview, conduct_site_visit, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[issue_request_for_proposals_RFP, receive_supplier_proposals])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[identify_need_for_new_supplier_or_vendor, xor2])
root = StrictPartialOrder(nodes=[xor3, loop, execute_contract])
root.order.add_edge(xor3, loop)
root.order.add_edge(xor3, execute_contract)
root.order.add_edge(loop, execute_contract)
root.order.add_edge(xor2, loop)
root.order.add_edge(xor2, execute_contract)
root.order.add_edge(loop, xor)
root.order.add_edge(xor2, xor)
root.order.add_edge(xor, execute_contract)
root.order.add_edge(xor3, xor)