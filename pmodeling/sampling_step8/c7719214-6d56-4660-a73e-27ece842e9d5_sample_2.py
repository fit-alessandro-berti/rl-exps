import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define the transitions (activities)
milk_sourcing = Transition(label='Milk Sourcing')
diet_monitoring = Transition(label='Diet Monitoring')
culture_selection = Transition(label='Culture Selection')
milk_pasturize = Transition(label='Milk Pasteurize')
curd_cutting = Transition(label='Curd Cutting')
whey_draining = Transition(label='Whey Draining')
mold_inoculate = Transition(label='Mold Inoculate')
press_forming = Transition(label='Press Forming')
salt_application = Transition(label='Salt Application')
aging_setup = Transition(label='Aging Setup')
humidity_control = Transition(label='Humidity Control')
flavor_testing = Transition(label='Flavor Testing')
packaging_design = Transition(label='Packaging Design')
order_processing = Transition(label='Order Processing')
retail_delivery = Transition(label='Retail Delivery')
event_coordination = Transition(label='Event Coordination')
feedback_review = Transition(label='Feedback Review')

# Define the loops and choices
milk_sourcing_loop = OperatorPOWL(operator=Operator.LOOP, children=[milk_sourcing, diet_monitoring])
culture_selection_loop = OperatorPOWL(operator=Operator.LOOP, children=[culture_selection, milk_pasturize])
curd_cutting_loop = OperatorPOWL(operator=Operator.LOOP, children=[curd_cutting, whey_draining])
mold_inoculate_loop = OperatorPOWL(operator=Operator.LOOP, children=[mold_inoculate, press_forming])
salt_application_loop = OperatorPOWL(operator=Operator.LOOP, children=[salt_application, aging_setup])
humidity_control_loop = OperatorPOWL(operator=Operator.LOOP, children=[humidity_control, flavor_testing])
packaging_design_loop = OperatorPOWL(operator=Operator.LOOP, children=[packaging_design, order_processing])
retail_delivery_loop = OperatorPOWL(operator=Operator.LOOP, children=[retail_delivery, event_coordination])
feedback_review_loop = OperatorPOWL(operator=Operator.LOOP, children=[feedback_review, milk_sourcing])

# Define the root model
root = StrictPartialOrder(nodes=[milk_sourcing_loop, culture_selection_loop, curd_cutting_loop, mold_inoculate_loop, salt_application_loop, humidity_control_loop, packaging_design_loop, retail_delivery_loop, feedback_review_loop])
root.order.add_edge(milk_sourcing_loop, culture_selection_loop)
root.order.add_edge(culture_selection_loop, milk_pasturize)
root.order.add_edge(milk_pasturize, curd_cutting_loop)
root.order.add_edge(curd_cutting_loop, whey_draining)
root.order.add_edge(whey_draining, mold_inoculate_loop)
root.order.add_edge(mold_inoculate_loop, press_forming)
root.order.add_edge(press_forming, salt_application_loop)
root.order.add_edge(salt_application_loop, aging_setup)
root.order.add_edge(aging_setup, humidity_control_loop)
root.order.add_edge(humidity_control_loop, flavor_testing)
root.order.add_edge(flavor_testing, packaging_design_loop)
root.order.add_edge(packaging_design_loop, order_processing)
root.order.add_edge(order_processing, retail_delivery_loop)
root.order.add_edge(retail_delivery_loop, event_coordination)
root.order.add_edge(event_coordination, feedback_review_loop)