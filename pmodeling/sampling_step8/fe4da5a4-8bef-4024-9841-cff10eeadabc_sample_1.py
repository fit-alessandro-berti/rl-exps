import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

permit = Transition(label='Permit Securing')
structure = Transition(label='Structure Check')
soil = Transition(label='Soil Testing')
water = Transition(label='Water Analysis')
material = Transition(label='Material Sourcing')
planter = Transition(label='Planter Setup')
sensor = Transition(label='Sensor Install')
irrigation = Transition(label='Irrigation Setup')
vendor = Transition(label='Vendor Liaison')
training = Transition(label='Staff Training')
pest = Transition(label='Pest Control')
marketing = Transition(label='Produce Marketing')
rotation = Transition(label='Crop Rotation')
health = Transition(label='Health Audit')
composting = Transition(label='Waste Composting')

skip = SilentTransition()

permit_check = OperatorPOWL(operator=Operator.XOR, children=[permit, skip])
structure_check = OperatorPOWL(operator=Operator.XOR, children=[structure, skip])
soil_test = OperatorPOWL(operator=Operator.XOR, children=[soil, skip])
water_test = OperatorPOWL(operator=Operator.XOR, children=[water, skip])
material_source = OperatorPOWL(operator=Operator.XOR, children=[material, skip])
planter_setup = OperatorPOWL(operator=Operator.XOR, children=[planter, skip])
sensor_install = OperatorPOWL(operator=Operator.XOR, children=[sensor, skip])
irrigation_setup = OperatorPOWL(operator=Operator.XOR, children=[irrigation, skip])
vendor_liaison = OperatorPOWL(operator=Operator.XOR, children=[vendor, skip])
staff_training = OperatorPOWL(operator=Operator.XOR, children=[training, skip])
pest_control = OperatorPOWL(operator=Operator.XOR, children=[pest, skip])
produce_marketing = OperatorPOWL(operator=Operator.XOR, children=[marketing, skip])
seasonal_rotation = OperatorPOWL(operator=Operator.XOR, children=[rotation, skip])
health_audit = OperatorPOWL(operator=Operator.XOR, children=[health, skip])
waste_composting = OperatorPOWL(operator=Operator.XOR, children=[composting, skip])

root = StrictPartialOrder(nodes=[permit_check, structure_check, soil_test, water_test, material_source, planter_setup, sensor_install, irrigation_setup, vendor_liaison, staff_training, pest_control, produce_marketing, seasonal_rotation, health_audit, waste_composting])
root.order.add_edge(permit_check, structure_check)
root.order.add_edge(structure_check, soil_test)
root.order.add_edge(soil_test, water_test)
root.order.add_edge(water_test, material_source)
root.order.add_edge(material_source, planter_setup)
root.order.add_edge(planter_setup, sensor_install)
root.order.add_edge(sensor_install, irrigation_setup)
root.order.add_edge(irrigation_setup, vendor_liaison)
root.order.add_edge(vendor_liaison, staff_training)
root.order.add_edge(staff_training, pest_control)
root.order.add_edge(pest_control, produce_marketing)
root.order.add_edge(produce_marketing, seasonal_rotation)
root.order.add_edge(seasonal_rotation, health_audit)
root.order.add_edge(health_audit, waste_composting)