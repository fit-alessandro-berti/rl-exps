import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
climate_study = Transition(label='Climate Study')
design_layout = Transition(label='Design Layout')
system_install = Transition(label='System Install')
crop_select = Transition(label='Crop Select')
nutrient_plan = Transition(label='Nutrient Plan')
sensor_setup = Transition(label='Sensor Setup')
automation_test = Transition(label='Automation Test')
staff_train = Transition(label='Staff Train')
compliance_check = Transition(label='Compliance Check')
marketing_sync = Transition(label='Marketing Sync')
data_monitor = Transition(label='Data Monitor')
yield_analyze = Transition(label='Yield Analyze')
supply_chain = Transition(label='Supply Chain')
customer_engage = Transition(label='Customer Engage')

skip = SilentTransition()
xor1 = OperatorPOWL(operator=Operator.XOR, children=[compliance_check, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[marketing_sync, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[data_monitor, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[yield_analyze, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[supply_chain, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[customer_engage, skip])

root = StrictPartialOrder(nodes=[site_survey, climate_study, design_layout, system_install, crop_select, nutrient_plan, sensor_setup, automation_test, staff_train, xor1, xor2, xor3, xor4, xor5, xor6])
root.order.add_edge(site_survey, climate_study)
root.order.add_edge(climate_study, design_layout)
root.order.add_edge(design_layout, system_install)
root.order.add_edge(system_install, crop_select)
root.order.add_edge(crop_select, nutrient_plan)
root.order.add_edge(nutrient_plan, sensor_setup)
root.order.add_edge(sensor_setup, automation_test)
root.order.add_edge(automation_test, staff_train)
root.order.add_edge(staff_train, xor1)
root.order.add_edge(xor1, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)