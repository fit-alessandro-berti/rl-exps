import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

Send_notification = Transition(label='Send notification')
Prepare_financial_statements = Transition(label='Prepare financial statements')
Gather_necessary_documents = Transition(label='Gather necessary documents')
Check_regulatory_updates = Transition(label='Check regulatory updates')
Submit_documents = Transition(label='Submit documents')
Review_submission = Transition(label='Review submission')
Request_clarifications_of_discrepancies = Transition(label='Request clarifications of discrepancies')
Receive_clarifications = Transition(label='Receive clarifications')
Compile_audit_report = Transition(label='Compile audit report')
Review_report_by_audit_director = Transition(label='Review report by audit director')
Approve_report = Transition(label='Approve report')
Send_report_for_revision = Transition(label='Send report for revision')
Update_and_resubmit_report = Transition(label='Update and resubmit report')
Distribute_final_report = Transition(label='Distribute final report')
Archive_report = Transition(label='Archive report')
Close_audit_process = Transition(label='Close audit process')
Complete_risk_assessment_mitigation = Transition(label='Complete risk assessment/mitigation')
Launch_detailed_investigation = Transition(label='Launch detailed investigation')
Conduct_data_analysis = Transition(label='Conduct data analysis')
Conduct_interviews = Transition(label='Conduct interviews')
Perform_site_visits = Transition(label='Perform site visits')
Evaluate_financial_risks = Transition(label='Evaluate financial risks')
Evaluate_operational_risks = Transition(label='Evaluate operational risks')
Evaluate_compliance_risks = Transition(label='Evaluate compliance risks')

loop = OperatorPOWL(operator=Operator.LOOP, children=[Review_report_by_audit_director, Approve_report, Send_report_for_revision, Update_and_resubmit_report])
xor1 = OperatorPOWL(operator=Operator.XOR, children=[Complete_risk_assessment_mitigation, Launch_detailed_investigation])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[Conduct_data_analysis, Conduct_interviews, Perform_site_visits])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[Evaluate_financial_risks, Evaluate_operational_risks, Evaluate_compliance_risks])

root = StrictPartialOrder(nodes=[Send_notification, Prepare_financial_statements, Gather_necessary_documents, Check_regulatory_updates, Submit_documents, Review_submission, Request_clarifications_of_discrepancies, Receive_clarifications, Compile_audit_report, loop, Distribute_final_report, Archive_report, Close_audit_process, xor1, xor2, xor3])

root.order.add_edge(Send_notification, Prepare_financial_statements)
root.order.add_edge(Send_notification, Check_regulatory_updates)
root.order.add_edge(Prepare_financial_statements, Gather_necessary_documents)
root.order.add_edge(Check_regulatory_updates, Gather_necessary_documents)
root.order.add_edge(Gather_necessary_documents, Submit_documents)
root.order.add_edge(Submit_documents, Review_submission)
root.order.add_edge(Review_submission, Request_clarifications_of_discrepancies)
root.order.add_edge(Request_clarifications_of_discrepancies, Receive_clarifications)
root.order.add_edge(Receive_clarifications, Compile_audit_report)
root.order.add_edge(Compile_audit_report, loop)
root.order.add_edge(loop, Distribute_final_report)
root.order.add_edge(Distribute_final_report, Archive_report)
root.order.add_edge(Archive_report, Close_audit_process)
root.order.add_edge(Compile_audit_report, xor1)
root.order.add_edge(xor1, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, loop)