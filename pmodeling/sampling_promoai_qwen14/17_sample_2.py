import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define activities as transitions
Place_order = Transition(label='Place order')
Process_payment = Transition(label='Process payment')
Check_stock_availability = Transition(label='Check stock availability')
Inform_customer_about_delay = Transition(label='Inform customer about delay')
Initiate_back_order = Transition(label='Initiate back-order')
Receive_back_order = Transition(label='Receive back-order')
Pick_items_from_warehouse = Transition(label='Pick items from warehouse')
Perform_quality_control_checks = Transition(label='Perform quality control checks')
Gift_wrap_items = Transition(label='Gift wrap items')
Package_items = Transition(label='Package items')
Prepare_shipping_documents_and_labels = Transition(label='Prepare shipping documents and labels')
Prepare_documentation_for_international_orders = Transition(label='Prepare documentation for international orders')
Dispatch_order = Transition(label='Dispatch order')
Send_shipping_confirmation_to_customer = Transition(label='Send shipping confirmation to customer')
Update_inventory_levels = Transition(label='Update inventory levels')
Send_follow_up_email = Transition(label='Send follow-up email')
Customer_reports_issue = Transition(label='Customer reports issue')
Send_return_shipping_label = Transition(label='Send return shipping label')
Receive_returned_items = Transition(label='Receive returned items')
Inspect_returned_items = Transition(label='Inspect returned items')
Process_refund = Transition(label='Process refund')
Process_replacement = Transition(label='Process replacement')
Confirm_delivery = Transition(label='Confirm delivery')
Notify_about_failed_payment = Transition(label='Notify about failed payment')

# Define silent transitions
skip = SilentTransition()

# Define loop and choice nodes
Process_payment_loop = OperatorPOWL(operator=Operator.LOOP, children=[Process_payment])
Check_stock_availability_loop = OperatorPOWL(operator=Operator.LOOP, children=[Check_stock_availability])
Pick_items_from_warehouse_loop = OperatorPOWL(operator=Operator.LOOP, children=[Pick_items_from_warehouse])
Perform_quality_control_checks_loop = OperatorPOWL(operator=Operator.LOOP, children=[Perform_quality_control_checks])
Gift_wrap_items_loop = OperatorPOWL(operator=Operator.LOOP, children=[Gift_wrap_items])
Package_items_loop = OperatorPOWL(operator=Operator.LOOP, children=[Package_items])
Prepare_shipping_documents_and_labels_loop = OperatorPOWL(operator=Operator.LOOP, children=[Prepare_shipping_documents_and_labels])
Prepare_documentation_for_international_orders_loop = OperatorPOWL(operator=Operator.LOOP, children=[Prepare_documentation_for_international_orders])
Dispatch_order_loop = OperatorPOWL(operator=Operator.LOOP, children=[Dispatch_order])
Send_shipping_confirmation_to_customer_loop = OperatorPOWL(operator=Operator.LOOP, children=[Send_shipping_confirmation_to_customer])
Update_inventory_levels_loop = OperatorPOWL(operator=Operator.LOOP, children=[Update_inventory_levels])
Send_follow_up_email_loop = OperatorPOWL(operator=Operator.LOOP, children=[Send_follow_up_email])
Customer_reports_issue_loop = OperatorPOWL(operator=Operator.LOOP, children=[Customer_reports_issue])
Send_return_shipping_label_loop = OperatorPOWL(operator=Operator.LOOP, children=[Send_return_shipping_label])
Receive_returned_items_loop = OperatorPOWL(operator=Operator.LOOP, children=[Receive_returned_items])
Inspect_returned_items_loop = OperatorPOWL(operator=Operator.LOOP, children=[Inspect_returned_items])
Process_refund_loop = OperatorPOWL(operator=Operator.LOOP, children=[Process_refund])
Process_replacement_loop = OperatorPOWL(operator=Operator.LOOP, children=[Process_replacement])
Confirm_delivery_loop = OperatorPOWL(operator=Operator.LOOP, children=[Confirm_delivery])

# Define choice nodes
Payment_failure_choice = OperatorPOWL(operator=Operator.XOR, children=[Notify_about_failed_payment, skip])
Stock_availability_choice = OperatorPOWL(operator=Operator.XOR, children=[Check_stock_availability, Initiate_back_order])
Back_order_choice = OperatorPOWL(operator=Operator.XOR, children=[Receive_back_order, skip])
Issue_reported_choice = OperatorPOWL(operator=Operator.XOR, children=[Send_return_shipping_label, skip])
Return_received_choice = OperatorPOWL(operator=Operator.XOR, children=[Receive_returned_items, skip])
Inspection_result_choice = OperatorPOWL(operator=Operator.XOR, children=[Inspect_returned_items, skip])
Refund_or_replacement_choice = OperatorPOWL(operator=Operator.XOR, children=[Process_refund, Process_replacement])

# Define the root node as a strict partial order
root = StrictPartialOrder(nodes=[Place_order, Process_payment_loop, Check_stock_availability_loop, Pick_items_from_warehouse_loop, Perform_quality_control_checks_loop, Gift_wrap_items_loop, Package_items_loop, Prepare_shipping_documents_and_labels_loop, Prepare_documentation_for_international_orders_loop, Dispatch_order_loop, Send_shipping_confirmation_to_customer_loop, Update_inventory_levels_loop, Send_follow_up_email_loop, Customer_reports_issue_loop, Send_return_shipping_label_loop, Receive_returned_items_loop, Inspect_returned_items_loop, Process_refund_loop, Process_replacement_loop, Confirm_delivery_loop])

# Define the order of execution
root.order.add_edge(Place_order, Process_payment_loop)
root.order.add_edge(Process_payment_loop, Payment_failure_choice)
root.order.add_edge(Payment_failure_choice, Check_stock_availability_loop)
root.order.add_edge(Check_stock_availability_loop, Stock_availability_choice)
root.order.add_edge(Stock_availability_choice, Back_order_choice)
root.order.add_edge(Back_order_choice, Pick_items_from_warehouse_loop)
root.order.add_edge(Pick_items_from_warehouse_loop, Perform_quality_control_checks_loop)
root.order.add_edge(Perform_quality_control_checks_loop, Gift_wrap_items_loop)
root.order.add_edge(Gift_wrap_items_loop, Package_items_loop)
root.order.add_edge(Package_items_loop, Prepare_shipping_documents_and_labels_loop)
root.order.add_edge(Prepare_shipping_documents_and_labels_loop, Prepare_documentation_for_international_orders_loop)
root.order.add_edge(Prepare_documentation_for_international_orders_loop, Dispatch_order_loop)
root.order.add_edge(Dispatch_order_loop, Send_shipping_confirmation_to_customer_loop)
root.order.add_edge(Send_shipping_confirmation_to_customer_loop, Update_inventory_levels_loop)
root.order.add_edge(Update_inventory_levels_loop, Send_follow_up_email_loop)
root.order.add_edge(Send_follow_up_email_loop, Customer_reports_issue_loop)
root.order.add_edge(Customer_reports_issue_loop, Issue_reported_choice)
root.order.add_edge(Issue_reported_choice, Send_return_shipping_label_loop)
root.order.add_edge(Send_return_shipping_label_loop, Receive_returned_items_loop)
root.order.add_edge(Receive_returned_items_loop, Return_received_choice)
root.order.add_edge(Return_received_choice, Inspect_returned_items_loop)
root.order.add_edge(Inspect_returned_items_loop, Inspection_result_choice)
root.order.add_edge(Inspection_result_choice, Refund_or_replacement_choice)
root.order.add_edge(Refund_or_replacement_choice, Confirm_delivery_loop)