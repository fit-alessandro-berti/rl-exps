import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
drone_design = Transition(label='Drone Design')
regulatory_check = Transition(label='Regulatory Check')
nav_system = Transition(label='Nav System')
partner_setup = Transition(label='Partner Setup')
operator_training = Transition(label='Operator Training')
test_flights = Transition(label='Test Flights')
weather_review = Transition(label='Weather Review')
route_optimize = Transition(label='Route Optimize')
parts_logistics = Transition(label='Parts Logistics')
feedback_loop = Transition(label='Feedback Loop')
risk_assess = Transition(label='Risk Assess')
emergency_plan = Transition(label='Emergency Plan')
compliance_audit = Transition(label='Compliance Audit')
data_sync = Transition(label='Data Sync')
service_launch = Transition(label='Service Launch')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[regulatory_check, nav_system])
xor = OperatorPOWL(operator=Operator.XOR, children=[partner_setup, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[operator_training, test_flights])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[weather_review, xor2])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[route_optimize, xor3])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[parts_logistics, xor4])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[feedback_loop, xor5])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[risk_assess, xor6])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[emergency_plan, xor7])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[compliance_audit, xor8])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[data_sync, xor9])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[service_launch, xor10])
root = StrictPartialOrder(nodes=[xor11, drone_design])
root.order.add_edge(xor11, drone_design)