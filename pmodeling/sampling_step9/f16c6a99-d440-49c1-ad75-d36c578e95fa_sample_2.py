import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

SiteSurvey = Transition(label='Site Survey')
DesignLayout = Transition(label='Design Layout')
SensorDeploy = Transition(label='Sensor Deploy')
CropSelect = Transition(label='Crop Select')
SystemInstall = Transition(label='System Install')
EnergySetup = Transition(label='Energy Setup')
WaterCycle = Transition(label='Water Cycle')
PestControl = Transition(label='Pest Control')
RegulatoryCheck = Transition(label='Regulatory Check')
StaffTraining = Transition(label='Staff Training')
DataConfigure = Transition(label='Data Configure')
SupplyPlan = Transition(label='Supply Plan')
HarvestSchedule = Transition(label='Harvest Schedule')
QualityAudit = Transition(label='Quality Audit')
MarketLaunch = Transition(label='Market Launch')
FeedbackLoop = Transition(label='Feedback Loop')

skip = SilentTransition()
SiteSurveyLoop = OperatorPOWL(operator=Operator.LOOP, children=[SiteSurvey, DesignLayout])
DesignLayoutLoop = OperatorPOWL(operator=Operator.LOOP, children=[DesignLayout, SensorDeploy])
SensorDeployLoop = OperatorPOWL(operator=Operator.LOOP, children=[SensorDeploy, CropSelect])
CropSelectLoop = OperatorPOWL(operator=Operator.LOOP, children=[CropSelect, SystemInstall])
SystemInstallLoop = OperatorPOWL(operator=Operator.LOOP, children=[SystemInstall, EnergySetup])
EnergySetupLoop = OperatorPOWL(operator=Operator.LOOP, children=[EnergySetup, WaterCycle])
WaterCycleLoop = OperatorPOWL(operator=Operator.LOOP, children=[WaterCycle, PestControl])
PestControlLoop = OperatorPOWL(operator=Operator.LOOP, children=[PestControl, RegulatoryCheck])
RegulatoryCheckLoop = OperatorPOWL(operator=Operator.LOOP, children=[RegulatoryCheck, StaffTraining])
StaffTrainingLoop = OperatorPOWL(operator=Operator.LOOP, children=[StaffTraining, DataConfigure])
DataConfigureLoop = OperatorPOWL(operator=Operator.LOOP, children=[DataConfigure, SupplyPlan])
SupplyPlanLoop = OperatorPOWL(operator=Operator.LOOP, children=[SupplyPlan, HarvestSchedule])
HarvestScheduleLoop = OperatorPOWL(operator=Operator.LOOP, children=[HarvestSchedule, QualityAudit])
QualityAuditLoop = OperatorPOWL(operator=Operator.LOOP, children=[QualityAudit, MarketLaunch])
MarketLaunchLoop = OperatorPOWL(operator=Operator.LOOP, children=[MarketLaunch, FeedbackLoop])

root = StrictPartialOrder(nodes=[SiteSurveyLoop, DesignLayoutLoop, SensorDeployLoop, CropSelectLoop, SystemInstallLoop, EnergySetupLoop, WaterCycleLoop, PestControlLoop, RegulatoryCheckLoop, StaffTrainingLoop, DataConfigureLoop, SupplyPlanLoop, HarvestScheduleLoop, QualityAuditLoop, MarketLaunchLoop, FeedbackLoop])
root.order.add_edge(SiteSurveyLoop, DesignLayoutLoop)
root.order.add_edge(DesignLayoutLoop, SensorDeployLoop)
root.order.add_edge(SensorDeployLoop, CropSelectLoop)
root.order.add_edge(CropSelectLoop, SystemInstallLoop)
root.order.add_edge(SystemInstallLoop, EnergySetupLoop)
root.order.add_edge(EnergySetupLoop, WaterCycleLoop)
root.order.add_edge(WaterCycleLoop, PestControlLoop)
root.order.add_edge(PestControlLoop, RegulatoryCheckLoop)
root.order.add_edge(RegulatoryCheckLoop, StaffTrainingLoop)
root.order.add_edge(StaffTrainingLoop, DataConfigureLoop)
root.order.add_edge(DataConfigureLoop, SupplyPlanLoop)
root.order.add_edge(SupplyPlanLoop, HarvestScheduleLoop)
root.order.add_edge(HarvestScheduleLoop, QualityAuditLoop)
root.order.add_edge(QualityAuditLoop, MarketLaunchLoop)
root.order.add_edge(MarketLaunchLoop, FeedbackLoop)