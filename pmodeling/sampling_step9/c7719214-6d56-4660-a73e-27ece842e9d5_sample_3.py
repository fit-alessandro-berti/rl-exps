import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

Milk_Sourcing = Transition(label='Milk Sourcing')
Diet_Monitoring = Transition(label='Diet Monitoring')
Culture_Selection = Transition(label='Culture Selection')
Milk_Pasteurize = Transition(label='Milk Pasteurize')
Curd_Cutting = Transition(label='Curd Cutting')
Whey_Draining = Transition(label='Whey Draining')
Mold_Inoculate = Transition(label='Mold Inoculate')
Press_Forming = Transition(label='Press Forming')
Salt_Application = Transition(label='Salt Application')
Aging_Setup = Transition(label='Aging Setup')
Humidity_Control = Transition(label='Humidity Control')
Flavor_Testing = Transition(label='Flavor Testing')
Packaging_Design = Transition(label='Packaging Design')
Order_Processing = Transition(label='Order Processing')
Retail_Delivery = Transition(label='Retail Delivery')
Event_Coordination = Transition(label='Event Coordination')
Feedback_Review = Transition(label='Feedback Review')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[Milk_Sourcing, Diet_Monitoring, Culture_Selection])
xor = OperatorPOWL(operator=Operator.XOR, children=[Milk_Pasteurize, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[Curd_Cutting, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[Whey_Draining, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[Mold_Inoculate, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[Press_Forming, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[Salt_Application, skip])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[Aging_Setup, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[Humidity_Control, skip])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[Flavor_Testing, skip])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[Packaging_Design, skip])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[Order_Processing, skip])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[Retail_Delivery, skip])
xor13 = OperatorPOWL(operator=Operator.XOR, children=[Event_Coordination, skip])
xor14 = OperatorPOWL(operator=Operator.XOR, children=[Feedback_Review, skip])
root = StrictPartialOrder(nodes=[loop, xor, xor2, xor3, xor4, xor5, xor6, xor7, xor8, xor9, xor10, xor11, xor12, xor13, xor14])
root.order.add_edge(loop, xor)
root.order.add_edge(xor, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor6, xor7)
root.order.add_edge(xor7, xor8)
root.order.add_edge(xor8, xor9)
root.order.add_edge(xor9, xor10)
root.order.add_edge(xor10, xor11)
root.order.add_edge(xor11, xor12)
root.order.add_edge(xor12, xor13)
root.order.add_edge(xor13, xor14)