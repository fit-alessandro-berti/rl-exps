import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

client_consult = Transition(label='Client Consult')
spec_gathering = Transition(label='Spec Gathering')
supplier_sourcing = Transition(label='Supplier Sourcing')
design_review = Transition(label='Design Review')
simulation_test = Transition(label='Simulation Test')
proto_assembly = Transition(label='Proto Assembly')
quality_check = Transition(label='Quality Check')
firmware_flash = Transition(label='Firmware Flash')
sensor_install = Transition(label='Sensor Install')
final_testing = Transition(label='Final Testing')
brand_packaging = Transition(label='Brand Packaging')
shipping_prep = Transition(label='Shipping Prep')
delivery_schedule = Transition(label='Delivery Schedule')
client_training = Transition(label='Client Training')
diagnostics_setup = Transition(label='Diagnostics Setup')
skip = SilentTransition()

client_consult_to_spec_gathering = OperatorPOWL(operator=Operator.XOR, children=[client_consult, skip])
spec_gathering_to_supplier_sourcing = OperatorPOWL(operator=Operator.XOR, children=[spec_gathering, skip])
supplier_sourcing_to_design_review = OperatorPOWL(operator=Operator.XOR, children=[supplier_sourcing, skip])
design_review_to_simulation_test = OperatorPOWL(operator=Operator.XOR, children=[design_review, skip])
simulation_test_to_proto_assembly = OperatorPOWL(operator=Operator.XOR, children=[simulation_test, skip])
proto_assembly_to_quality_check = OperatorPOWL(operator=Operator.XOR, children=[proto_assembly, skip])
quality_check_to_firmware_flash = OperatorPOWL(operator=Operator.XOR, children=[quality_check, skip])
firmware_flash_to_sensor_install = OperatorPOWL(operator=Operator.XOR, children=[firmware_flash, skip])
sensor_install_to_final_testing = OperatorPOWL(operator=Operator.XOR, children=[sensor_install, skip])
final_testing_to_brand_packaging = OperatorPOWL(operator=Operator.XOR, children=[final_testing, skip])
brand_packaging_to_shipping_prep = OperatorPOWL(operator=Operator.XOR, children=[brand_packaging, skip])
shipping_prep_to_delivery_schedule = OperatorPOWL(operator=Operator.XOR, children=[shipping_prep, skip])
delivery_schedule_to_client_training = OperatorPOWL(operator=Operator.XOR, children=[delivery_schedule, skip])
client_training_to_diagnostics_setup = OperatorPOWL(operator=Operator.XOR, children=[client_training, skip])
diagnostics_setup_to_end = OperatorPOWL(operator=Operator.XOR, children=[diagnostics_setup, skip])

root = StrictPartialOrder(nodes=[client_consult_to_spec_gathering, spec_gathering_to_supplier_sourcing, supplier_sourcing_to_design_review, design_review_to_simulation_test, simulation_test_to_proto_assembly, proto_assembly_to_quality_check, quality_check_to_firmware_flash, firmware_flash_to_sensor_install, sensor_install_to_final_testing, final_testing_to_brand_packaging, brand_packaging_to_shipping_prep, shipping_prep_to_delivery_schedule, delivery_schedule_to_client_training, client_training_to_diagnostics_setup, diagnostics_setup_to_end])
root.order.add_edge(client_consult_to_spec_gathering, spec_gathering_to_supplier_sourcing)
root.order.add_edge(spec_gathering_to_supplier_sourcing, supplier_sourcing_to_design_review)
root.order.add_edge(supplier_sourcing_to_design_review, design_review_to_simulation_test)
root.order.add_edge(design_review_to_simulation_test, simulation_test_to_proto_assembly)
root.order.add_edge(simulation_test_to_proto_assembly, proto_assembly_to_quality_check)
root.order.add_edge(proto_assembly_to_quality_check, quality_check_to_firmware_flash)
root.order.add_edge(quality_check_to_firmware_flash, firmware_flash_to_sensor_install)
root.order.add_edge(firmware_flash_to_sensor_install, sensor_install_to_final_testing)
root.order.add_edge(sensor_install_to_final_testing, final_testing_to_brand_packaging)
root.order.add_edge(final_testing_to_brand_packaging, brand_packaging_to_shipping_prep)
root.order.add_edge(brand_packaging_to_shipping_prep, shipping_prep_to_delivery_schedule)
root.order.add_edge(shipping_prep_to_delivery_schedule, delivery_schedule_to_client_training)
root.order.add_edge(delivery_schedule_to_client_training, client_training_to_diagnostics_setup)
root.order.add_edge(client_training_to_diagnostics_setup, diagnostics_setup_to_end)