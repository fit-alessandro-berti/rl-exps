import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
MilkSourcing = Transition(label='Milk Sourcing')
QualityTesting = Transition(label='Quality Testing')
CurdProcessing = Transition(label='Curd Processing')
SaltApplication = Transition(label='Salt Application')
MoldInoculation = Transition(label='Mold Inoculation')
PressMolding = Transition(label='Press Molding')
BrineSoaking = Transition(label='Brine Soaking')
AgingSetup = Transition(label='Aging Setup')
HumidityControl = Transition(label='Humidity Control')
MicrobialCheck = Transition(label='Microbial Check')
PackagingDesign = Transition(label='Packaging Design')
LabelPrinting = Transition(label='Label Printing')
TraceLogging = Transition(label='Trace Logging')
DistributionPlan = Transition(label='Distribution Plan')
CustomerReview = Transition(label='Customer Review')
InventoryAudit = Transition(label='Inventory Audit')
SustainabilityAudit = Transition(label='Sustainability Audit')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[MilkSourcing, QualityTesting])
xor = OperatorPOWL(operator=Operator.XOR, children=[CurdProcessing, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[SaltApplication, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[MoldInoculation, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[PressMolding, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[BrineSoaking, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[AgingSetup, skip])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[HumidityControl, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[MicrobialCheck, skip])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[PackagingDesign, skip])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[LabelPrinting, skip])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[TraceLogging, skip])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[DistributionPlan, skip])
xor13 = OperatorPOWL(operator=Operator.XOR, children=[CustomerReview, skip])
xor14 = OperatorPOWL(operator=Operator.XOR, children=[InventoryAudit, skip])
xor15 = OperatorPOWL(operator=Operator.XOR, children=[SustainabilityAudit, skip])
root = StrictPartialOrder(nodes=[loop, xor, xor2, xor3, xor4, xor5, xor6, xor7, xor8, xor9, xor10, xor11, xor12, xor13, xor14, xor15])
root.order.add_edge(loop, xor)
root.order.add_edge(loop, xor2)
root.order.add_edge(loop, xor3)
root.order.add_edge(loop, xor4)
root.order.add_edge(loop, xor5)
root.order.add_edge(loop, xor6)
root.order.add_edge(loop, xor7)
root.order.add_edge(loop, xor8)
root.order.add_edge(loop, xor9)
root.order.add_edge(loop, xor10)
root.order.add_edge(loop, xor11)
root.order.add_edge(loop, xor12)
root.order.add_edge(loop, xor13)
root.order.add_edge(loop, xor14)
root.order.add_edge(loop, xor15)