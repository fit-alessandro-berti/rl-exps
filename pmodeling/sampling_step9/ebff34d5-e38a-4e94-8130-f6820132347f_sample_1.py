import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
milk_sourcing = Transition(label='Milk Sourcing')
quality_testing = Transition(label='Quality Testing')
starter_culture = Transition(label='Starter Culture')
milk_pasturize = Transition(label='Milk Pasteurize')
curd_cutting = Transition(label='Curd Cutting')
whey_draining = Transition(label='Whey Draining')
pressing_cheese = Transition(label='Pressing Cheese')
salting_stage = Transition(label='Salting Stage')
fermentation = Transition(label='Fermentation')
aging_control = Transition(label='Aging Control')
flavor_tasting = Transition(label='Flavor Tasting')
packaging_artisanal = Transition(label='Packaging Artisanal')
label_printing = Transition(label='Label Printing')
order_processing = Transition(label='Order Processing')
direct_delivery = Transition(label='Direct Delivery')
customer_feedback = Transition(label='Customer Feedback')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[milk_sourcing, quality_testing])
xor = OperatorPOWL(operator=Operator.XOR, children=[starter_culture, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[milk_pasturize, xor])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[curd_cutting, xor2])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[whey_draining, xor3])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[pressing_cheese, xor4])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[salting_stage, xor5])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[fermentation, xor6])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[aging_control, xor7])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[flavor_tasting, xor8])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[packaging_artisanal, xor9])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[label_printing, xor10])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[order_processing, xor11])
xor13 = OperatorPOWL(operator=Operator.XOR, children=[direct_delivery, xor12])
xor14 = OperatorPOWL(operator=Operator.XOR, children=[customer_feedback, xor13])
root = StrictPartialOrder(nodes=[loop, xor14])
root.order.add_edge(loop, xor14)