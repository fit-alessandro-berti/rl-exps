import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
Verify_Provenance = Transition(label='Verify Provenance')
Assess_Condition = Transition(label='Assess Condition')
Negotiate_Terms = Transition(label='Negotiate Terms')
Arrange_Transport = Transition(label='Arrange Transport')
Customs_Clearance = Transition(label='Customs Clearance')
Secure_Insurance = Transition(label='Secure Insurance')
Schedule_Handlers = Transition(label='Schedule Handlers')
Install_Artwork = Transition(label='Install Artwork')
Monitor_Climate = Transition(label='Monitor Climate')
Manage_Security = Transition(label='Manage Security')
Facilitate_Access = Transition(label='Facilitate Access')
Document_Display = Transition(label='Document Display')
Coordinate_Events = Transition(label='Coordinate Events')
Inspect_Periodically = Transition(label='Inspect Periodically')
Plan_Return = Transition(label='Plan Return')
Deinstall_Artwork = Transition(label='Deinstall Artwork')
Finalize_Reports = Transition(label='Finalize Reports')
skip = SilentTransition()
Verify_Provenance_Negotiate_Terms = OperatorPOWL(operator=Operator.XOR, children=[Verify_Provenance, Negotiate_Terms])
Arrange_Transport_Customs_Clearance = OperatorPOWL(operator=Operator.XOR, children=[Arrange_Transport, Customs_Clearance])
Secure_Insurance_Manage_Security = OperatorPOWL(operator=Operator.XOR, children=[Secure_Insurance, Manage_Security])
Facilitate_Access_Document_Display = OperatorPOWL(operator=Operator.XOR, children=[Facilitate_Access, Document_Display])
Coordinate_Events_Inspect_Periodically = OperatorPOWL(operator=Operator.XOR, children=[Coordinate_Events, Inspect_Periodically])
Plan_Return_Deinstall_Artwork = OperatorPOWL(operator=Operator.XOR, children=[Plan_Return, Deinstall_Artwork])
root = StrictPartialOrder(nodes=[Verify_Provenance_Negotiate_Terms, Arrange_Transport_Customs_Clearance, Secure_Insurance_Manage_Security, Facilitate_Access_Document_Display, Coordinate_Events_Inspect_Periodically, Plan_Return_Deinstall_Artwork, Finalize_Reports])
root.order.add_edge(Verify_Provenance_Negotiate_Terms, Arrange_Transport_Customs_Clearance)
root.order.add_edge(Verify_Provenance_Negotiate_Terms, Secure_Insurance_Manage_Security)
root.order.add_edge(Verify_Provenance_Negotiate_Terms, Facilitate_Access_Document_Display)
root.order.add_edge(Verify_Provenance_Negotiate_Terms, Coordinate_Events_Inspect_Periodically)
root.order.add_edge(Verify_Provenance_Negotiate_Terms, Plan_Return_Deinstall_Artwork)
root.order.add_edge(Arrange_Transport_Customs_Clearance, Secure_Insurance_Manage_Security)
root.order.add_edge(Arrange_Transport_Customs_Clearance, Facilitate_Access_Document_Display)
root.order.add_edge(Arrange_Transport_Customs_Clearance, Coordinate_Events_Inspect_Periodically)
root.order.add_edge(Arrange_Transport_Customs_Clearance, Plan_Return_Deinstall_Artwork)
root.order.add_edge(Secure_Insurance_Manage_Security, Facilitate_Access_Document_Display)
root.order.add_edge(Secure_Insurance_Manage_Security, Coordinate_Events_Inspect_Periodically)
root.order.add_edge(Secure_Insurance_Manage_Security, Plan_Return_Deinstall_Artwork)
root.order.add_edge(Facilitate_Access_Document_Display, Coordinate_Events_Inspect_Periodically)
root.order.add_edge(Facilitate_Access_Document_Display, Plan_Return_Deinstall_Artwork)
root.order.add_edge(Coordinate_Events_Inspect_Periodically, Plan_Return_Deinstall_Artwork)