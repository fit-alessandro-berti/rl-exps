import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

patent_scouting = Transition(label='Patent Scouting')
technical_review = Transition(label='Technical Review')
legal_audit = Transition(label='Legal Audit')
market_analysis = Transition(label='Market Analysis')
valuation_modeling = Transition(label='Valuation Modeling')
risk_assessment = Transition(label='Risk Assessment')
license_targeting = Transition(label='License Targeting')
buyer_outreach = Transition(label='Buyer Outreach')
negotiation_phase = Transition(label='Negotiation Phase')
contract_drafting = Transition(label='Contract Drafting')
approval_process = Transition(label='Approval Process')
portfolio_tracking = Transition(label='Portfolio Tracking')
revenue_monitoring = Transition(label='Revenue Monitoring')
compliance_check = Transition(label='Compliance Check')
innovation_scan = Transition(label='Innovation Scan')
renewal_management = Transition(label='Renewal Management')

skip = SilentTransition()

loop_patent_scouting = OperatorPOWL(operator=Operator.LOOP, children=[patent_scouting, technical_review, legal_audit])
xor_market_analysis = OperatorPOWL(operator=Operator.XOR, children=[market_analysis, skip])
xor_valuation_modeling = OperatorPOWL(operator=Operator.XOR, children=[valuation_modeling, skip])
xor_risk_assessment = OperatorPOWL(operator=Operator.XOR, children=[risk_assessment, skip])
xor_license_targeting = OperatorPOWL(operator=Operator.XOR, children=[license_targeting, skip])
xor_buyer_outreach = OperatorPOWL(operator=Operator.XOR, children=[buyer_outreach, skip])
xor_negotiation_phase = OperatorPOWL(operator=Operator.XOR, children=[negotiation_phase, skip])
xor_contract_drafting = OperatorPOWL(operator=Operator.XOR, children=[contract_drafting, skip])
xor_approval_process = OperatorPOWL(operator=Operator.XOR, children=[approval_process, skip])
xor_portfolio_tracking = OperatorPOWL(operator=Operator.XOR, children=[portfolio_tracking, skip])
xor_revenue_monitoring = OperatorPOWL(operator=Operator.XOR, children=[revenue_monitoring, skip])
xor_compliance_check = OperatorPOWL(operator=Operator.XOR, children=[compliance_check, skip])
xor_innovation_scan = OperatorPOWL(operator=Operator.XOR, children=[innovation_scan, skip])
xor_renewal_management = OperatorPOWL(operator=Operator.XOR, children=[renewal_management, skip])

root = StrictPartialOrder(nodes=[loop_patent_scouting, xor_market_analysis, xor_valuation_modeling, xor_risk_assessment, xor_license_targeting, xor_buyer_outreach, xor_negotiation_phase, xor_contract_drafting, xor_approval_process, xor_portfolio_tracking, xor_revenue_monitoring, xor_compliance_check, xor_innovation_scan, xor_renewal_management])
root.order.add_edge(loop_patent_scouting, xor_market_analysis)
root.order.add_edge(loop_patent_scouting, xor_valuation_modeling)
root.order.add_edge(loop_patent_scouting, xor_risk_assessment)
root.order.add_edge(loop_patent_scouting, xor_license_targeting)
root.order.add_edge(loop_patent_scouting, xor_buyer_outreach)
root.order.add_edge(loop_patent_scouting, xor_negotiation_phase)
root.order.add_edge(loop_patent_scouting, xor_contract_drafting)
root.order.add_edge(loop_patent_scouting, xor_approval_process)
root.order.add_edge(loop_patent_scouting, xor_portfolio_tracking)
root.order.add_edge(loop_patent_scouting, xor_revenue_monitoring)
root.order.add_edge(loop_patent_scouting, xor_compliance_check)
root.order.add_edge(loop_patent_scouting, xor_innovation_scan)
root.order.add_edge(loop_patent_scouting, xor_renewal_management)