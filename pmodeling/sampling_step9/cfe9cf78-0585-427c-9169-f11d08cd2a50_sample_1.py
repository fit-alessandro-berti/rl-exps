import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

Site_Analysis = Transition(label='Site Analysis')
Env_Assessment = Transition(label='Env Assessment')
System_Design = Transition(label='System Design')
Equipment_Order = Transition(label='Equipment Order')
Seed_Selection = Transition(label='Seed Selection')
Install_Modules = Transition(label='Install Modules')
Calibrate_Systems = Transition(label='Calibrate Systems')
Staff_Training = Transition(label='Staff Training')
Plant_Seeding = Transition(label='Plant Seeding')
IoT_Monitoring = Transition(label='IoT Monitoring')
Data_Analytics = Transition(label='Data Analytics')
Nutrient_Adjust = Transition(label='Nutrient Adjust')
Pest_Control = Transition(label='Pest Control')
Maintenance_Check = Transition(label='Maintenance Check')
Market_Launch = Transition(label='Market Launch')
Logistics_Setup = Transition(label='Logistics Setup')

skip = SilentTransition()

loop1 = OperatorPOWL(operator=Operator.LOOP, children=[Equipment_Order, Seed_Selection, Install_Modules, Calibrate_Systems, Staff_Training, Plant_Seeding, Maintenance_Check])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[Market_Launch, Logistics_Setup])
xor = OperatorPOWL(operator=Operator.XOR, children=[loop1, loop2])
root = StrictPartialOrder(nodes=[Site_Analysis, Env_Assessment, System_Design, xor])
root.order.add_edge(Site_Analysis, Env_Assessment)
root.order.add_edge(Env_Assessment, System_Design)
root.order.add_edge(System_Design, Equipment_Order)
root.order.add_edge(Equipment_Order, Seed_Selection)
root.order.add_edge(Seed_Selection, Install_Modules)
root.order.add_edge(Install_Modules, Calibrate_Systems)
root.order.add_edge(Calibrate_Systems, Staff_Training)
root.order.add_edge(Staff_Training, Plant_Seeding)
root.order.add_edge(Plant_Seeding, Maintenance_Check)
root.order.add_edge(Maintenance_Check, loop1)
root.order.add_edge(loop1, Market_Launch)
root.order.add_edge(Market_Launch, Logistics_Setup)
root.order.add_edge(Logistics_Setup, loop2)
root.order.add_edge(loop2, xor)