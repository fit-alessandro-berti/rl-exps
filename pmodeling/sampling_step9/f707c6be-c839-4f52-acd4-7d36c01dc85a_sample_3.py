import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

artifact_intake = Transition(label='Artifact Intake')
condition_check = Transition(label='Condition Check')
multi_spectral_scan = Transition(label='Multi-spectral Scan')
material_test = Transition(label='Material Test')
database_match = Transition(label='Database Match')
provenance_check = Transition(label='Provenance Check')
expert_review = Transition(label='Expert Review')
historical_query = Transition(label='Historical Query')
lab_collaboration = Transition(label='Lab Collaboration')
imaging_analysis = Transition(label='Imaging Analysis')
forgery_detection = Transition(label='Forgery Detection')
legal_drafting = Transition(label='Legal Drafting')
certification_issue = Transition(label='Certification Issue')
client_briefing = Transition(label='Client Briefing')
archival_update = Transition(label='Archival Update')

skip = SilentTransition()
xor1 = OperatorPOWL(operator=Operator.XOR, children=[provenance_check, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[expert_review, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[historical_query, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[lab_collaboration, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[imaging_analysis, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[forgery_detection, skip])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[legal_drafting, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[client_briefing, skip])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[archival_update, skip])
loop1 = OperatorPOWL(operator=Operator.LOOP, children=[database_match, xor1])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[xor2, xor3])
loop3 = OperatorPOWL(operator=Operator.LOOP, children=[xor4, xor5])
loop4 = OperatorPOWL(operator=Operator.LOOP, children=[xor6, xor7])
loop5 = OperatorPOWL(operator=Operator.LOOP, children=[xor8, xor9])

root = StrictPartialOrder(nodes=[artifact_intake, condition_check, multi_spectral_scan, material_test, loop1, loop2, loop3, loop4, loop5, certification_issue])
root.order.add_edge(artifact_intake, condition_check)
root.order.add_edge(artifact_intake, multi_spectral_scan)
root.order.add_edge(condition_check, material_test)
root.order.add_edge(material_test, loop1)
root.order.add_edge(loop1, xor1)
root.order.add_edge(loop1, xor2)
root.order.add_edge(xor1, expert_review)
root.order.add_edge(xor1, historical_query)
root.order.add_edge(xor2, lab_collaboration)
root.order.add_edge(xor2, imaging_analysis)
root.order.add_edge(loop2, xor3)
root.order.add_edge(loop2, xor4)
root.order.add_edge(xor3, forgery_detection)
root.order.add_edge(xor3, legal_drafting)
root.order.add_edge(loop3, xor5)
root.order.add_edge(loop3, xor6)
root.order.add_edge(xor5, client_briefing)
root.order.add_edge(xor5, archival_update)
root.order.add_edge(loop4, xor7)
root.order.add_edge(loop4, xor8)
root.order.add_edge(xor7, certification_issue)
root.order.add_edge(xor7, archival_update)
root.order.add_edge(loop5, xor9)
root.order.add_edge(loop5, xor10)
root.order.add_edge(xor9, archival_update)