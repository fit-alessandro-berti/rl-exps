import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define the transitions
site_analysis = Transition(label='Site Analysis')
env_assessment = Transition(label='Env Assessment')
system_design = Transition(label='System Design')
equipment_order = Transition(label='Equipment Order')
seed_selection = Transition(label='Seed Selection')
install_modules = Transition(label='Install Modules')
calibrate_systems = Transition(label='Calibrate Systems')
staff_training = Transition(label='Staff Training')
plant_seeding = Transition(label='Plant Seeding')
iot_monitoring = Transition(label='IoT Monitoring')
data_analytics = Transition(label='Data Analytics')
nutrient_adjust = Transition(label='Nutrient Adjust')
pest_control = Transition(label='Pest Control')
maintenance_check = Transition(label='Maintenance Check')
market_launch = Transition(label='Market Launch')
logistics_setup = Transition(label='Logistics Setup')
skip = SilentTransition()

# Define the POWL model
loop = OperatorPOWL(operator=Operator.LOOP, children=[install_modules, calibrate_systems])
xor = OperatorPOWL(operator=Operator.XOR, children=[staff_training, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[iot_monitoring, data_analytics])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[nutrient_adjust, pest_control])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[maintenance_check, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[market_launch, logistics_setup])
root = StrictPartialOrder(nodes=[site_analysis, env_assessment, system_design, equipment_order, seed_selection, loop, xor, xor2, xor3, xor4, xor5])
root.order.add_edge(site_analysis, env_assessment)
root.order.add_edge(env_assessment, system_design)
root.order.add_edge(system_design, equipment_order)
root.order.add_edge(equipment_order, seed_selection)
root.order.add_edge(seed_selection, loop)
root.order.add_edge(loop, xor)
root.order.add_edge(xor, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, market_launch)
root.order.add_edge(xor5, logistics_setup)

print(root)