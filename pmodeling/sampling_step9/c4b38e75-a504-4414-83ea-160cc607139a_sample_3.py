import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define transitions for each activity
Site_Survey = Transition(label='Site Survey')
Design_Modules = Transition(label='Design Modules')
Install_Sensors = Transition(label='Install Sensors')
Calibrate_Climate = Transition(label='Calibrate Climate')
Select_Sequences = Transition(label='Select Seeds')
Optimize_Nutrients = Transition(label='Optimize Nutrients')
Deploy_Robots = Transition(label='Deploy Robots')
Monitor_Growth = Transition(label='Monitor Growth')
Detect_Pests = Transition(label='Detect Pests')
Analyze_Data = Transition(label='Analyze Data')
Harvest_Crops = Transition(label='Harvest Crops')
Customize_Pack = Transition(label='Customize Pack')
Recycle_Waste = Transition(label='Recycle Waste')
Audit_Energy = Transition(label='Audit Energy')
Align_Demand = Transition(label='Align Demand')

# Define silent transitions
skip = SilentTransition()

# Define loops and exclusive choices
loop_Site_Survey = OperatorPOWL(operator=Operator.LOOP, children=[Site_Survey])
loop_Design_Modules = OperatorPOWL(operator=Operator.LOOP, children=[Design_Modules])
loop_Install_Sensors = OperatorPOWL(operator=Operator.LOOP, children=[Install_Sensors])
loop_Calibrate_Climate = OperatorPOWL(operator=Operator.LOOP, children=[Calibrate_Climate])
loop_Select_Sequences = OperatorPOWL(operator=Operator.LOOP, children=[Select_Sequences])
loop_Optimize_Nutrients = OperatorPOWL(operator=Operator.LOOP, children=[Optimize_Nutrients])
loop_Deploy_Robots = OperatorPOWL(operator=Operator.LOOP, children=[Deploy_Robots])
loop_Monitor_Growth = OperatorPOWL(operator=Operator.LOOP, children=[Monitor_Growth])
loop_Detect_Pests = OperatorPOWL(operator=Operator.LOOP, children=[Detect_Pests])
loop_Analyze_Data = OperatorPOWL(operator=Operator.LOOP, children=[Analyze_Data])
loop_Harvest_Crops = OperatorPOWL(operator=Operator.LOOP, children=[Harvest_Crops])
loop_Customize_Pack = OperatorPOWL(operator=Operator.LOOP, children=[Customize_Pack])
loop_Recycle_Waste = OperatorPOWL(operator=Operator.LOOP, children=[Recycle_Waste])
loop_Audit_Energy = OperatorPOWL(operator=Operator.LOOP, children=[Audit_Energy])
loop_Align_Demand = OperatorPOWL(operator=Operator.LOOP, children=[Align_Demand])

xor_Site_Survey = OperatorPOWL(operator=Operator.XOR, children=[loop_Site_Survey, skip])
xor_Design_Modules = OperatorPOWL(operator=Operator.XOR, children=[loop_Design_Modules, skip])
xor_Install_Sensors = OperatorPOWL(operator=Operator.XOR, children=[loop_Install_Sensors, skip])
xor_Calibrate_Climate = OperatorPOWL(operator=Operator.XOR, children=[loop_Calibrate_Climate, skip])
xor_Select_Sequences = OperatorPOWL(operator=Operator.XOR, children=[loop_Select_Sequences, skip])
xor_Optimize_Nutrients = OperatorPOWL(operator=Operator.XOR, children=[loop_Optimize_Nutrients, skip])
xor_Deploy_Robots = OperatorPOWL(operator=Operator.XOR, children=[loop_Deploy_Robots, skip])
xor_Monitor_Growth = OperatorPOWL(operator=Operator.XOR, children=[loop_Monitor_Growth, skip])
xor_Detect_Pests = OperatorPOWL(operator=Operator.XOR, children=[loop_Detect_Pests, skip])
xor_Analyze_Data = OperatorPOWL(operator=Operator.XOR, children=[loop_Analyze_Data, skip])
xor_Harvest_Crops = OperatorPOWL(operator=Operator.XOR, children=[loop_Harvest_Crops, skip])
xor_Customize_Pack = OperatorPOWL(operator=Operator.XOR, children=[loop_Customize_Pack, skip])
xor_Recycle_Waste = OperatorPOWL(operator=Operator.XOR, children=[loop_Recycle_Waste, skip])
xor_Audit_Energy = OperatorPOWL(operator=Operator.XOR, children=[loop_Audit_Energy, skip])
xor_Align_Demand = OperatorPOWL(operator=Operator.XOR, children=[loop_Align_Demand, skip])

root = StrictPartialOrder(nodes=[xor_Site_Survey, xor_Design_Modules, xor_Install_Sensors, xor_Calibrate_Climate, xor_Select_Sequences, xor_Optimize_Nutrients, xor_Deploy_Robots, xor_Monitor_Growth, xor_Detect_Pests, xor_Analyze_Data, xor_Harvest_Crops, xor_Customize_Pack, xor_Recycle_Waste, xor_Audit_Energy, xor_Align_Demand])
root.order.add_edge(xor_Site_Survey, xor_Design_Modules)
root.order.add_edge(xor_Design_Modules, xor_Install_Sensors)
root.order.add_edge(xor_Install_Sensors, xor_Calibrate_Climate)
root.order.add_edge(xor_Calibrate_Climate, xor_Select_Sequences)
root.order.add_edge(xor_Select_Sequences, xor_Optimize_Nutrients)
root.order.add_edge(xor_Optimize_Nutrients, xor_Deploy_Robots)
root.order.add_edge(xor_Deploy_Robots, xor_Monitor_Growth)
root.order.add_edge(xor_Monitor_Growth, xor_Detect_Pests)
root.order.add_edge(xor_Detect_Pests, xor_Analyze_Data)
root.order.add_edge(xor_Analyze_Data, xor_Harvest_Crops)
root.order.add_edge(xor_Harvest_Crops, xor_Customize_Pack)
root.order.add_edge(xor_Customize_Pack, xor_Recycle_Waste)
root.order.add_edge(xor_Recycle_Waste, xor_Audit_Energy)
root.order.add_edge(xor_Audit_Energy, xor_Align_Demand)