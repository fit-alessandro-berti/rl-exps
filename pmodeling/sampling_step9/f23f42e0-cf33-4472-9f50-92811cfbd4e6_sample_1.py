import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

Milk_Sourcing = Transition(label='Milk Sourcing')
Culture_Selection = Transition(label='Culture Selection')
Milk_Testing = Transition(label='Milk Testing')
Curd_Cutting = Transition(label='Curd Cutting')
Whey_Draining = Transition(label='Whey Draining')
Mold_Inoculation = Transition(label='Mold Inoculation')
Forming_Cheese = Transition(label='Forming Cheese')
Salting_Stage = Transition(label='Salting Stage')
Aging_Setup = Transition(label='Aging Setup')
Climate_Control = Transition(label='Climate Control')
Quality_Tasting = Transition(label='Quality Tasting')
Packaging_Prep = Transition(label='Packaging Prep')
Label_Printing = Transition(label='Label Printing')
Distribution_Plan = Transition(label='Distribution Plan')
Retail_Delivery = Transition(label='Retail Delivery')
Event_Coordination = Transition(label='Event Coordination')
Regulatory_Audit = Transition(label='Regulatory Audit')

skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[Culture_Selection, Milk_Sourcing, Milk_Testing, Curd_Cutting, Whey_Draining, Mold_Inoculation, Forming_Cheese, Salting_Stage])
xor = OperatorPOWL(operator=Operator.XOR, children=[Climate_Control, skip])
xor1 = OperatorPOWL(operator=Operator.XOR, children=[Quality_Tasting, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[Packaging_Prep, Label_Printing])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[Distribution_Plan, Retail_Delivery])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[Event_Coordination, Regulatory_Audit])
root = StrictPartialOrder(nodes=[loop, xor, xor1, xor2, xor3, xor4])
root.order.add_edge(loop, xor)
root.order.add_edge(xor, xor1)
root.order.add_edge(xor, xor2)
root.order.add_edge(xor, xor3)
root.order.add_edge(xor, xor4)