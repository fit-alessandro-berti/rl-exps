import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

SiteAnalysis = Transition(label='Site Analysis')
StructureCheck = Transition(label='Structure Check')
ModifyLayout = Transition(label='Modify Layout')
InstallHVAC = Transition(label='Install HVAC')
SetupHydroponics = Transition(label='Setup Hydroponics')
PrepareNutrients = Transition(label='Prepare Nutrients')
SelectSeeds = Transition(label='Select Seeds')
AutomatePlanting = Transition(label='Automate Planting')
DeploySensors = Transition(label='Deploy Sensors')
PestControl = Transition(label='Pest Control')
OptimizeEnergy = Transition(label='Optimize Energy')
RecycleWater = Transition(label='Recycle Water')
AutomateHarvest = Transition(label='Automate Harvest')
PackageCrops = Transition(label='Package Crops')
CoordinateDelivery = Transition(label='Coordinate Delivery')
AnalyzeData = Transition(label='Analyze Data')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[SiteAnalysis, StructureCheck])
xor = OperatorPOWL(operator=Operator.XOR, children=[ModifyLayout, skip])
root = StrictPartialOrder(nodes=[loop, xor, InstallHVAC, SetupHydroponics, PrepareNutrients, SelectSeeds, AutomatePlanting, DeploySensors, PestControl, OptimizeEnergy, RecycleWater, AutomateHarvest, PackageCrops, CoordinateDelivery, AnalyzeData])
root.order.add_edge(loop, xor)
root.order.add_edge(xor, InstallHVAC)
root.order.add_edge(InstallHVAC, SetupHydroponics)
root.order.add_edge(SetupHydroponics, PrepareNutrients)
root.order.add_edge(PrepareNutrients, SelectSeeds)
root.order.add_edge(SelectSeeds, AutomatePlanting)
root.order.add_edge(AutomatePlanting, DeploySensors)
root.order.add_edge(DeploySensors, PestControl)
root.order.add_edge(PestControl, OptimizeEnergy)
root.order.add_edge(OptimizeEnergy, RecycleWater)
root.order.add_edge(RecycleWater, AutomateHarvest)
root.order.add_edge(AutomateHarvest, PackageCrops)
root.order.add_edge(PackageCrops, CoordinateDelivery)
root.order.add_edge(CoordinateDelivery, AnalyzeData)