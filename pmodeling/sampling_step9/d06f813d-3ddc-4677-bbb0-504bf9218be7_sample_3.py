import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
# Define the transitions
provenance_check = Transition(label='Provenance Check')
specimen_sampling = Transition(label='Specimen Sampling')
spectroscopy_test = Transition(label='Spectroscopy Test')
radiocarbon_date = Transition(label='Radiocarbon Date')
material_analysis = Transition(label='Material Analysis')
forensic_review = Transition(label='Forensic Review')
expert_consult = Transition(label='Expert Consult')
legal_verify = Transition(label='Legal Verify')
ownership_audit = Transition(label='Ownership Audit')
risk_assess = Transition(label='Risk Assess')
insurance_quote = Transition(label='Insurance Quote')
condition_report = Transition(label='Condition Report')
documentation = Transition(label='Documentation')
committee_review = Transition(label='Committee Review')
final_approval = Transition(label='Final Approval')
# Define the silent transitions
skip = SilentTransition()
# Define the loops and choices
provenance_loop = OperatorPOWL(operator=Operator.LOOP, children=[provenance_check])
sampling_loop = OperatorPOWL(operator=Operator.LOOP, children=[specimen_sampling])
test_choice = OperatorPOWL(operator=Operator.XOR, children=[spectroscopy_test, radiocarbon_date])
analysis_loop = OperatorPOWL(operator=Operator.LOOP, children=[material_analysis])
forensic_loop = OperatorPOWL(operator=Operator.LOOP, children=[forensic_review])
consult_loop = OperatorPOWL(operator=Operator.LOOP, children=[expert_consult])
verify_loop = OperatorPOWL(operator=Operator.LOOP, children=[legal_verify])
audit_loop = OperatorPOWL(operator=Operator.LOOP, children=[ownership_audit])
risk_loop = OperatorPOWL(operator=Operator.LOOP, children=[risk_assess])
quote_loop = OperatorPOWL(operator=Operator.LOOP, children=[insurance_quote])
report_loop = OperatorPOWL(operator=Operator.LOOP, children=[condition_report])
# Define the partial order
root = StrictPartialOrder(nodes=[provenance_loop, sampling_loop, test_choice, analysis_loop, forensic_loop, consult_loop, verify_loop, audit_loop, risk_loop, quote_loop, report_loop, documentation, committee_review, final_approval])
root.order.add_edge(provenance_loop, sampling_loop)
root.order.add_edge(sampling_loop, test_choice)
root.order.add_edge(test_choice, analysis_loop)
root.order.add_edge(analysis_loop, forensic_loop)
root.order.add_edge(forensic_loop, consult_loop)
root.order.add_edge(consult_loop, verify_loop)
root.order.add_edge(verify_loop, audit_loop)
root.order.add_edge(audit_loop, risk_loop)
root.order.add_edge(risk_loop, quote_loop)
root.order.add_edge(quote_loop, report_loop)
root.order.add_edge(report_loop, documentation)
root.order.add_edge(documentation, committee_review)
root.order.add_edge(committee_review, final_approval)