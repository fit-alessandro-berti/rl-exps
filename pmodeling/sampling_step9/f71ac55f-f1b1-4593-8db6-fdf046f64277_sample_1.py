import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define activities
site_survey = Transition(label='Site Survey')
permit_review = Transition(label='Permit Review')
design_layout = Transition(label='Design Layout')
system_assembly = Transition(label='System Assembly')
climate_setup = Transition(label='Climate Setup')
nutrient_prep = Transition(label='Nutrient Prep')
irrigation_test = Transition(label='Irrigation Test')
lighting_config = Transition(label='Lighting Config')
energy_install = Transition(label='Energy Install')
sensor_setup = Transition(label='Sensor Setup')
automation_deploy = Transition(label='Automation Deploy')
crop_seeding = Transition(label='Crop Seeding')
waste_plan = Transition(label='Waste Plan')
staff_training = Transition(label='Staff Training')
community_outreach = Transition(label='Community Outreach')
yield_monitor = Transition(label='Yield Monitor')
maintenance_check = Transition(label='Maintenance Check')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[site_survey, permit_review])
xor = OperatorPOWL(operator=Operator.XOR, children=[design_layout, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[system_assembly, xor])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[climate_setup, xor2])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[nutrient_prep, xor3])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[irrigation_test, xor4])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[lighting_config, xor5])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[energy_install, xor6])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[sensor_setup, xor7])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[automation_deploy, xor8])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[crop_seeding, xor9])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[waste_plan, xor10])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[staff_training, xor11])
xor13 = OperatorPOWL(operator=Operator.XOR, children=[community_outreach, xor12])
xor14 = OperatorPOWL(operator=Operator.XOR, children=[yield_monitor, xor13])
xor15 = OperatorPOWL(operator=Operator.XOR, children=[maintenance_check, xor14])
root = StrictPartialOrder(nodes=[loop, xor15])
root.order.add_edge(loop, xor15)