import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

FarmSelect = Transition(label='Farm Select')
MilkTest = Transition(label='Milk Test')
MilkPasteurize = Transition(label='Milk Pasteurize')
CurdForm = Transition(label='Curd Form')
WheyDrain = Transition(label='Whey Drain')
CheesePress = Transition(label='Cheese Press')
SaltRub = Transition(label='Salt Rub')
AgingSet = Transition(label='Aging Set')
FlavorCheck = Transition(label='Flavor Check')
TextureScan = Transition(label='Texture Scan')
QualityApprove = Transition(label='Quality Approve')
CustomPack = Transition(label='Custom Pack')
ColdShip = Transition(label='Cold Ship')
RetailTrain = Transition(label='Retail Train')
FeedbackLog = Transition(label='Feedback Log')
BatchAdjust = Transition(label='Batch Adjust')

skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[FarmSelect, MilkTest, MilkPasteurize, CurdForm, WheyDrain, CheesePress, SaltRub, AgingSet, FlavorCheck, TextureScan, QualityApprove])
xor = OperatorPOWL(operator=Operator.XOR, children=[CustomPack, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[RetailTrain, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[FeedbackLog, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[BatchAdjust, skip])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[ColdShip, xor2])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[xor, xor3])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[xor4, xor5])
root = StrictPartialOrder(nodes=[loop, xor6, loop2])
root.order.add_edge(loop, xor6)
root.order.add_edge(loop2, xor6)
root.order.add_edge(xor, xor6)
root.order.add_edge(xor2, xor6)
root.order.add_edge(xor3, xor6)
root.order.add_edge(xor4, xor6)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor6, xor5)
root.order.add_edge(xor6, xor4)
root.order.add_edge(xor6, xor3)
root.order.add_edge(xor6, xor2)
root.order.add_edge(xor6, xor)
root.order.add_edge(loop2, xor4)
root.order.add_edge(loop2, xor3)
root.order.add_edge(loop2, xor2)
root.order.add_edge(loop2, xor)
root.order.add_edge(xor6, loop2)
root.order.add_edge(xor6, loop)
root.order.add_edge(xor5, loop2)
root.order.add_edge(xor5, loop)
root.order.add_edge(xor4, loop2)
root.order.add_edge(xor4, loop)
root.order.add_edge(xor3, loop2)
root.order.add_edge(xor3, loop)
root.order.add_edge(xor2, loop2)
root.order.add_edge(xor2, loop)
root.order.add_edge(xor, loop2)
root.order.add_edge(xor, loop)
root.order.add_edge(loop2, xor5)
root.order.add_edge(loop2, xor4)
root.order.add_edge(loop2, xor3)
root.order.add_edge(loop2, xor2)
root.order.add_edge(loop2, xor)
root.order.add_edge(loop, xor6)
root.order.add_edge(loop, xor5)
root.order.add_edge(loop, xor4)
root.order.add_edge(loop, xor3)
root.order.add_edge(loop, xor2)
root.order.add_edge(loop, xor)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor5, loop2)
root.order.add_edge(xor5, loop)
root.order.add_edge(xor4, xor6)
root.order.add_edge(xor4, loop2)
root.order.add_edge(xor4, loop)
root.order.add_edge(xor3, xor6)
root.order.add_edge(xor3, loop2)
root.order.add_edge(xor3, loop)
root.order.add_edge(xor2, xor6)
root.order.add_edge(xor2, loop2)
root.order.add_edge(xor2, loop)
root.order.add_edge(xor, xor6)
root.order.add_edge(xor, loop2)
root.order.add_edge(xor, loop)
root.order.add_edge(xor6, xor5)
root.order.add_edge(xor6, xor4)
root.order.add_edge(xor6, xor3)
root.order.add_edge(xor6, xor2)
root.order.add_edge(xor6, xor)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor5, loop2)
root.order.add_edge(xor5, loop)
root.order.add_edge(xor4, xor6)
root.order.add_edge(xor4, loop2)
root.order.add_edge(xor4, loop)
root.order.add_edge(xor3, xor6)
root.order.add_edge(xor3, loop2)
root.order.add_edge(xor3, loop)
root.order.add_edge(xor2, xor6)
root.order.add_edge(xor2, loop2)
root.order.add_edge(xor2, loop)
root.order.add_edge(xor, xor6)
root.order.add_edge(xor, loop2)
root.order.add_edge(xor, loop)
root.order.add_edge(loop2, xor5)
root.order.add_edge(loop2, xor4)
root.order.add_edge(loop2, xor3)
root.order.add_edge(loop2, xor2)
root.order.add_edge(loop2, xor)
root.order.add_edge(loop, xor6)
root.order.add_edge(loop, xor5)
root.order.add_edge(loop, xor4)
root.order.add_edge(loop, xor3)
root.order.add_edge(loop, xor2)
root.order.add_edge(loop, xor)
root.order.add_edge(xor6, loop2)
root.order.add_edge(xor6, loop)
root.order.add_edge(xor5, loop2)
root.order.add_edge(xor5, loop)
root.order.add_edge(xor4, loop2)
root.order.add_edge(xor4, loop)
root.order.add_edge(xor3, loop2)
root.order.add_edge(xor3, loop)
root.order.add_edge(xor2, loop2)
root.order.add_edge(xor2, loop)
root.order.add_edge(xor, loop2)
root.order.add_edge(xor, loop)
root.order.add_edge(loop2, xor5)
root.order.add_edge(loop2, xor4)
root.order.add_edge(loop2, xor3)
root.order.add_edge(loop2, xor2)
root.order.add_edge(loop2, xor)
root.order.add_edge(loop, xor6)
root.order.add_edge(loop, xor5)
root.order.add_edge(loop, xor4)
root.order.add_edge(loop, xor3)
root.order.add_edge(loop, xor2)
root.order.add_edge(loop, xor)
root.order.add_edge(xor6, xor5)
root.order.add_edge(xor6, xor4)
root.order.add_edge(xor6, xor3)
root.order.add_edge(xor6, xor2)
root.order.add_edge(xor6, xor)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor5, loop2)
root.order.add_edge(xor5, loop)
root.order.add_edge(xor4, xor6)
root.order.add_edge(xor4, loop2)
root.order.add_edge(xor4, loop)
root.order.add_edge(xor3, xor6)
root.order.add_edge(xor3, loop2)
root.order.add_edge(xor3, loop)
root.order.add_edge(xor2, xor6)
root.order.add_edge(xor2, loop2)
root.order.add_edge(xor2, loop)
root.order.add_edge(xor, xor6)
root.order.add_edge(xor, loop2)
root.order.add_edge(xor, loop)
root.order.add_edge(xor6, xor5)
root.order.add_edge(xor6, xor4)
root.order.add_edge(xor6, xor3)
root.order.add_edge(xor6, xor2)
root.order.add_edge(xor6, xor)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor5, loop2)
root.order.add_edge(xor5, loop)
root.order.add_edge(xor4, xor6)
root.order.add_edge(xor4, loop2)
root.order.add_edge(xor4, loop)
root.order.add_edge(xor3, xor6)
root.order.add_edge(xor3, loop2)
root.order.add_edge(xor3, loop)
root.order.add_edge(xor2, xor6)
root.order.add_edge(xor2, loop2)
root.order.add_edge(xor2, loop)
root.order.add_edge(xor, xor6)
root.order.add_edge(xor, loop2)
root.order.add_edge(xor, loop)
root.order.add_edge(loop2, xor5)
root.order.add_edge(loop2, xor4)
root.order.add_edge(loop2, xor3)
root.order.add_edge(loop2, xor2)
root.order.add_edge(loop2, xor)
root.order.add_edge(loop, xor6)
root.order.add_edge(loop, xor5)
root.order.add_edge(loop, xor4)
root.order.add_edge(loop, xor3)
root.order.add_edge(loop, xor2)
root.order.add_edge(loop, xor)
root.order.add_edge(xor6, loop2)
root.order.add_edge(xor6, loop)
root.order.add_edge(xor5, loop2)
root.order.add_edge(xor5, loop)
root.order.add_edge(xor4, loop2)
root.order.add_edge(xor4, loop)
root.order.add_edge(xor3, loop2)
root.order.add_edge(xor3, loop)
root.order.add_edge(xor2, loop2)
root.order.add_edge(xor2, loop)
root.order.add_edge(xor, loop2)
root.order.add_edge(xor, loop)
root.order.add_edge(loop2, xor5)
root.order.add_edge(loop2, xor4)
root.order.add_edge(loop2, xor3)
root.order.add_edge(loop2, xor2)
root.order.add_edge(loop2, xor)
root.order.add_edge(loop, xor6)
root.order.add_edge(loop, xor5)
root.order.add_edge(loop, xor4)
root.order.add_edge(loop, xor3)
root.order.add_edge(loop, xor2)
root.order.add_edge(loop, xor)
root.order.add_edge(xor6, xor5)
root.order.add_edge(xor6, xor4)
root.order.add_edge(xor6, xor3)
root.order.add_edge(xor6, xor2)
root.order.add_edge(xor6, xor)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor5, loop2)
root.order.add_edge(xor5, loop)
root.order.add_edge(xor4, xor6)
root.order.add_edge(xor4, loop2)
root.order.add_edge(xor4, loop)
root.order.add_edge(xor3, xor6)
root.order.add_edge(xor3, loop2)
root.order.add_edge(xor3, loop)
root.order.add_edge(xor2, xor6)
root.order.add_edge(xor2, loop2)
root.order.add_edge(xor2, loop)
root.order.add_edge(xor, xor6)
root.order.add_edge(xor, loop2)
root.order.add_edge(xor, loop)
root.order.add_edge(xor6, xor5)
root.order.add_edge(xor6, xor4)
root.order.add_edge(xor6, xor3)
root.order.add_edge(xor6, xor2)
root.order.add_edge(xor6, xor)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor5, loop2)
root.order.add_edge(xor5, loop)
root.order.add_edge(xor4, xor6)
root.order.add_edge(xor4, loop2)
root.order.add_edge(xor4, loop)
root.order.add_edge(xor3, xor6)
root.order.add_edge(xor3, loop2)
root.order.add_edge(xor3, loop)
root.order.add_edge(xor2, xor6)
root.order.add_edge(xor2, loop2)
root.order.add_edge(xor2, loop)
root.order.add_edge(xor, xor6)
root.order.add_edge(xor, loop2)
root.order.add_edge(xor, loop)
root.order.add_edge(loop2, xor5)
root.order.add_edge(loop2, xor4)
root.order.add_edge(loop2, xor3)
root.order.add_edge(loop2, xor2)
root.order.add_edge(loop2, xor)
root.order.add_edge(loop, xor6)
root.order.add_edge(loop, xor5)
root.order.add_edge(loop, xor4)
root.order.add_edge(loop, xor3)
root.order.add_edge(loop, xor2)
root.order.add_edge(loop, xor)
root.order.add_edge(xor6, loop2)
root.order.add_edge(xor6, loop)
root.order.add_edge(xor5, loop2)
root.order.add_edge(xor5, loop)
root.order.add_edge(xor4, loop2)
root.order.add_edge(xor4, loop)
root.order.add_edge(xor3, loop2)
root.order.add_edge(xor3, loop)
root.order.add_edge(xor2, loop2)
root.order.add_edge(xor2, loop)
root.order.add_edge(xor, loop2)
root.order.add_edge(xor, loop)
root.order.add_edge(loop2, xor5)
root.order.add_edge(loop2, xor4)
root.order.add_edge(loop2, xor3)
root.order.add_edge(loop2, xor2)
root.order.add_edge(loop2, xor)
root.order.add_edge(loop, xor6)
root.order.add_edge(loop, xor5)
root.order.add_edge(loop, xor4)
root.order.add_edge(loop, xor3)
root.order.add_edge(loop, xor2)
root.order.add_edge(loop, xor)
root.order.add_edge(xor6, xor5)
root.order.add_edge(xor6, xor4)
root.order.add_edge(xor6, xor3)
root.order.add_edge(xor6, xor2)
root.order.add_edge(xor6, xor)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor5, loop2)
root.order.add_edge(xor5, loop)
root.order.add_edge(xor4, xor6)
root.order.add_edge(xor4, loop2)
root.order.add_edge(xor4, loop)
root.order.add_edge(xor3, xor6)
root.order.add_edge(xor3, loop2)
root.order.add_edge(xor3, loop)
root.order.add_edge(xor2, xor6)
root.order.add_edge(xor2, loop2)
root.order.add_edge(xor2, loop)
root.order.add_edge(xor, xor6)
root.order.add_edge(xor, loop2)
root.order.add_edge(xor, loop)
root.order.add_edge(xor6, xor5)
root.order.add_edge(xor6, xor4)
root.order.add_edge(xor6, xor3)
root.order.add_edge(xor6, xor2)
root.order.add_edge(xor6, xor)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor5, loop2)
root.order.add_edge(xor5, loop)
root.order.add_edge(xor4, xor6)
root.order.add_edge(xor4, loop2)
root.order.add_edge(xor4, loop)
root.order.add_edge(xor3, xor6)
root.order.add_edge(xor3, loop2)
root.order.add_edge(xor3, loop)
root.order.add_edge(xor2, xor6)
root.order.add_edge(xor2, loop2)
root.order.add_edge(xor2, loop)
root.order.add_edge(xor, xor6)
root.order.add_edge(xor, loop2)
root.order.add_edge(xor, loop)
root.order.add_edge(loop2, xor5)
root.order.add_edge(loop2, xor4)
root.order.add_edge(loop2, xor3)
root.order.add_edge(loop2, xor2)
root.order.add_edge(loop2, xor)
root.order.add_edge(loop, xor6)
root.order.add_edge(loop, xor5)
root.order.add_edge(loop, xor4)
root.order.add_edge(loop, xor3)
root.order.add_edge(loop, xor2)
root.order.add_edge(loop, xor)
root.order.add_edge(xor6, loop2)
root.order.add_edge(xor6, loop)
root.order.add_edge(xor5, loop2)
root.order.add_edge(xor5, loop)
root.order.add_edge(xor4, loop2)
root.order.add_edge(xor4, loop)
root.order.add_edge(xor3, loop2)
root.order.add_edge(xor3, loop)
root.order.add_edge(xor2, loop2)
root.order.add_edge(xor2, loop)
root.order.add_edge(xor, loop2)
root.order.add_edge(xor, loop)
root.order.add_edge(loop2, xor5)
root.order.add_edge(loop2, xor4)
root.order.add_edge(loop2, xor3)
root.order.add_edge(loop2, xor2)
root.order.add_edge(loop2, xor)
root.order.add_edge(loop, xor6)
root.order.add_edge(loop, xor5)
root.order.add_edge(loop, xor4)
root.order.add_edge(loop, xor3)
root.order.add_edge(loop, xor2)
root.order.add_edge(loop, xor)
root.order.add_edge(xor6, xor5)
root.order.add_edge(xor6, xor4)
root.order.add_edge(xor6, xor3)
root.order.add_edge(xor6, xor2)
root.order.add_edge(xor6, xor)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor5, loop2)
root.order.add_edge(xor5, loop)
root.order.add_edge(xor4, xor6)
root.order.add_edge(xor4, loop2)
root.order.add_edge(xor4, loop)
root.order.add_edge(xor3, xor6)
root.order.add_edge(xor3, loop2)
root.order.add_edge(xor3, loop)
root.order.add_edge(xor2, xor6)
root.order.add_edge(xor2, loop2)
root.order.add_edge(xor2, loop)
root.order.add_edge(xor, xor6)
root.order.add_edge(xor, loop2)
root.order.add_edge(xor, loop)
root.order.add_edge(xor6, xor5)
root.order.add_edge(xor6, xor4)
root.order.add_edge(xor6, xor3)
root.order.add_edge(xor6, xor2)
root.order.add_edge(xor6, xor)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor5, loop2)
root.order.add_edge(xor5, loop)
root.order.add_edge(xor4, xor6)
root.order.add_edge(xor4, loop2)
root.order.add_edge(xor4, loop)
root.order.add_edge(xor3, xor6)
root.order.add_edge