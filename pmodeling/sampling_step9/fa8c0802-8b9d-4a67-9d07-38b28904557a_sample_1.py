import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
DataAggregation = Transition(label='Data Aggregation')
AnomalyDetect = Transition(label='Anomaly Detect')
RiskAssess = Transition(label='Risk Assess')
DemandModel = Transition(label='Demand Model')
StakeholderSync = Transition(label='Stakeholder Sync')
AutoNegotiate = Transition(label='Auto Negotiate')
InventoryOptimize = Transition(label='Inventory Optimize')
ContingencyPlan = Transition(label='Contingency Plan')
ResourceAllocate = Transition(label='Resource Allocate')
SustainabilityCheck = Transition(label='Sustainability Check')
ComplianceVerify = Transition(label='Compliance Verify')
ImpactScore = Transition(label='Impact Score')
DistributionPlan = Transition(label='Distribution Plan')
FeedbackLoop = Transition(label='Feedback Loop')
PerformanceAudit = Transition(label='Performance Audit')
ScheduleExecute = Transition(label='Schedule Execute')
skip = SilentTransition()
loop1 = OperatorPOWL(operator=Operator.LOOP, children=[DataAggregation, AnomalyDetect, RiskAssess, DemandModel])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[StakeholderSync, AutoNegotiate, InventoryOptimize, ContingencyPlan, ResourceAllocate])
loop3 = OperatorPOWL(operator=Operator.LOOP, children=[SustainabilityCheck, ComplianceVerify, ImpactScore])
loop4 = OperatorPOWL(operator=Operator.LOOP, children=[DistributionPlan, FeedbackLoop, PerformanceAudit, ScheduleExecute])
root = StrictPartialOrder(nodes=[loop1, loop2, loop3, loop4])
root.order.add_edge(loop1, loop2)
root.order.add_edge(loop2, loop3)
root.order.add_edge(loop3, loop4)
root.order.add_edge(loop4, loop1)