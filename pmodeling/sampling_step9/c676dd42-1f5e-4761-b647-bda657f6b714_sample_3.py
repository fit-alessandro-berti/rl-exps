import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
design_layout = Transition(label='Design Layout')
material_sourcing = Transition(label='Material Sourcing')
system_assembly = Transition(label='System Assembly')
sensor_install = Transition(label='Sensor Install')
nutrient_prep = Transition(label='Nutrient Prep')
water_testing = Transition(label='Water Testing')
climate_setup = Transition(label='Climate Setup')
data_integration = Transition(label='Data Integration')
growth_monitoring = Transition(label='Growth Monitoring')
pest_control = Transition(label='Pest Control')
waste_sorting = Transition(label='Waste Sorting')
harvest_plan = Transition(label='Harvest Plan')
produce_pack = Transition(label='Produce Pack')
energy_audit = Transition(label='Energy Audit')
community_setup = Transition(label='Community Setup')
skip = SilentTransition()

site_survey_to_design = OperatorPOWL(operator=Operator.XOR, children=[site_survey, design_layout])
design_layout_to_material = OperatorPOWL(operator=Operator.XOR, children=[design_layout, material_sourcing])
material_to_system = OperatorPOWL(operator=Operator.XOR, children=[material_sourcing, system_assembly])
system_to_sensor = OperatorPOWL(operator=Operator.XOR, children=[system_assembly, sensor_install])
sensor_to_nutrient = OperatorPOWL(operator=Operator.XOR, children=[sensor_install, nutrient_prep])
nutrient_to_water = OperatorPOWL(operator=Operator.XOR, children=[nutrient_prep, water_testing])
water_to_climate = OperatorPOWL(operator=Operator.XOR, children=[water_testing, climate_setup])
climate_to_data = OperatorPOWL(operator=Operator.XOR, children=[climate_setup, data_integration])
data_to_growth = OperatorPOWL(operator=Operator.XOR, children=[data_integration, growth_monitoring])
growth_to_pest = OperatorPOWL(operator=Operator.XOR, children=[growth_monitoring, pest_control])
pest_to_waste = OperatorPOWL(operator=Operator.XOR, children=[pest_control, waste_sorting])
waste_to_harvest = OperatorPOWL(operator=Operator.XOR, children=[waste_sorting, harvest_plan])
harvest_to_pack = OperatorPOWL(operator=Operator.XOR, children=[harvest_plan, produce_pack])
pack_to_energy = OperatorPOWL(operator=Operator.XOR, children=[produce_pack, energy_audit])
energy_to_community = OperatorPOWL(operator=Operator.XOR, children=[energy_audit, community_setup])

root = StrictPartialOrder(nodes=[site_survey_to_design, design_layout_to_material, material_to_system, system_to_sensor, sensor_to_nutrient, nutrient_to_water, water_to_climate, climate_to_data, data_to_growth, growth_to_pest, pest_to_waste, waste_to_harvest, harvest_to_pack, pack_to_energy, energy_to_community])
root.order.add_edge(site_survey_to_design, design_layout_to_material)
root.order.add_edge(design_layout_to_material, material_to_system)
root.order.add_edge(material_to_system, system_to_sensor)
root.order.add_edge(system_to_sensor, sensor_to_nutrient)
root.order.add_edge(sensor_to_nutrient, nutrient_to_water)
root.order.add_edge(nutrient_to_water, water_to_climate)
root.order.add_edge(water_to_climate, climate_to_data)
root.order.add_edge(climate_to_data, data_to_growth)
root.order.add_edge(data_to_growth, growth_to_pest)
root.order.add_edge(growth_to_pest, pest_to_waste)
root.order.add_edge(pest_to_waste, waste_to_harvest)
root.order.add_edge(waste_to_harvest, harvest_to_pack)
root.order.add_edge(harvest_to_pack, pack_to_energy)
root.order.add_edge(pack_to_energy, energy_to_community)