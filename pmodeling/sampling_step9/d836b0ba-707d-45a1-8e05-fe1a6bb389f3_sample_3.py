import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

SiteSelect = Transition(label='Site Select')
DesignLayout = Transition(label='Design Layout')
SensorIntegrate = Transition(label='Sensor Integrate')
CropChoose = Transition(label='Crop Choose')
SoilPrepare = Transition(label='Soil Prepare')
IrrigationSetup = Transition(label='Irrigation Setup')
PestControl = Transition(label='Pest Control')
LightingInstall = Transition(label='Lighting Install')
StaffTrain = Transition(label='Staff Train')
ComplianceCheck = Transition(label='Compliance Check')
MarketAnalyze = Transition(label='Market Analyze')
PackageDesign = Transition(label='Package Design')
LogisticsPlan = Transition(label='Logistics Plan')
DataAnalyze = Transition(label='Data Analyze')
FeedbackLoop = Transition(label='Feedback Loop')

skip = SilentTransition()

SiteSelectLoop = OperatorPOWL(operator=Operator.LOOP, children=[SiteSelect, DesignLayout])
LayoutSensorLoop = OperatorPOWL(operator=Operator.LOOP, children=[DesignLayout, SensorIntegrate])
SensorCropLoop = OperatorPOWL(operator=Operator.LOOP, children=[SensorIntegrate, CropChoose])
CropSoilLoop = OperatorPOWL(operator=Operator.LOOP, children=[CropChoose, SoilPrepare])
SoilIrrigationLoop = OperatorPOWL(operator=Operator.LOOP, children=[SoilPrepare, IrrigationSetup])
IrrigationPestLoop = OperatorPOWL(operator=Operator.LOOP, children=[IrrigationSetup, PestControl])
PestLightingLoop = OperatorPOWL(operator=Operator.LOOP, children=[PestControl, LightingInstall])
LightingStaffLoop = OperatorPOWL(operator=Operator.LOOP, children=[LightingInstall, StaffTrain])
StaffComplianceLoop = OperatorPOWL(operator=Operator.LOOP, children=[StaffTrain, ComplianceCheck])
ComplianceMarketLoop = OperatorPOWL(operator=Operator.LOOP, children=[ComplianceCheck, MarketAnalyze])
MarketPackageLoop = OperatorPOWL(operator=Operator.LOOP, children=[MarketAnalyze, PackageDesign])
PackageLogisticsLoop = OperatorPOWL(operator=Operator.LOOP, children=[PackageDesign, LogisticsPlan])
LogisticsDataLoop = OperatorPOWL(operator=Operator.LOOP, children=[LogisticsPlan, DataAnalyze])
DataFeedbackLoop = OperatorPOWL(operator=Operator.LOOP, children=[DataAnalyze, FeedbackLoop])

root = StrictPartialOrder(nodes=[SiteSelectLoop, LayoutSensorLoop, SensorCropLoop, CropSoilLoop, SoilIrrigationLoop, IrrigationPestLoop, PestLightingLoop, LightingStaffLoop, StaffComplianceLoop, ComplianceMarketLoop, MarketPackageLoop, PackageLogisticsLoop, LogisticsDataLoop, DataFeedbackLoop])
root.order.add_edge(SiteSelectLoop, LayoutSensorLoop)
root.order.add_edge(LayoutSensorLoop, SensorCropLoop)
root.order.add_edge(SensorCropLoop, CropSoilLoop)
root.order.add_edge(CropSoilLoop, SoilIrrigationLoop)
root.order.add_edge(SoilIrrigationLoop, IrrigationPestLoop)
root.order.add_edge(IrrigationPestLoop, PestLightingLoop)
root.order.add_edge(PestLightingLoop, LightingStaffLoop)
root.order.add_edge(LightingStaffLoop, StaffComplianceLoop)
root.order.add_edge(StaffComplianceLoop, ComplianceMarketLoop)
root.order.add_edge(ComplianceMarketLoop, MarketPackageLoop)
root.order.add_edge(MarketPackageLoop, PackageLogisticsLoop)
root.order.add_edge(PackageLogisticsLoop, LogisticsDataLoop)
root.order.add_edge(LogisticsDataLoop, DataFeedbackLoop)