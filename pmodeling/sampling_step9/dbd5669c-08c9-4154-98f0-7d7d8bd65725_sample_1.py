import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
design_layout = Transition(label='Design Layout')
material_sourcing = Transition(label='Material Sourcing')
unit_assembly = Transition(label='Unit Assembly')
system_wiring = Transition(label='System Wiring')
sensor_install = Transition(label='Sensor Install')
water_testing = Transition(label='Water Testing')
nutrient_mix = Transition(label='Nutrient Mix')
seed_selection = Transition(label='Seed Selection')
planting_setup = Transition(label='Planting Setup')
climate_control = Transition(label='Climate Control')
pest_management = Transition(label='Pest Management')
data_calibration = Transition(label='Data Calibration')
yield_analysis = Transition(label='Yield Analysis')
community_meet = Transition(label='Community Meet')
compliance_check = Transition(label='Compliance Check')
expansion_plan = Transition(label='Expansion Plan')

skip = SilentTransition()

site_survey_to_design = OperatorPOWL(operator=Operator.XOR, children=[site_survey, skip])
design_to_layout = OperatorPOWL(operator=Operator.XOR, children=[design_layout, skip])
layout_to_material = OperatorPOWL(operator=Operator.XOR, children=[material_sourcing, skip])
material_to_assembly = OperatorPOWL(operator=Operator.XOR, children=[unit_assembly, skip])
assembly_to_wiring = OperatorPOWL(operator=Operator.XOR, children=[system_wiring, skip])
wiring_to_sensor = OperatorPOWL(operator=Operator.XOR, children=[sensor_install, skip])
sensor_to_testing = OperatorPOWL(operator=Operator.XOR, children=[water_testing, skip])
testing_to_mix = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, skip])
mix_to_selection = OperatorPOWL(operator=Operator.XOR, children=[seed_selection, skip])
selection_to_setup = OperatorPOWL(operator=Operator.XOR, children=[planting_setup, skip])
setup_to_control = OperatorPOWL(operator=Operator.XOR, children=[climate_control, skip])
control_to_management = OperatorPOWL(operator=Operator.XOR, children=[pest_management, skip])
management_to_calibration = OperatorPOWL(operator=Operator.XOR, children=[data_calibration, skip])
calibration_to_analysis = OperatorPOWL(operator=Operator.XOR, children=[yield_analysis, skip])
analysis_to_community = OperatorPOWL(operator=Operator.XOR, children=[community_meet, skip])
community_to_check = OperatorPOWL(operator=Operator.XOR, children=[compliance_check, skip])
check_to_plan = OperatorPOWL(operator=Operator.XOR, children=[expansion_plan, skip])

root = StrictPartialOrder(nodes=[site_survey_to_design, design_to_layout, layout_to_material, material_to_assembly, assembly_to_wiring, wiring_to_sensor, sensor_to_testing, testing_to_mix, mix_to_selection, selection_to_setup, setup_to_control, control_to_management, management_to_calibration, calibration_to_analysis, analysis_to_community, community_to_check, check_to_plan])
root.order.add_edge(site_survey_to_design, design_to_layout)
root.order.add_edge(design_to_layout, layout_to_material)
root.order.add_edge(layout_to_material, material_to_assembly)
root.order.add_edge(material_to_assembly, assembly_to_wiring)
root.order.add_edge(assembly_to_wiring, wiring_to_sensor)
root.order.add_edge(wiring_to_sensor, sensor_to_testing)
root.order.add_edge(sensor_to_testing, testing_to_mix)
root.order.add_edge(testing_to_mix, mix_to_selection)
root.order.add_edge(mix_to_selection, selection_to_setup)
root.order.add_edge(selection_to_setup, setup_to_control)
root.order.add_edge(setup_to_control, control_to_management)
root.order.add_edge(control_to_management, management_to_calibration)
root.order.add_edge(management_to_calibration, calibration_to_analysis)
root.order.add_edge(calibration_to_analysis, analysis_to_community)
root.order.add_edge(analysis_to_community, community_to_check)
root.order.add_edge(community_to_check, check_to_plan)