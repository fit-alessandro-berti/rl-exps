import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
Material_Sourcing = Transition(label='Material Sourcing')
Forager_Dispatch = Transition(label='Forager Dispatch')
Authenticity_Check = Transition(label='Authenticity Check')
Batch_Scheduling = Transition(label='Batch Scheduling')
Artisan_Allocation = Transition(label='Artisan Allocation')
Craft_Assembly = Transition(label='Craft Assembly')
Quality_Inspection = Transition(label='Quality Inspection')
Blockchain_Update = Transition(label='Blockchain Update')
Demand_Forecast = Transition(label='Demand Forecast')
Price_Adjustment = Transition(label='Price Adjustment')
Compliance_Review = Transition(label='Compliance Review')
Logistics_Planning = Transition(label='Logistics Planning')
Distributor_Sync = Transition(label='Distributor Sync')
Customer_Feedback = Transition(label='Customer Feedback')
Product_Refinement = Transition(label='Product Refinement')
Reputation_Audit = Transition(label='Reputation Audit')
Seasonal_Review = Transition(label='Seasonal Review')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[Material_Sourcing, Forager_Dispatch])
xor = OperatorPOWL(operator=Operator.XOR, children=[Authenticity_Check, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[Batch_Scheduling, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[Artisan_Allocation, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[Craft_Assembly, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[Quality_Inspection, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[Blockchain_Update, skip])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[Demand_Forecast, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[Price_Adjustment, skip])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[Compliance_Review, skip])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[Logistics_Planning, skip])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[Distributor_Sync, skip])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[Customer_Feedback, skip])
xor13 = OperatorPOWL(operator=Operator.XOR, children=[Product_Refinement, skip])
xor14 = OperatorPOWL(operator=Operator.XOR, children=[Reputation_Audit, skip])
xor15 = OperatorPOWL(operator=Operator.XOR, children=[Seasonal_Review, skip])
root = StrictPartialOrder(nodes=[loop, xor, xor2, xor3, xor4, xor5, xor6, xor7, xor8, xor9, xor10, xor11, xor12, xor13, xor14, xor15])
root.order.add_edge(loop, xor)
root.order.add_edge(loop, xor2)
root.order.add_edge(loop, xor3)
root.order.add_edge(loop, xor4)
root.order.add_edge(loop, xor5)
root.order.add_edge(loop, xor6)
root.order.add_edge(loop, xor7)
root.order.add_edge(loop, xor8)
root.order.add_edge(loop, xor9)
root.order.add_edge(loop, xor10)
root.order.add_edge(loop, xor11)
root.order.add_edge(loop, xor12)
root.order.add_edge(loop, xor13)
root.order.add_edge(loop, xor14)
root.order.add_edge(loop, xor15)