import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

SiteAssess = Transition(label='Site Assess')
StructureCheck = Transition(label='Structure Check')
SoilTest = Transition(label='Soil Test')
ClimateEval = Transition(label='Climate Eval')
PermitObtain = Transition(label='Permit Obtain')
DesignLayout = Transition(label='Design Layout')
SeedSourcing = Transition(label='Seed Sourcing')
IrrigationSet = Transition(label='Irrigation Set')
NutrientMix = Transition(label='Nutrient Mix')
PestControl = Transition(label='Pest Control')
SensorInstall = Transition(label='Sensor Install')
StaffTrain = Transition(label='Staff Train')
CropPlanting = Transition(label='Crop Planting')
YieldMonitor = Transition(label='Yield Monitor')
MarketSetup = Transition(label='Market Setup')
Maintenance = Transition(label='Maintenance')
WasteManage = Transition(label='Waste Manage')

skip = SilentTransition()

site_assess_loop = OperatorPOWL(operator=Operator.LOOP, children=[SiteAssess, StructureCheck, SoilTest, ClimateEval])
permit_obtain_loop = OperatorPOWL(operator=Operator.LOOP, children=[PermitObtain])
design_layout_loop = OperatorPOWL(operator=Operator.LOOP, children=[DesignLayout])
seed_sourcing_loop = OperatorPOWL(operator=Operator.LOOP, children=[SeedSourcing])
irrigation_set_loop = OperatorPOWL(operator=Operator.LOOP, children=[IrrigationSet])
nutrient_mix_loop = OperatorPOWL(operator=Operator.LOOP, children=[NutrientMix])
pest_control_loop = OperatorPOWL(operator=Operator.LOOP, children=[PestControl])
sensor_install_loop = OperatorPOWL(operator=Operator.LOOP, children=[SensorInstall])
staff_train_loop = OperatorPOWL(operator=Operator.LOOP, children=[StaffTrain])
crop_planting_loop = OperatorPOWL(operator=Operator.LOOP, children=[CropPlanting])
yield_monitor_loop = OperatorPOWL(operator=Operator.LOOP, children=[YieldMonitor])
market_setup_loop = OperatorPOWL(operator=Operator.LOOP, children=[MarketSetup])
maintenance_loop = OperatorPOWL(operator=Operator.LOOP, children=[Maintenance])
waste_manage_loop = OperatorPOWL(operator=Operator.LOOP, children=[WasteManage])

xor1 = OperatorPOWL(operator=Operator.XOR, children=[yield_monitor_loop, maintenance_loop])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[market_setup_loop, waste_manage_loop])

root = StrictPartialOrder(nodes=[site_assess_loop, permit_obtain_loop, design_layout_loop, seed_sourcing_loop, irrigation_set_loop, nutrient_mix_loop, pest_control_loop, sensor_install_loop, staff_train_loop, crop_planting_loop, xor1, xor2])
root.order.add_edge(site_assess_loop, permit_obtain_loop)
root.order.add_edge(permit_obtain_loop, design_layout_loop)
root.order.add_edge(design_layout_loop, seed_sourcing_loop)
root.order.add_edge(seed_sourcing_loop, irrigation_set_loop)
root.order.add_edge(irrigation_set_loop, nutrient_mix_loop)
root.order.add_edge(nutrient_mix_loop, pest_control_loop)
root.order.add_edge(pest_control_loop, sensor_install_loop)
root.order.add_edge(sensor_install_loop, staff_train_loop)
root.order.add_edge(staff_train_loop, crop_planting_loop)
root.order.add_edge(crop_planting_loop, xor1)
root.order.add_edge(xor1, xor2)
root.order.add_edge(xor2, yield_monitor_loop)
root.order.add_edge(yield_monitor_loop, maintenance_loop)
root.order.add_edge(maintenance_loop, market_setup_loop)
root.order.add_edge(market_setup_loop, waste_manage_loop)
root.order.add_edge(waste_manage_loop, xor2)