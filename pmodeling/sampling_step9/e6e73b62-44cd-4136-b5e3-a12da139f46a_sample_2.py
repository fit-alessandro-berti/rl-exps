import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

SiteSurvey = Transition(label='Site Survey')
DesignLayout = Transition(label='Design Layout')
ProcureModules = Transition(label='Procure Modules')
InstallFramework = Transition(label='Install Framework')
SetupSensors = Transition(label='Setup Sensors')
CalibrateNutrients = Transition(label='Calibrate Nutrients')
ConfigureIoT = Transition(label='Configure IoT')
PlantSeeding = Transition(label='Plant Seeding')
MonitorGrowth = Transition(label='Monitor Growth')
ManageLighting = Transition(label='Manage Lighting')
PestControl = Transition(label='Pest Control')
RecycleWaste = Transition(label='Recycle Waste')
AnalyzeData = Transition(label='Analyze Data')
AdjustEnvironment = Transition(label='Adjust Environment')
HarvestCrops = Transition(label='Harvest Crops')
DistributeProduce = Transition(label='Distribute Produce')

skip = SilentTransition()

siteSurveyLoop = OperatorPOWL(operator=Operator.LOOP, children=[SiteSurvey, DesignLayout])
moduleAssembly = OperatorPOWL(operator=Operator.XOR, children=[ProcureModules, skip])
frameworkInstallation = OperatorPOWL(operator=Operator.LOOP, children=[InstallFramework, SetupSensors])
sensorConfiguration = OperatorPOWL(operator=Operator.XOR, children=[CalibrateNutrients, ConfigureIoT])
planting = OperatorPOWL(operator=Operator.LOOP, children=[PlantSeeding, MonitorGrowth])
lightingManagement = OperatorPOWL(operator=Operator.XOR, children=[ManageLighting, PestControl])
wasteRecycling = OperatorPOWL(operator=Operator.XOR, children=[RecycleWaste, skip])
dataAnalysis = OperatorPOWL(operator=Operator.LOOP, children=[AnalyzeData, AdjustEnvironment])
cropHarvesting = OperatorPOWL(operator=Operator.XOR, children=[HarvestCrops, skip])
produceDistribution = OperatorPOWL(operator=Operator.XOR, children=[DistributeProduce, skip])

root = StrictPartialOrder(nodes=[siteSurveyLoop, moduleAssembly, frameworkInstallation, sensorConfiguration, planting, lightingManagement, wasteRecycling, dataAnalysis, cropHarvesting, produceDistribution])
root.order.add_edge(siteSurveyLoop, moduleAssembly)
root.order.add_edge(moduleAssembly, frameworkInstallation)
root.order.add_edge(frameworkInstallation, sensorConfiguration)
root.order.add_edge(sensorConfiguration, planting)
root.order.add_edge(planting, lightingManagement)
root.order.add_edge(lightingManagement, wasteRecycling)
root.order.add_edge(wasteRecycling, dataAnalysis)
root.order.add_edge(dataAnalysis, cropHarvesting)
root.order.add_edge(cropHarvesting, produceDistribution)