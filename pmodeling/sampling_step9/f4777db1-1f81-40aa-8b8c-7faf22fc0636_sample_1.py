import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define the transitions
site_survey = Transition(label='Site Survey')
impact_study = Transition(label='Impact Study')
structure_check = Transition(label='Structure Check')
soil_testing = Transition(label='Soil Testing')
system_design = Transition(label='System Design')
seed_selection = Transition(label='Seed Selection')
irrigation_setup = Transition(label='Irrigation Setup')
lighting_install = Transition(label='Lighting Install')
pest_control = Transition(label='Pest Control')
community_meet = Transition(label='Community Meet')
regulation_review = Transition(label='Regulation Review')
waste_plan = Transition(label='Waste Plan')
crop_monitor = Transition(label='Crop Monitor')
harvest_prep = Transition(label='Harvest Prep')
market_launch = Transition(label='Market Launch')
skip = SilentTransition()

# Define the partial order
site_survey_choice = OperatorPOWL(operator=Operator.XOR, children=[site_survey, skip])
impact_study_choice = OperatorPOWL(operator=Operator.XOR, children=[impact_study, skip])
structure_check_choice = OperatorPOWL(operator=Operator.XOR, children=[structure_check, skip])
soil_testing_choice = OperatorPOWL(operator=Operator.XOR, children=[soil_testing, skip])
system_design_choice = OperatorPOWL(operator=Operator.XOR, children=[system_design, skip])
seed_selection_choice = OperatorPOWL(operator=Operator.XOR, children=[seed_selection, skip])
irrigation_setup_choice = OperatorPOWL(operator=Operator.XOR, children=[irrigation_setup, skip])
lighting_install_choice = OperatorPOWL(operator=Operator.XOR, children=[lighting_install, skip])
pest_control_choice = OperatorPOWL(operator=Operator.XOR, children=[pest_control, skip])
community_meet_choice = OperatorPOWL(operator=Operator.XOR, children=[community_meet, skip])
regulation_review_choice = OperatorPOWL(operator=Operator.XOR, children=[regulation_review, skip])
waste_plan_choice = OperatorPOWL(operator=Operator.XOR, children=[waste_plan, skip])
crop_monitor_choice = OperatorPOWL(operator=Operator.XOR, children=[crop_monitor, skip])
harvest_prep_choice = OperatorPOWL(operator=Operator.XOR, children=[harvest_prep, skip])
market_launch_choice = OperatorPOWL(operator=Operator.XOR, children=[market_launch, skip])

loop = OperatorPOWL(operator=Operator.LOOP, children=[site_survey_choice, impact_study_choice, structure_check_choice, soil_testing_choice, system_design_choice, seed_selection_choice, irrigation_setup_choice, lighting_install_choice, pest_control_choice, community_meet_choice, regulation_review_choice, waste_plan_choice, crop_monitor_choice, harvest_prep_choice, market_launch_choice])

root = StrictPartialOrder(nodes=[loop])
root.order.add_edge(loop, site_survey_choice)
root.order.add_edge(loop, impact_study_choice)
root.order.add_edge(loop, structure_check_choice)
root.order.add_edge(loop, soil_testing_choice)
root.order.add_edge(loop, system_design_choice)
root.order.add_edge(loop, seed_selection_choice)
root.order.add_edge(loop, irrigation_setup_choice)
root.order.add_edge(loop, lighting_install_choice)
root.order.add_edge(loop, pest_control_choice)
root.order.add_edge(loop, community_meet_choice)
root.order.add_edge(loop, regulation_review_choice)
root.order.add_edge(loop, waste_plan_choice)
root.order.add_edge(loop, crop_monitor_choice)
root.order.add_edge(loop, harvest_prep_choice)
root.order.add_edge(loop, market_launch_choice)

print(root)