import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

SiteAnalysis = Transition(label='Site Analysis')
InfrastructureSetup = Transition(label='Infrastructure Setup')
SeedSelection = Transition(label='Seed Selection')
NutrientMix = Transition(label='Nutrient Mix')
PlantingCycle = Transition(label='Planting Cycle')
ClimateAdjust = Transition(label='Climate Adjust')
GrowthMonitor = Transition(label='Growth Monitor')
PestControl = Transition(label='Pest Control')
HarvestingMode = Transition(label='Harvesting Mode')
QualityCheck = Transition(label='Quality Check')
PackagingPhase = Transition(label='Packaging Phase')
ColdStorage = Transition(label='Cold Storage')
OrderDispatch = Transition(label='Order Dispatch')
WasteRecycling = Transition(label='Waste Recycling')
SystemMaintain = Transition(label='System Maintain')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[SiteAnalysis, InfrastructureSetup])
xor = OperatorPOWL(operator=Operator.XOR, children=[SeedSelection, NutrientMix])
xor1 = OperatorPOWL(operator=Operator.XOR, children=[PlantingCycle, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[ClimateAdjust, GrowthMonitor])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[PestControl, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[HarvestingMode, QualityCheck])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[PackagingPhase, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[ColdStorage, OrderDispatch])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[WasteRecycling, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[SystemMaintain, skip])
root = StrictPartialOrder(nodes=[loop, xor, xor1, xor2, xor3, xor4, xor5, xor6, xor7, xor8])
root.order.add_edge(loop, xor)
root.order.add_edge(xor, xor1)
root.order.add_edge(xor1, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor6, xor7)
root.order.add_edge(xor7, xor8)