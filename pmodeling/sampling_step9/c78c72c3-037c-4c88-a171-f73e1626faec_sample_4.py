import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
site_survey = Transition(label='Site Survey')
design_layout = Transition(label='Design Layout')
system_build = Transition(label='System Build')
install_sensors = Transition(label='Install Sensors')
set_controls = Transition(label='Set Controls')
test_modules = Transition(label='Test Modules')
select_crops = Transition(label='Select Crops')
configure_irrigation = Transition(label='Configure Irrigation')
deploy_ai = Transition(label='Deploy AI')
monitor_pests = Transition(label='Monitor Pests')
manage_energy = Transition(label='Manage Energy')
recycle_waste = Transition(label='Recycle Waste')
train_staff = Transition(label='Train Staff')
launch_market = Transition(label='Launch Market')
engage_community = Transition(label='Engage Community')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[system_build, test_modules])
xor = OperatorPOWL(operator=Operator.XOR, children=[design_layout, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[deploy_ai, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[manage_energy, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[recycle_waste, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[launch_market, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[engage_community, skip])
root = StrictPartialOrder(nodes=[loop, xor, xor2, xor3, xor4, xor5, xor6])
root.order.add_edge(loop, xor)
root.order.add_edge(loop, xor2)
root.order.add_edge(loop, xor3)
root.order.add_edge(loop, xor4)
root.order.add_edge(loop, xor5)
root.order.add_edge(loop, xor6)