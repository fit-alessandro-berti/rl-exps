import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define the transitions
milk_sourcing = Transition(label='Milk Sourcing')
culture_selection = Transition(label='Culture Selection')
milk_testing = Transition(label='Milk Testing')
curd_formation = Transition(label='Curd Formation')
whey_separation = Transition(label='Whey Separation')
molding_cheese = Transition(label='Molding Cheese')
salting_process = Transition(label='Salting Process')
aging_setup = Transition(label='Aging Setup')
env_monitoring = Transition(label='Env Monitoring')
flavor_profiling = Transition(label='Flavor Profiling')
packaging_design = Transition(label='Packaging Design')
blockchain_entry = Transition(label='Blockchain Entry')
quality_audit = Transition(label='Quality Audit')
retail_sync = Transition(label='Retail Sync')
transport_prep = Transition(label='Transport Prep')
delivery_tracking = Transition(label='Delivery Tracking')
customer_feedback = Transition(label='Customer Feedback')

# Define the silent transitions
skip_milk_sourcing = SilentTransition(label='Milk Sourcing')
skip_culture_selection = SilentTransition(label='Culture Selection')
skip_milk_testing = SilentTransition(label='Milk Testing')
skip_curd_formation = SilentTransition(label='Curd Formation')
skip_whey_separation = SilentTransition(label='Whey Separation')
skip_molding_cheese = SilentTransition(label='Molding Cheese')
skip_salting_process = SilentTransition(label='Salting Process')
skip_aging_setup = SilentTransition(label='Aging Setup')
skip_env_monitoring = SilentTransition(label='Env Monitoring')
skip_flavor_profiling = SilentTransition(label='Flavor Profiling')
skip_packaging_design = SilentTransition(label='Packaging Design')
skip_blockchain_entry = SilentTransition(label='Blockchain Entry')
skip_quality_audit = SilentTransition(label='Quality Audit')
skip_retail_sync = SilentTransition(label='Retail Sync')
skip_transport_prep = SilentTransition(label='Transport Prep')
skip_delivery_tracking = SilentTransition(label='Delivery Tracking')
skip_customer_feedback = SilentTransition(label='Customer Feedback')

# Define the operators
xor_milk_sourcing = OperatorPOWL(operator=Operator.XOR, children=[milk_sourcing, skip_milk_sourcing])
xor_culture_selection = OperatorPOWL(operator=Operator.XOR, children=[culture_selection, skip_culture_selection])
xor_milk_testing = OperatorPOWL(operator=Operator.XOR, children=[milk_testing, skip_milk_testing])
xor_curd_formation = OperatorPOWL(operator=Operator.XOR, children=[curd_formation, skip_curd_formation])
xor_whey_separation = OperatorPOWL(operator=Operator.XOR, children=[whey_separation, skip_whey_separation])
xor_molding_cheese = OperatorPOWL(operator=Operator.XOR, children=[molding_cheese, skip_molding_cheese])
xor_salting_process = OperatorPOWL(operator=Operator.XOR, children=[salting_process, skip_salting_process])
xor_aging_setup = OperatorPOWL(operator=Operator.XOR, children=[aging_setup, skip_aging_setup])
xor_env_monitoring = OperatorPOWL(operator=Operator.XOR, children=[env_monitoring, skip_env_monitoring])
xor_flavor_profiling = OperatorPOWL(operator=Operator.XOR, children=[flavor_profiling, skip_flavor_profiling])
xor_packaging_design = OperatorPOWL(operator=Operator.XOR, children=[packaging_design, skip_packaging_design])
xor_blockchain_entry = OperatorPOWL(operator=Operator.XOR, children=[blockchain_entry, skip_blockchain_entry])
xor_quality_audit = OperatorPOWL(operator=Operator.XOR, children=[quality_audit, skip_quality_audit])
xor_retail_sync = OperatorPOWL(operator=Operator.XOR, children=[retail_sync, skip_retail_sync])
xor_transport_prep = OperatorPOWL(operator=Operator.XOR, children=[transport_prep, skip_transport_prep])
xor_delivery_tracking = OperatorPOWL(operator=Operator.XOR, children=[delivery_tracking, skip_delivery_tracking])
xor_customer_feedback = OperatorPOWL(operator=Operator.XOR, children=[customer_feedback, skip_customer_feedback])

# Define the loops
loop_milk_sourcing = OperatorPOWL(operator=Operator.LOOP, children=[xor_milk_sourcing])
loop_culture_selection = OperatorPOWL(operator=Operator.LOOP, children=[xor_culture_selection])
loop_milk_testing = OperatorPOWL(operator=Operator.LOOP, children=[xor_milk_testing])
loop_curd_formation = OperatorPOWL(operator=Operator.LOOP, children=[xor_curd_formation])
loop_whey_separation = OperatorPOWL(operator=Operator.LOOP, children=[xor_whey_separation])
loop_molding_cheese = OperatorPOWL(operator=Operator.LOOP, children=[xor_molding_cheese])
loop_salting_process = OperatorPOWL(operator=Operator.LOOP, children=[xor_salting_process])
loop_aging_setup = OperatorPOWL(operator=Operator.LOOP, children=[xor_aging_setup])
loop_env_monitoring = OperatorPOWL(operator=Operator.LOOP, children=[xor_env_monitoring])
loop_flavor_profiling = OperatorPOWL(operator=Operator.LOOP, children=[xor_flavor_profiling])
loop_packaging_design = OperatorPOWL(operator=Operator.LOOP, children=[xor_packaging_design])
loop_blockchain_entry = OperatorPOWL(operator=Operator.LOOP, children=[xor_blockchain_entry])
loop_quality_audit = OperatorPOWL(operator=Operator.LOOP, children=[xor_quality_audit])
loop_retail_sync = OperatorPOWL(operator=Operator.LOOP, children=[xor_retail_sync])
loop_transport_prep = OperatorPOWL(operator=Operator.LOOP, children=[xor_transport_prep])
loop_delivery_tracking = OperatorPOWL(operator=Operator.LOOP, children=[xor_delivery_tracking])
loop_customer_feedback = OperatorPOWL(operator=Operator.LOOP, children=[xor_customer_feedback])

# Define the root
root = StrictPartialOrder(nodes=[loop_milk_sourcing, loop_culture_selection, loop_milk_testing, loop_curd_formation, loop_whey_separation, loop_molding_cheese, loop_salting_process, loop_aging_setup, loop_env_monitoring, loop_flavor_profiling, loop_packaging_design, loop_blockchain_entry, loop_quality_audit, loop_retail_sync, loop_transport_prep, loop_delivery_tracking, loop_customer_feedback])
root.order.add_edge(loop_milk_sourcing, loop_culture_selection)
root.order.add_edge(loop_culture_selection, loop_milk_testing)
root.order.add_edge(loop_milk_testing, loop_curd_formation)
root.order.add_edge(loop_curd_formation, loop_whey_separation)
root.order.add_edge(loop_whey_separation, loop_molding_cheese)
root.order.add_edge(loop_molding_cheese, loop_salting_process)
root.order.add_edge(loop_salting_process, loop_aging_setup)
root.order.add_edge(loop_aging_setup, loop_env_monitoring)
root.order.add_edge(loop_env_monitoring, loop_flavor_profiling)
root.order.add_edge(loop_flavor_profiling, loop_packaging_design)
root.order.add_edge(loop_packaging_design, loop_blockchain_entry)
root.order.add_edge(loop_blockchain_entry, loop_quality_audit)
root.order.add_edge(loop_quality_audit, loop_retail_sync)
root.order.add_edge(loop_retail_sync, loop_transport_prep)
root.order.add_edge(loop_transport_prep, loop_delivery_tracking)
root.order.add_edge(loop_delivery_tracking, loop_customer_feedback)

print(root)