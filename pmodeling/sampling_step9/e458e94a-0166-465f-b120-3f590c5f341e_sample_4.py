import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
InquiryReview = Transition(label='Inquiry Review')
ClientOnboard = Transition(label='Client Onboard')
ConceptDraft = Transition(label='Concept Draft')
FeedbackCycle = Transition(label='Feedback Cycle')
ContractSetup = Transition(label='Contract Setup')
PaymentSchedule = Transition(label='Payment Schedule')
MaterialSourcing = Transition(label='Material Sourcing')
ArtworkCreate = Transition(label='Artwork Create')
QualityCheck = Transition(label='Quality Check')
FrameSelection = Transition(label='Frame Selection')
PackagingPrep = Transition(label='Packaging Prep')
ShipmentArrange = Transition(label='Shipment Arrange')
DeliveryConfirm = Transition(label='Delivery Confirm')
PostSaleSupport = Transition(label='Post-Sale Support')
RevisionManage = Transition(label='Revision Manage')
DelayMitigate = Transition(label='Delay Mitigate')
skip = SilentTransition()
loop1 = OperatorPOWL(operator=Operator.LOOP, children=[InquiryReview, ClientOnboard])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[ConceptDraft, FeedbackCycle])
loop3 = OperatorPOWL(operator=Operator.LOOP, children=[ContractSetup, PaymentSchedule])
loop4 = OperatorPOWL(operator=Operator.LOOP, children=[MaterialSourcing, ArtworkCreate])
loop5 = OperatorPOWL(operator=Operator.LOOP, children=[QualityCheck, FrameSelection])
loop6 = OperatorPOWL(operator=Operator.LOOP, children=[PackagingPrep, ShipmentArrange])
loop7 = OperatorPOWL(operator=Operator.LOOP, children=[DeliveryConfirm, PostSaleSupport])
loop8 = OperatorPOWL(operator=Operator.LOOP, children=[RevisionManage, DelayMitigate])
root = StrictPartialOrder(nodes=[loop1, loop2, loop3, loop4, loop5, loop6, loop7, loop8])
root.order.add_edge(loop1, loop2)
root.order.add_edge(loop2, loop3)
root.order.add_edge(loop3, loop4)
root.order.add_edge(loop4, loop5)
root.order.add_edge(loop5, loop6)
root.order.add_edge(loop6, loop7)
root.order.add_edge(loop7, loop8)
root.order.add_edge(loop8, loop1)