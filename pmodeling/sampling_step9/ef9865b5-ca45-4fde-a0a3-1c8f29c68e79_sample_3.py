import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

Site_Survey = Transition(label='Site Survey')
Permit_Review = Transition(label='Permit Review')
Design_Layout = Transition(label='Design Layout')
Material_Sourcing = Transition(label='Material Sourcing')
Irrigation_Setup = Transition(label='Irrigation Setup')
Sensor_Install = Transition(label='Sensor Install')
Structural_Test = Transition(label='Structural Test')
Recruit_Farmers = Transition(label='Recruit Farmers')
Trial_Planting = Transition(label='Trial Planting')
Pest_Control = Transition(label='Pest Control')
Soilless_Preparation = Transition(label='Soilless Prep')
System_Calibration = Transition(label='System Calibrate')
Data_Monitoring = Transition(label='Data Monitor')
Harvest_Planning = Transition(label='Harvest Plan')
Community_Outreach = Transition(label='Community Outreach')

skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[Site_Survey, Permit_Review])
xor = OperatorPOWL(operator=Operator.XOR, children=[Design_Layout, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[Material_Sourcing, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[Irrigation_Setup, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[Sensor_Install, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[Structural_Test, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[Recruit_Farmers, skip])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[Trial_Planting, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[Pest_Control, skip])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[Soilless_Preparation, skip])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[System_Calibration, skip])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[Data_Monitoring, skip])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[Harvest_Planning, skip])
xor13 = OperatorPOWL(operator=Operator.XOR, children=[Community_Outreach, skip])

root = StrictPartialOrder(nodes=[loop, xor, xor2, xor3, xor4, xor5, xor6, xor7, xor8, xor9, xor10, xor11, xor12, xor13])
root.order.add_edge(loop, xor)
root.order.add_edge(xor, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor6, xor7)
root.order.add_edge(xor7, xor8)
root.order.add_edge(xor8, xor9)
root.order.add_edge(xor9, xor10)
root.order.add_edge(xor10, xor11)
root.order.add_edge(xor11, xor12)
root.order.add_edge(xor12, xor13)