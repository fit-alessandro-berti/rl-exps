import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
ReceiveArtifact = Transition(label='Receive Artifact')
ConditionLog = Transition(label='Condition Log')
RadiocarbonTest = Transition(label='Radiocarbon Test')
SpectroscopyScan = Transition(label='Spectroscopy Scan')
ExpertConsult = Transition(label='Expert Consult')
ProvenanceCheck = Transition(label='Provenance Check')
ArchiveSearch = Transition(label='Archive Search')
RiskAssess = Transition(label='Risk Assess')
ThreeDScan = Transition(label='3D Scan')
LegalReview = Transition(label='Legal Review')
InsuranceSetup = Transition(label='Insurance Setup')
CertificateDraft = Transition(label='Certificate Draft')
CertificateApprove = Transition(label='Certificate Approve')
ClimatePack = Transition(label='Climate Pack')
ConservationPlan = Transition(label='Conservation Plan')
MonitoringSchedule = Transition(label='Monitoring Schedule')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[ReceiveArtifact, ConditionLog])
xor = OperatorPOWL(operator=Operator.XOR, children=[RadiocarbonTest, SpectroscopyScan])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[ExpertConsult, ArchiveSearch])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[RiskAssess, ThreeDScan])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[LegalReview, InsuranceSetup])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[CertificateDraft, CertificateApprove])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[ClimatePack, ConservationPlan])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[MonitoringSchedule, skip])
root = StrictPartialOrder(nodes=[loop, xor, xor2, xor3, xor4, xor5, xor6, xor7])
root.order.add_edge(loop, xor)
root.order.add_edge(xor, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor6, xor7)
root.order.add_edge(xor7, loop)