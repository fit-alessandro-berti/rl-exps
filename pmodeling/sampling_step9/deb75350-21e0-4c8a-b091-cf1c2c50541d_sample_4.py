import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
Intake_Review = Transition(label='Intake Review')
Visual_Inspect = Transition(label='Visual Inspect')
Material_Test = Transition(label='Material Test')
Provenance_Check = Transition(label='Provenance Check')
Archival_Search = Transition(label='Archival Search')
Expert_Consult = Transition(label='Expert Consult')
Digital_Scan = Transition(label='Digital Scan')
Condition_Report = Transition(label='Condition Report')
Forgery_Assess = Transition(label='Forgery Assess')
Legal_Review = Transition(label='Legal Review')
Risk_Analysis = Transition(label='Risk Analysis')
Acquisition_Vote = Transition(label='Acquisition Vote')
Catalog_Entry = Transition(label='Catalog Entry')
Storage_Prep = Transition(label='Storage Prep')
Final_Approval = Transition(label='Final Approval')
skip = SilentTransition()
loop1 = OperatorPOWL(operator=Operator.LOOP, children=[Intake_Review, Visual_Inspect, Material_Test, Provenance_Check, Archival_Search, Expert_Consult, Digital_Scan, Condition_Report, Forging_Assess, Legal_Review, Risk_Analysis, Acquisition_Vote, Catalog_Entry, Storage_Prep, Final_Approval])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[Intake_Review, Visual_Inspect, Material_Test, Provenance_Check, Archival_Search, Expert_Consult, Digital_Scan, Condition_Report, Forging_Assess, Legal_Review, Risk_Analysis, Acquisition_Vote, Catalog_Entry, Storage_Prep, Final_Approval])
xor = OperatorPOWL(operator=Operator.XOR, children=[loop1, loop2])
root = StrictPartialOrder(nodes=[xor])
root.order.add_edge(xor, xor)