import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
site_survey = Transition(label='Site Survey')
load_testing = Transition(label='Load Testing')
crop_selection = Transition(label='Crop Selection')
soil_prep = Transition(label='Soil Prep')
irrigation_setup = Transition(label='Irrigation Setup')
permits_acquire = Transition(label='Permits Acquire')
supplier_outreach = Transition(label='Supplier Outreach')
planting_seedlings = Transition(label='Planting Seedlings')
pest_monitoring = Transition(label='Pest Monitoring')
nutrient_testing = Transition(label='Nutrient Testing')
waste_sorting = Transition(label='Waste Sorting')
staff_training = Transition(label='Staff Training')
community_meet = Transition(label='Community Meet')
harvest_planning = Transition(label='Harvest Planning')
market_launch = Transition(label='Market Launch')
yield_tracking = Transition(label='Yield Tracking')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[site_survey, load_testing])
xor = OperatorPOWL(operator=Operator.XOR, children=[crop_selection, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[soil_prep, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[irrigation_setup, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[permits_acquire, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[supplier_outreach, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[planting_seedlings, skip])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[pest_monitoring, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[nutrient_testing, skip])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[waste_sorting, skip])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[staff_training, skip])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[community_meet, skip])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[harvest_planning, skip])
xor13 = OperatorPOWL(operator=Operator.XOR, children=[market_launch, skip])
xor14 = OperatorPOWL(operator=Operator.XOR, children=[yield_tracking, skip])
root = StrictPartialOrder(nodes=[loop, xor, xor2, xor3, xor4, xor5, xor6, xor7, xor8, xor9, xor10, xor11, xor12, xor13, xor14])
root.order.add_edge(loop, xor)
root.order.add_edge(xor, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor6, xor7)
root.order.add_edge(xor7, xor8)
root.order.add_edge(xor8, xor9)
root.order.add_edge(xor9, xor10)
root.order.add_edge(xor10, xor11)
root.order.add_edge(xor11, xor12)
root.order.add_edge(xor12, xor13)
root.order.add_edge(xor13, xor14)
root.order.add_edge(xor14, loop)