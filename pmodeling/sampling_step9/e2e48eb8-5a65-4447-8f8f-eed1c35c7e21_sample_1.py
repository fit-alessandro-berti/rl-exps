import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

SiteSurvey = Transition(label='Site Survey')
StructuralCheck = Transition(label='Structural Check')
ClimateStudy = Transition(label='Climate Study')
SoilPrep = Transition(label='Soil Prep')
SeedSelection = Transition(label='Seed Selection')
IrrigationSetup = Transition(label='Irrigation Setup')
NutrientMix = Transition(label='Nutrient Mix')
SensorInstall = Transition(label='Sensor Install')
PestMonitor = Transition(label='Pest Monitor')
DataAnalysis = Transition(label='Data Analysis')
RegulationReview = Transition(label='Regulation Review')
CommunityMeet = Transition(label='Community Meet')
HarvestPlan = Transition(label='Harvest Plan')
PackagingDesign = Transition(label='Packaging Design')
DistributionMap = Transition(label='Distribution Map')
FeedbackLoop = Transition(label='Feedback Loop')
MaintenanceSchedule = Transition(label='Maintenance Schedule')

skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[SiteSurvey, StructuralCheck])
xor = OperatorPOWL(operator=Operator.XOR, children=[ClimateStudy, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[SoilPrep, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[SeedSelection, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[IrrigationSetup, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[NutrientMix, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[SensorInstall, skip])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[PestMonitor, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[DataAnalysis, skip])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[RegulationReview, skip])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[CommunityMeet, skip])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[HarvestPlan, skip])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[PackagingDesign, skip])
xor13 = OperatorPOWL(operator=Operator.XOR, children=[DistributionMap, skip])
xor14 = OperatorPOWL(operator=Operator.XOR, children=[FeedbackLoop, skip])
xor15 = OperatorPOWL(operator=Operator.XOR, children=[MaintenanceSchedule, skip])

root = StrictPartialOrder(nodes=[loop, xor, xor2, xor3, xor4, xor5, xor6, xor7, xor8, xor9, xor10, xor11, xor12, xor13, xor14, xor15])
root.order.add_edge(loop, xor)
root.order.add_edge(xor, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor6, xor7)
root.order.add_edge(xor7, xor8)
root.order.add_edge(xor8, xor9)
root.order.add_edge(xor9, xor10)
root.order.add_edge(xor10, xor11)
root.order.add_edge(xor11, xor12)
root.order.add_edge(xor12, xor13)
root.order.add_edge(xor13, xor14)
root.order.add_edge(xor14, xor15)