import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

seed_selection = Transition(label='Seed Selection')
nutrient_mix = Transition(label='Nutrient Mix')
env_check = Transition(label='Environment Check')
plant_setup = Transition(label='Planting Setup')
growth_monitoring = Transition(label='Growth Monitoring')
pest_control = Transition(label='Pest Control')
auto_harvest = Transition(label='Automated Harvest')
quality_inspect = Transition(label='Quality Inspect')
packaging_prep = Transition(label='Packaging Prep')
order_fulfill = Transition(label='Order Fulfill')
local_delivery = Transition(label='Local Delivery')
waste_collect = Transition(label='Waste Collect')
biomass_process = Transition(label='Biomass Process')
compost_create = Transition(label='Compost Create')
energy_recover = Transition(label='Energy Recover')
regulation_review = Transition(label='Regulation Review')
community_engage = Transition(label='Community Engage')

skip = SilentTransition()

loop_env_check = OperatorPOWL(operator=Operator.LOOP, children=[env_check])
loop_growth_monitoring = OperatorPOWL(operator=Operator.LOOP, children=[growth_monitoring])
loop_pest_control = OperatorPOWL(operator=Operator.LOOP, children=[pest_control])
loop_auto_harvest = OperatorPOWL(operator=Operator.LOOP, children=[auto_harvest])
loop_quality_inspect = OperatorPOWL(operator=Operator.LOOP, children=[quality_inspect])
loop_packaging_prep = OperatorPOWL(operator=Operator.LOOP, children=[packaging_prep])
loop_order_fulfill = OperatorPOWL(operator=Operator.LOOP, children=[order_fulfill])
loop_local_delivery = OperatorPOWL(operator=Operator.LOOP, children=[local_delivery])
loop_waste_collect = OperatorPOWL(operator=Operator.LOOP, children=[waste_collect])
loop_biomass_process = OperatorPOWL(operator=Operator.LOOP, children=[biomass_process])
loop_compost_create = OperatorPOWL(operator=Operator.LOOP, children=[compost_create])
loop_energy_recover = OperatorPOWL(operator=Operator.LOOP, children=[energy_recover])
loop_regulation_review = OperatorPOWL(operator=Operator.LOOP, children=[regulation_review])
loop_community_engage = OperatorPOWL(operator=Operator.LOOP, children=[community_engage])

xor_seed_selection = OperatorPOWL(operator=Operator.XOR, children=[seed_selection, skip])
xor_nutrient_mix = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, skip])
xor_env_check = OperatorPOWL(operator=Operator.XOR, children=[env_check, skip])
xor_plant_setup = OperatorPOWL(operator=Operator.XOR, children=[plant_setup, skip])
xor_growth_monitoring = OperatorPOWL(operator=Operator.XOR, children=[growth_monitoring, skip])
xor_pest_control = OperatorPOWL(operator=Operator.XOR, children=[pest_control, skip])
xor_auto_harvest = OperatorPOWL(operator=Operator.XOR, children=[auto_harvest, skip])
xor_quality_inspect = OperatorPOWL(operator=Operator.XOR, children=[quality_inspect, skip])
xor_packaging_prep = OperatorPOWL(operator=Operator.XOR, children=[packaging_prep, skip])
xor_order_fulfill = OperatorPOWL(operator=Operator.XOR, children=[order_fulfill, skip])
xor_local_delivery = OperatorPOWL(operator=Operator.XOR, children=[local_delivery, skip])
xor_waste_collect = OperatorPOWL(operator=Operator.XOR, children=[waste_collect, skip])
xor_biomass_process = OperatorPOWL(operator=Operator.XOR, children=[biomass_process, skip])
xor_compost_create = OperatorPOWL(operator=Operator.XOR, children=[compost_create, skip])
xor_energy_recover = OperatorPOWL(operator=Operator.XOR, children=[energy_recover, skip])
xor_regulation_review = OperatorPOWL(operator=Operator.XOR, children=[regulation_review, skip])
xor_community_engage = OperatorPOWL(operator=Operator.XOR, children=[community_engage, skip])

root = StrictPartialOrder(nodes=[xor_seed_selection, xor_nutrient_mix, xor_env_check, xor_plant_setup, loop_env_check, loop_growth_monitoring, loop_pest_control, loop_auto_harvest, loop_quality_inspect, loop_packaging_prep, loop_order_fulfill, loop_local_delivery, loop_waste_collect, loop_biomass_process, loop_compost_create, loop_energy_recover, loop_regulation_review, loop_community_engage])
root.order.add_edge(xor_seed_selection, xor_nutrient_mix)
root.order.add_edge(xor_nutrient_mix, xor_env_check)
root.order.add_edge(xor_env_check, xor_plant_setup)
root.order.add_edge(xor_plant_setup, loop_env_check)
root.order.add_edge(loop_env_check, loop_growth_monitoring)
root.order.add_edge(loop_growth_monitoring, loop_pest_control)
root.order.add_edge(loop_pest_control, loop_auto_harvest)
root.order.add_edge(loop_auto_harvest, loop_quality_inspect)
root.order.add_edge(loop_quality_inspect, loop_packaging_prep)
root.order.add_edge(loop_packaging_prep, loop_order_fulfill)
root.order.add_edge(loop_order_fulfill, loop_local_delivery)
root.order.add_edge(loop_local_delivery, loop_waste_collect)
root.order.add_edge(loop_waste_collect, loop_biomass_process)
root.order.add_edge(loop_biomass_process, loop_compost_create)
root.order.add_edge(loop_compost_create, loop_energy_recover)
root.order.add_edge(loop_energy_recover, loop_regulation_review)
root.order.add_edge(loop_regulation_review, loop_community_engage)