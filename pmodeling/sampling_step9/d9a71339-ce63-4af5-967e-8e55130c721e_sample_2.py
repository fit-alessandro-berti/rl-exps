import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
structural_check = Transition(label='Structural Check')
modular_install = Transition(label='Modular Install')
hydroponic_setup = Transition(label='Hydroponic Setup')
nutrient_mix = Transition(label='Nutrient Mix')
sensor_setup = Transition(label='Sensor Setup')
ai_training = Transition(label='AI Training')
data_capture = Transition(label='Data Capture')
maintenance_plan = Transition(label='Maintenance Plan')
pest_scan = Transition(label='Pest Scan')
growth_monitor = Transition(label='Growth Monitor')
harvest_sync = Transition(label='Harvest Sync')
quality_test = Transition(label='Quality Test')
package_prep = Transition(label='Package Prep')
logistics_plan = Transition(label='Logistics Plan')

skip = SilentTransition()
loop_site_survey = OperatorPOWL(operator=Operator.LOOP, children=[site_survey])
loop_structural_check = OperatorPOWL(operator=Operator.LOOP, children=[structural_check])
loop_modular_install = OperatorPOWL(operator=Operator.LOOP, children=[modular_install])
loop_hydroponic_setup = OperatorPOWL(operator=Operator.LOOP, children=[hydroponic_setup])
loop_nutrient_mix = OperatorPOWL(operator=Operator.LOOP, children=[nutrient_mix])
loop_sensor_setup = OperatorPOWL(operator=Operator.LOOP, children=[sensor_setup])
loop_ai_training = OperatorPOWL(operator=Operator.LOOP, children=[ai_training])
loop_data_capture = OperatorPOWL(operator=Operator.LOOP, children=[data_capture])
loop_maintenance_plan = OperatorPOWL(operator=Operator.LOOP, children=[maintenance_plan])
loop_pest_scan = OperatorPOWL(operator=Operator.LOOP, children=[pest_scan])
loop_growth_monitor = OperatorPOWL(operator=Operator.LOOP, children=[growth_monitor])
loop_harvest_sync = OperatorPOWL(operator=Operator.LOOP, children=[harvest_sync])
loop_quality_test = OperatorPOWL(operator=Operator.LOOP, children=[quality_test])
loop_package_prep = OperatorPOWL(operator=Operator.LOOP, children=[package_prep])
loop_logistics_plan = OperatorPOWL(operator=Operator.LOOP, children=[logistics_plan])

xor_site_survey = OperatorPOWL(operator=Operator.XOR, children=[loop_site_survey, skip])
xor_structural_check = OperatorPOWL(operator=Operator.XOR, children=[loop_structural_check, skip])
xor_modular_install = OperatorPOWL(operator=Operator.XOR, children=[loop_modular_install, skip])
xor_hydroponic_setup = OperatorPOWL(operator=Operator.XOR, children=[loop_hydroponic_setup, skip])
xor_nutrient_mix = OperatorPOWL(operator=Operator.XOR, children=[loop_nutrient_mix, skip])
xor_sensor_setup = OperatorPOWL(operator=Operator.XOR, children=[loop_sensor_setup, skip])
xor_ai_training = OperatorPOWL(operator=Operator.XOR, children=[loop_ai_training, skip])
xor_data_capture = OperatorPOWL(operator=Operator.XOR, children=[loop_data_capture, skip])
xor_maintenance_plan = OperatorPOWL(operator=Operator.XOR, children=[loop_maintenance_plan, skip])
xor_pest_scan = OperatorPOWL(operator=Operator.XOR, children=[loop_pest_scan, skip])
xor_growth_monitor = OperatorPOWL(operator=Operator.XOR, children=[loop_growth_monitor, skip])
xor_harvest_sync = OperatorPOWL(operator=Operator.XOR, children=[loop_harvest_sync, skip])
xor_quality_test = OperatorPOWL(operator=Operator.XOR, children=[loop_quality_test, skip])
xor_package_prep = OperatorPOWL(operator=Operator.XOR, children=[loop_package_prep, skip])
xor_logistics_plan = OperatorPOWL(operator=Operator.XOR, children=[loop_logistics_plan, skip])

root = StrictPartialOrder(nodes=[xor_site_survey, xor_structural_check, xor_modular_install, xor_hydroponic_setup, xor_nutrient_mix, xor_sensor_setup, xor_ai_training, xor_data_capture, xor_maintenance_plan, xor_pest_scan, xor_growth_monitor, xor_harvest_sync, xor_quality_test, xor_package_prep, xor_logistics_plan])
root.order.add_edge(xor_site_survey, xor_structural_check)
root.order.add_edge(xor_structural_check, xor_modular_install)
root.order.add_edge(xor_modular_install, xor_hydroponic_setup)
root.order.add_edge(xor_hydroponic_setup, xor_nutrient_mix)
root.order.add_edge(xor_nutrient_mix, xor_sensor_setup)
root.order.add_edge(xor_sensor_setup, xor_ai_training)
root.order.add_edge(xor_ai_training, xor_data_capture)
root.order.add_edge(xor_data_capture, xor_maintenance_plan)
root.order.add_edge(xor_maintenance_plan, xor_pest_scan)
root.order.add_edge(xor_pest_scan, xor_growth_monitor)
root.order.add_edge(xor_growth_monitor, xor_harvest_sync)
root.order.add_edge(xor_harvest_sync, xor_quality_test)
root.order.add_edge(xor_quality_test, xor_package_prep)
root.order.add_edge(xor_package_prep, xor_logistics_plan)