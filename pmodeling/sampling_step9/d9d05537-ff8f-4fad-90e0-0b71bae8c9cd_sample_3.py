import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
A = Transition(label='Alert Verify')
B = Transition(label='Impact Assess')
C = Transition(label='Team Assemble')
D = Transition(label='Resource Allocate')
E = Transition(label='Stakeholder Notify')
F = Transition(label='Legal Review')
G = Transition(label='Media Brief')
H = Transition(label='Response Deploy')
I = Transition(label='Situation Monitor')
J = Transition(label='Data Collect')
K = Transition(label='Risk Mitigate')
L = Transition(label='Recovery Plan')
M = Transition(label='External Consult')
N = Transition(label='Status Update')
O = Transition(label='Post Review')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[A, B])
xor = OperatorPOWL(operator=Operator.XOR, children=[C, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[D, E])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[F, G])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[H, I])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[J, K])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[L, M])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[N, O])
root = StrictPartialOrder(nodes=[loop, xor, xor2, xor3, xor4, xor5, xor6, xor7])
root.order.add_edge(loop, xor)
root.order.add_edge(loop, xor2)
root.order.add_edge(loop, xor3)
root.order.add_edge(loop, xor4)
root.order.add_edge(loop, xor5)
root.order.add_edge(loop, xor6)
root.order.add_edge(loop, xor7)