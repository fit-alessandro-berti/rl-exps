import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
trend_sensing = Transition(label='Trend Sensing')
idea_fusion = Transition(label='Idea Fusion')
prototype_build = Transition(label='Prototype Build')
expert_review = Transition(label='Expert Review')
field_testing = Transition(label='Field Testing')
ip_analysis = Transition(label='IP Analysis')
compliance_check = Transition(label='Compliance Check')
partner_setup = Transition(label='Partner Setup')
user_profiling = Transition(label='User Profiling')
launch_prep = Transition(label='Launch Prep')
feedback_loop = Transition(label='Feedback Loop')
scale_planning = Transition(label='Scale Planning')
risk_assess = Transition(label='Risk Assess')
demand_scan = Transition(label='Demand Scan')
agile_adjust = Transition(label='Agile Adjust')
skip = SilentTransition()
loop_trend = OperatorPOWL(operator=Operator.LOOP, children=[trend_sensing, idea_fusion])
loop_prototype = OperatorPOWL(operator=Operator.LOOP, children=[prototype_build, expert_review, field_testing])
loop_ip = OperatorPOWL(operator=Operator.LOOP, children=[ip_analysis, compliance_check, partner_setup])
loop_user = OperatorPOWL(operator=Operator.LOOP, children=[user_profiling, launch_prep, feedback_loop])
loop_scale = OperatorPOWL(operator=Operator.LOOP, children=[scale_planning, risk_assess, demand_scan])
root = StrictPartialOrder(nodes=[loop_trend, loop_prototype, loop_ip, loop_user, loop_scale])
root.order.add_edge(loop_trend, loop_prototype)
root.order.add_edge(loop_prototype, loop_ip)
root.order.add_edge(loop_ip, loop_user)
root.order.add_edge(loop_user, loop_scale)