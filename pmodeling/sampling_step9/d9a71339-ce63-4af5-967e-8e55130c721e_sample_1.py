import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

SiteSurvey = Transition(label='Site Survey')
StructuralCheck = Transition(label='Structural Check')
ModularInstall = Transition(label='Modular Install')
HydroponicSetup = Transition(label='Hydroponic Setup')
NutrientMix = Transition(label='Nutrient Mix')
SensorSetup = Transition(label='Sensor Setup')
AITraining = Transition(label='AI Training')
DataCapture = Transition(label='Data Capture')
MaintenancePlan = Transition(label='Maintenance Plan')
PestScan = Transition(label='Pest Scan')
GrowthMonitor = Transition(label='Growth Monitor')
HarvestSync = Transition(label='Harvest Sync')
QualityTest = Transition(label='Quality Test')
PackagePrep = Transition(label='Package Prep')
LogisticsPlan = Transition(label='Logistics Plan')
skip = SilentTransition()

site_survey = OperatorPOWL(operator=Operator.XOR, children=[SiteSurvey, StructuralCheck])
structural_check = OperatorPOWL(operator=Operator.XOR, children=[ModularInstall, skip])
hydroponic_setup = OperatorPOWL(operator=Operator.XOR, children=[NutrientMix, skip])
sensor_setup = OperatorPOWL(operator=Operator.XOR, children=[AITraining, skip])
ai_training = OperatorPOWL(operator=Operator.XOR, children=[DataCapture, MaintenancePlan])
maintenance_plan = OperatorPOWL(operator=Operator.XOR, children=[PestScan, skip])
pest_scan = OperatorPOWL(operator=Operator.XOR, children=[GrowthMonitor, skip])
growth_monitor = OperatorPOWL(operator=Operator.XOR, children=[HarvestSync, skip])
harvest_sync = OperatorPOWL(operator=Operator.XOR, children=[QualityTest, skip])
quality_test = OperatorPOWL(operator=Operator.XOR, children=[PackagePrep, skip])
package_prep = OperatorPOWL(operator=Operator.XOR, children=[LogisticsPlan, skip])
logistics_plan = OperatorPOWL(operator=Operator.XOR, children=[skip, skip])

root = StrictPartialOrder(nodes=[site_survey, structural_check, hydroponic_setup, sensor_setup, ai_training, maintenance_plan, pest_scan, growth_monitor, harvest_sync, quality_test, package_prep, logistics_plan])
root.order.add_edge(site_survey, structural_check)
root.order.add_edge(structural_check, modular_install)
root.order.add_edge(modular_install, hydroponic_setup)
root.order.add_edge(hydroponic_setup, nutrient_mix)
root.order.add_edge(nutrient_mix, sensor_setup)
root.order.add_edge(sensor_setup, ai_training)
root.order.add_edge(ai_training, data_capture)
root.order.add_edge(data_capture, maintenance_plan)
root.order.add_edge(maintenance_plan, pest_scan)
root.order.add_edge(pest_scan, growth_monitor)
root.order.add_edge(growth_monitor, harvest_sync)
root.order.add_edge(harvest_sync, quality_test)
root.order.add_edge(quality_test, package_prep)
root.order.add_edge(package_prep, logistics_plan)