import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
site_survey = Transition(label='Site Survey')
permit_review = Transition(label='Permit Review')
design_layout = Transition(label='Design Layout')
material_sourcing = Transition(label='Material Sourcing')
irrigation_setup = Transition(label='Irrigation Setup')
sensor_install = Transition(label='Sensor Install')
structural_test = Transition(label='Structural Test')
recruit_farmers = Transition(label='Recruit Farmers')
trial_planting = Transition(label='Trial Planting')
pest_control = Transition(label='Pest Control')
soilless_prep = Transition(label='Soilless Prep')
system_calibrate = Transition(label='System Calibrate')
data_monitor = Transition(label='Data Monitor')
harvest_plan = Transition(label='Harvest Plan')
community_outreach = Transition(label='Community Outreach')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[site_survey, permit_review])
xor = OperatorPOWL(operator=Operator.XOR, children=[design_layout, material_sourcing])
xor1 = OperatorPOWL(operator=Operator.XOR, children=[irrigation_setup, sensor_install])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[structural_test, recruit_farmers])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[trial_planting, pest_control])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[soilless_prep, system_calibrate])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[data_monitor, harvest_plan])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[community_outreach, skip])
root = StrictPartialOrder(nodes=[loop, xor, xor1, xor2, xor3, xor4, xor5, xor6])
root.order.add_edge(loop, xor)
root.order.add_edge(xor, xor1)
root.order.add_edge(xor1, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)