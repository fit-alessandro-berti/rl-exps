import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_assess = Transition(label='Site Assess')
plan_layout = Transition(label='Plan Layout')
install_racks = Transition(label='Install Racks')
mix_nutrients = Transition(label='Mix Nutrients')
calibrate_sensors = Transition(label='Calibrate Sensors')
setup_lighting = Transition(label='Setup Lighting')
configure_climate = Transition(label='Configure Climate')
select_seeds = Transition(label='Select Seeds')
monitor_germinate = Transition(label='Monitor Germinate')
apply_biocontrols = Transition(label='Apply Bio-controls')
maintain_systems = Transition(label='Maintain Systems')
analyze_data = Transition(label='Analyze Data')
harvest_crops = Transition(label='Harvest Crops')
quality_check = Transition(label='Quality Check')
package_produce = Transition(label='Package Produce')
distribute_goods = Transition(label='Distribute Goods')

skip = SilentTransition()

site_assess_choice = OperatorPOWL(operator=Operator.XOR, children=[site_assess, plan_layout])
rack_choice = OperatorPOWL(operator=Operator.XOR, children=[install_racks, skip])
nutrient_choice = OperatorPOWL(operator=Operator.XOR, children=[mix_nutrients, skip])
sensor_choice = OperatorPOWL(operator=Operator.XOR, children=[calibrate_sensors, skip])
lighting_choice = OperatorPOWL(operator=Operator.XOR, children=[setup_lighting, skip])
climate_choice = OperatorPOWL(operator=Operator.XOR, children=[configure_climate, skip])
seed_choice = OperatorPOWL(operator=Operator.XOR, children=[select_seeds, skip])
germinate_choice = OperatorPOWL(operator=Operator.XOR, children=[monitor_germinate, skip])
biocontrols_choice = OperatorPOWL(operator=Operator.XOR, children=[apply_biocontrols, skip])
system_choice = OperatorPOWL(operator=Operator.XOR, children=[maintain_systems, skip])
data_choice = OperatorPOWL(operator=Operator.XOR, children=[analyze_data, skip])
harvest_choice = OperatorPOWL(operator=Operator.XOR, children=[harvest_crops, skip])
quality_choice = OperatorPOWL(operator=Operator.XOR, children=[quality_check, skip])
package_choice = OperatorPOWL(operator=Operator.XOR, children=[package_produce, skip])
distribution_choice = OperatorPOWL(operator=Operator.XOR, children=[distribute_goods, skip])

root = StrictPartialOrder(nodes=[site_assess_choice, rack_choice, nutrient_choice, sensor_choice, lighting_choice, climate_choice, seed_choice, germinate_choice, biocontrols_choice, system_choice, data_choice, harvest_choice, quality_choice, package_choice, distribution_choice])
root.order.add_edge(site_assess_choice, rack_choice)
root.order.add_edge(site_assess_choice, nutrient_choice)
root.order.add_edge(site_assess_choice, sensor_choice)
root.order.add_edge(site_assess_choice, lighting_choice)
root.order.add_edge(site_assess_choice, climate_choice)
root.order.add_edge(site_assess_choice, seed_choice)
root.order.add_edge(site_assess_choice, germinate_choice)
root.order.add_edge(site_assess_choice, biocontrols_choice)
root.order.add_edge(site_assess_choice, system_choice)
root.order.add_edge(site_assess_choice, data_choice)
root.order.add_edge(site_assess_choice, harvest_choice)
root.order.add_edge(site_assess_choice, quality_choice)
root.order.add_edge(site_assess_choice, package_choice)
root.order.add_edge(site_assess_choice, distribution_choice)