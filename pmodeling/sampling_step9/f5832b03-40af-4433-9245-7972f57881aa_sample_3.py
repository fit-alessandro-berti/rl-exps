import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

SiteSurvey = Transition(label='Site Survey')
DesignLayout = Transition(label='Design Layout')
LegalReview = Transition(label='Legal Review')
TechSourcing = Transition(label='Tech Sourcing')
StructuralBuild = Transition(label='Structural Build')
ClimateSetup = Transition(label='Climate Setup')
IrrigationInstall = Transition(label='Irrigation Install')
SensorDeploy = Transition(label='Sensor Deploy')
CropSelect = Transition(label='Crop Select')
NutrientPrep = Transition(label='Nutrient Prep')
WasteSystem = Transition(label='Waste System')
AutomationConfig = Transition(label='Automation Config')
TrialGrowth = Transition(label='Trial Growth')
DataAnalysis = Transition(label='Data Analysis')
QualityAudit = Transition(label='Quality Audit')
StakeholderMeet = Transition(label='Stakeholder Meet')
ComplianceCheck = Transition(label='Compliance Check')

skip = SilentTransition()

SiteSurveyToLegalReview = OperatorPOWL(operator=Operator.XOR, children=[SiteSurvey, LegalReview])
LegalReviewToTechSourcing = OperatorPOWL(operator=Operator.XOR, children=[LegalReview, TechSourcing])
TechSourcingToStructuralBuild = OperatorPOWL(operator=Operator.XOR, children=[TechSourcing, StructuralBuild])
StructuralBuildToClimateSetup = OperatorPOWL(operator=Operator.XOR, children=[StructuralBuild, ClimateSetup])
ClimateSetupToIrrigationInstall = OperatorPOWL(operator=Operator.XOR, children=[ClimateSetup, IrrigationInstall])
IrrigationInstallToSensorDeploy = OperatorPOWL(operator=Operator.XOR, children=[IrrigationInstall, SensorDeploy])
SensorDeployToCropSelect = OperatorPOWL(operator=Operator.XOR, children=[SensorDeploy, CropSelect])
CropSelectToNutrientPrep = OperatorPOWL(operator=Operator.XOR, children=[CropSelect, NutrientPrep])
NutrientPrepToWasteSystem = OperatorPOWL(operator=Operator.XOR, children=[NutrientPrep, WasteSystem])
WasteSystemToAutomationConfig = OperatorPOWL(operator=Operator.XOR, children=[WasteSystem, AutomationConfig])
AutomationConfigToTrialGrowth = OperatorPOWL(operator=Operator.XOR, children=[AutomationConfig, TrialGrowth])
TrialGrowthToDataAnalysis = OperatorPOWL(operator=Operator.XOR, children=[TrialGrowth, DataAnalysis])
DataAnalysisToQualityAudit = OperatorPOWL(operator=Operator.XOR, children=[DataAnalysis, QualityAudit])
QualityAuditToStakeholderMeet = OperatorPOWL(operator=Operator.XOR, children=[QualityAudit, StakeholderMeet])
StakeholderMeetToComplianceCheck = OperatorPOWL(operator=Operator.XOR, children=[StakeholderMeet, ComplianceCheck])

root = StrictPartialOrder(nodes=[SiteSurveyToLegalReview, LegalReviewToTechSourcing, TechSourcingToStructuralBuild, StructuralBuildToClimateSetup, ClimateSetupToIrrigationInstall, IrrigationInstallToSensorDeploy, SensorDeployToCropSelect, CropSelectToNutrientPrep, NutrientPrepToWasteSystem, WasteSystemToAutomationConfig, AutomationConfigToTrialGrowth, TrialGrowthToDataAnalysis, DataAnalysisToQualityAudit, QualityAuditToStakeholderMeet, StakeholderMeetToComplianceCheck])
root.order.add_edge(SiteSurveyToLegalReview, LegalReviewToTechSourcing)
root.order.add_edge(LegalReviewToTechSourcing, TechSourcingToStructuralBuild)
root.order.add_edge(TechSourcingToStructuralBuild, StructuralBuildToClimateSetup)
root.order.add_edge(StructuralBuildToClimateSetup, ClimateSetupToIrrigationInstall)
root.order.add_edge(ClimateSetupToIrrigationInstall, IrrigationInstallToSensorDeploy)
root.order.add_edge(IrrigationInstallToSensorDeploy, SensorDeployToCropSelect)
root.order.add_edge(SensorDeployToCropSelect, CropSelectToNutrientPrep)
root.order.add_edge(CropSelectToNutrientPrep, NutrientPrepToWasteSystem)
root.order.add_edge(NutrientPrepToWasteSystem, WasteSystemToAutomationConfig)
root.order.add_edge(WasteSystemToAutomationConfig, AutomationConfigToTrialGrowth)
root.order.add_edge(AutomationConfigToTrialGrowth, TrialGrowthToDataAnalysis)
root.order.add_edge(TrialGrowthToDataAnalysis, DataAnalysisToQualityAudit)
root.order.add_edge(DataAnalysisToQualityAudit, QualityAuditToStakeholderMeet)
root.order.add_edge(QualityAuditToStakeholderMeet, StakeholderMeetToComplianceCheck)

print(root)