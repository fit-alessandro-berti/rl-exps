import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

Site_Survey = Transition(label='Site Survey')
Load_Testing = Transition(label='Load Testing')
Crop_Selection = Transition(label='Crop Selection')
Soil_Preparation = Transition(label='Soil Prep')
Irrigation_Setup = Transition(label='Irrigation Setup')
Permits_Acquire = Transition(label='Permits Acquire')
Supplier_Outreach = Transition(label='Supplier Outreach')
Planting_Seedlings = Transition(label='Planting Seedlings')
Pest_Monitoring = Transition(label='Pest Monitoring')
Nutrient_Testing = Transition(label='Nutrient Testing')
Waste_Sorting = Transition(label='Waste Sorting')
Staff_Training = Transition(label='Staff Training')
Community_Meet = Transition(label='Community Meet')
Harvest_Planning = Transition(label='Harvest Planning')
Market_Launch = Transition(label='Market Launch')
Yield_Tracking = Transition(label='Yield Tracking')
skip = SilentTransition()

site_survey = OperatorPOWL(operator=Operator.XOR, children=[Site_Survey, skip])
load_testing = OperatorPOWL(operator=Operator.XOR, children=[Load_Testing, skip])
crop_selection = OperatorPOWL(operator=Operator.XOR, children=[Crop_Selection, skip])
soil_prep = OperatorPOWL(operator=Operator.XOR, children=[Soil_Preparation, skip])
irrigation_setup = OperatorPOWL(operator=Operator.XOR, children=[Irrigation_Setup, skip])
permits_acquire = OperatorPOWL(operator=Operator.XOR, children=[Permits_Acquire, skip])
supplier_outreach = OperatorPOWL(operator=Operator.XOR, children=[Supplier_Outreach, skip])
planting_seedlings = OperatorPOWL(operator=Operator.XOR, children=[Planting_Seedlings, skip])
pest_monitoring = OperatorPOWL(operator=Operator.XOR, children=[Pest_Monitoring, skip])
nutrient_testing = OperatorPOWL(operator=Operator.XOR, children=[Nutrient_Testing, skip])
waste_sorting = OperatorPOWL(operator=Operator.XOR, children=[Waste_Sorting, skip])
staff_training = OperatorPOWL(operator=Operator.XOR, children=[Staff_Training, skip])
community_meet = OperatorPOWL(operator=Operator.XOR, children=[Community_Meet, skip])
harvest_planning = OperatorPOWL(operator=Operator.XOR, children=[Harvest_Planning, skip])
market_launch = OperatorPOWL(operator=Operator.XOR, children=[Market_Launch, skip])
yield_tracking = OperatorPOWL(operator=Operator.XOR, children=[Yield_Tracking, skip])

loop1 = OperatorPOWL(operator=Operator.LOOP, children=[site_survey, load_testing, crop_selection, soil_prep, irrigation_setup, permits_acquire, supplier_outreach, planting_seedlings, pest_monitoring, nutrient_testing, waste_sorting, staff_training, community_meet, harvest_planning, market_launch, yield_tracking])

root = StrictPartialOrder(nodes=[loop1])
root.order.add_edge(loop1, site_survey)
root.order.add_edge(loop1, load_testing)
root.order.add_edge(loop1, crop_selection)
root.order.add_edge(loop1, soil_prep)
root.order.add_edge(loop1, irrigation_setup)
root.order.add_edge(loop1, permits_acquire)
root.order.add_edge(loop1, supplier_outreach)
root.order.add_edge(loop1, planting_seedlings)
root.order.add_edge(loop1, pest_monitoring)
root.order.add_edge(loop1, nutrient_testing)
root.order.add_edge(loop1, waste_sorting)
root.order.add_edge(loop1, staff_training)
root.order.add_edge(loop1, community_meet)
root.order.add_edge(loop1, harvest_planning)
root.order.add_edge(loop1, market_launch)
root.order.add_edge(loop1, yield_tracking)