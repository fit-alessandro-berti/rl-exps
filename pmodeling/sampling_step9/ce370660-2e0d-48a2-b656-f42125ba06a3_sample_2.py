import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define the POWL model
structural_check = Transition(label='Structural Check')
permit_apply = Transition(label='Permit Apply')
design_layout = Transition(label='Design Layout')
soil_prep = Transition(label='Soil Prep')
bed_install = Transition(label='Bed Install')
irrigation_setup = Transition(label='Irrigation Setup')
sensor_mount = Transition(label='Sensor Mount')
solar_connect = Transition(label='Solar Connect')
seed_order = Transition(label='Seed Order')
nutrient_mix = Transition(label='Nutrient Mix')
community_meet = Transition(label='Community Meet')
staff_train = Transition(label='Staff Train')
plant_crop = Transition(label='Plant Crop')
maintenance_plan = Transition(label='Maintenance Plan')
harvest_schedule = Transition(label='Harvest Schedule')
waste_manage = Transition(label='Waste Manage')

skip = SilentTransition()

loop_structural_check = OperatorPOWL(operator=Operator.LOOP, children=[structural_check])
loop_permit_apply = OperatorPOWL(operator=Operator.LOOP, children=[permit_apply])
loop_design_layout = OperatorPOWL(operator=Operator.LOOP, children=[design_layout])
loop_soil_prep = OperatorPOWL(operator=Operator.LOOP, children=[soil_prep])
loop_bed_install = OperatorPOWL(operator=Operator.LOOP, children=[bed_install])
loop_irrigation_setup = OperatorPOWL(operator=Operator.LOOP, children=[irrigation_setup])
loop_sensor_mount = OperatorPOWL(operator=Operator.LOOP, children=[sensor_mount])
loop_solar_connect = OperatorPOWL(operator=Operator.LOOP, children=[solar_connect])
loop_seed_order = OperatorPOWL(operator=Operator.LOOP, children=[seed_order])
loop_nutrient_mix = OperatorPOWL(operator=Operator.LOOP, children=[nutrient_mix])
loop_community_meet = OperatorPOWL(operator=Operator.LOOP, children=[community_meet])
loop_staff_train = OperatorPOWL(operator=Operator.LOOP, children=[staff_train])
loop_plant_crop = OperatorPOWL(operator=Operator.LOOP, children=[plant_crop])
loop_maintenance_plan = OperatorPOWL(operator=Operator.LOOP, children=[maintenance_plan])
loop_harvest_schedule = OperatorPOWL(operator=Operator.LOOP, children=[harvest_schedule])
loop_waste_manage = OperatorPOWL(operator=Operator.LOOP, children=[waste_manage])

xor_structural_check = OperatorPOWL(operator=Operator.XOR, children=[skip, loop_structural_check])
xor_permit_apply = OperatorPOWL(operator=Operator.XOR, children=[skip, loop_permit_apply])
xor_design_layout = OperatorPOWL(operator=Operator.XOR, children=[skip, loop_design_layout])
xor_soil_prep = OperatorPOWL(operator=Operator.XOR, children=[skip, loop_soil_prep])
xor_bed_install = OperatorPOWL(operator=Operator.XOR, children=[skip, loop_bed_install])
xor_irrigation_setup = OperatorPOWL(operator=Operator.XOR, children=[skip, loop_irrigation_setup])
xor_sensor_mount = OperatorPOWL(operator=Operator.XOR, children=[skip, loop_sensor_mount])
xor_solar_connect = OperatorPOWL(operator=Operator.XOR, children=[skip, loop_solar_connect])
xor_seed_order = OperatorPOWL(operator=Operator.XOR, children=[skip, loop_seed_order])
xor_nutrient_mix = OperatorPOWL(operator=Operator.XOR, children=[skip, loop_nutrient_mix])
xor_community_meet = OperatorPOWL(operator=Operator.XOR, children=[skip, loop_community_meet])
xor_staff_train = OperatorPOWL(operator=Operator.XOR, children=[skip, loop_staff_train])
xor_plant_crop = OperatorPOWL(operator=Operator.XOR, children=[skip, loop_plant_crop])
xor_maintenance_plan = OperatorPOWL(operator=Operator.XOR, children=[skip, loop_maintenance_plan])
xor_harvest_schedule = OperatorPOWL(operator=Operator.XOR, children=[skip, loop_harvest_schedule])
xor_waste_manage = OperatorPOWL(operator=Operator.XOR, children=[skip, loop_waste_manage])

root = StrictPartialOrder(nodes=[xor_structural_check, xor_permit_apply, xor_design_layout, xor_soil_prep, xor_bed_install, xor_irrigation_setup, xor_sensor_mount, xor_solar_connect, xor_seed_order, xor_nutrient_mix, xor_community_meet, xor_staff_train, xor_plant_crop, xor_maintenance_plan, xor_harvest_schedule, xor_waste_manage])

root.order.add_edge(xor_structural_check, loop_structural_check)
root.order.add_edge(xor_permit_apply, loop_permit_apply)
root.order.add_edge(xor_design_layout, loop_design_layout)
root.order.add_edge(xor_soil_prep, loop_soil_prep)
root.order.add_edge(xor_bed_install, loop_bed_install)
root.order.add_edge(xor_irrigation_setup, loop_irrigation_setup)
root.order.add_edge(xor_sensor_mount, loop_sensor_mount)
root.order.add_edge(xor_solar_connect, loop_solar_connect)
root.order.add_edge(xor_seed_order, loop_seed_order)
root.order.add_edge(xor_nutrient_mix, loop_nutrient_mix)
root.order.add_edge(xor_community_meet, loop_community_meet)
root.order.add_edge(xor_staff_train, loop_staff_train)
root.order.add_edge(xor_plant_crop, loop_plant_crop)
root.order.add_edge(xor_maintenance_plan, loop_maintenance_plan)
root.order.add_edge(xor_harvest_schedule, loop_harvest_schedule)
root.order.add_edge(xor_waste_manage, loop_waste_manage)

print(root)