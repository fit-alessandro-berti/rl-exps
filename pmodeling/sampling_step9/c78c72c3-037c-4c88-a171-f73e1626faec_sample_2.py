import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
design_layout = Transition(label='Design Layout')
system_build = Transition(label='System Build')
install_sensors = Transition(label='Install Sensors')
set_controls = Transition(label='Set Controls')
test_modules = Transition(label='Test Modules')
select_crops = Transition(label='Select Crops')
configure_irrigation = Transition(label='Configure Irrigation')
deploy_ai = Transition(label='Deploy AI')
monitor_pests = Transition(label='Monitor Pests')
manage_energy = Transition(label='Manage Energy')
recycle_waste = Transition(label='Recycle Waste')
train_staff = Transition(label='Train Staff')
launch_market = Transition(label='Launch Market')
engage_community = Transition(label='Engage Community')
skip = SilentTransition()

site_survey_loop = OperatorPOWL(operator=Operator.LOOP, children=[site_survey, design_layout, system_build])
design_layout_loop = OperatorPOWL(operator=Operator.LOOP, children=[design_layout, system_build, install_sensors])
system_build_loop = OperatorPOWL(operator=Operator.LOOP, children=[system_build, install_sensors, set_controls])
install_sensors_loop = OperatorPOWL(operator=Operator.LOOP, children=[install_sensors, set_controls, test_modules])
set_controls_loop = OperatorPOWL(operator=Operator.LOOP, children=[set_controls, test_modules, select_crops])
test_modules_loop = OperatorPOWL(operator=Operator.LOOP, children=[test_modules, select_crops, configure_irrigation])
select_crops_loop = OperatorPOWL(operator=Operator.LOOP, children=[select_crops, configure_irrigation, deploy_ai])
configure_irrigation_loop = OperatorPOWL(operator=Operator.LOOP, children=[configure_irrigation, deploy_ai, monitor_pests])
deploy_ai_loop = OperatorPOWL(operator=Operator.LOOP, children=[deploy_ai, monitor_pests, manage_energy])
monitor_pests_loop = OperatorPOWL(operator=Operator.LOOP, children=[monitor_pests, manage_energy, recycle_waste])
manage_energy_loop = OperatorPOWL(operator=Operator.LOOP, children=[manage_energy, recycle_waste, train_staff])
recycle_waste_loop = OperatorPOWL(operator=Operator.LOOP, children=[recycle_waste, train_staff, launch_market])
train_staff_loop = OperatorPOWL(operator=Operator.LOOP, children=[train_staff, launch_market, engage_community])
launch_market_loop = OperatorPOWL(operator=Operator.LOOP, children=[launch_market, engage_community, skip])

root = StrictPartialOrder(nodes=[site_survey_loop, design_layout_loop, system_build_loop, install_sensors_loop, set_controls_loop, test_modules_loop, select_crops_loop, configure_irrigation_loop, deploy_ai_loop, monitor_pests_loop, manage_energy_loop, recycle_waste_loop, train_staff_loop, launch_market_loop, engage_community])

root.order.add_edge(site_survey_loop, design_layout_loop)
root.order.add_edge(design_layout_loop, system_build_loop)
root.order.add_edge(system_build_loop, install_sensors_loop)
root.order.add_edge(install_sensors_loop, set_controls_loop)
root.order.add_edge(set_controls_loop, test_modules_loop)
root.order.add_edge(test_modules_loop, select_crops_loop)
root.order.add_edge(select_crops_loop, configure_irrigation_loop)
root.order.add_edge(configure_irrigation_loop, deploy_ai_loop)
root.order.add_edge(deploy_ai_loop, monitor_pests_loop)
root.order.add_edge(monitor_pests_loop, manage_energy_loop)
root.order.add_edge(manage_energy_loop, recycle_waste_loop)
root.order.add_edge(recycle_waste_loop, train_staff_loop)
root.order.add_edge(train_staff_loop, launch_market_loop)
root.order.add_edge(launch_market_loop, engage_community)