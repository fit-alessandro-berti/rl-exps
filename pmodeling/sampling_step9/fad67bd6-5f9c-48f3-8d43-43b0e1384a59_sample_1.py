import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define the transitions (activities)
RegulatoryCheck = Transition(label='Regulatory Check')
PathDesign = Transition(label='Path Design')
WeatherSync = Transition(label='Weather Sync')
TrafficAlign = Transition(label='Traffic Align')
PackageSecure = Transition(label='Package Secure')
CustomerAlert = Transition(label='Customer Alert')
DroneAssemble = Transition(label='Drone Assemble')
FlightTest = Transition(label='Flight Test')
DataMonitor = Transition(label='Data Monitor')
SafetyAudit = Transition(label='Safety Audit')
EmergencyPlan = Transition(label='Emergency Plan')
MaintenancePlan = Transition(label='Maintenance Plan')
BatteryCycle = Transition(label='Battery Cycle')
RouteUpdate = Transition(label='Route Update')
PerformanceReview = Transition(label='Performance Review')
ImpactStudy = Transition(label='Impact Study')
ComplianceReview = Transition(label='Compliance Review')

# Define silent transitions
Skip = SilentTransition()

# Define the loop nodes
RegulatoryCheckLoop = OperatorPOWL(operator=Operator.LOOP, children=[RegulatoryCheck])
PathDesignLoop = OperatorPOWL(operator=Operator.LOOP, children=[PathDesign])
WeatherSyncLoop = OperatorPOWL(operator=Operator.LOOP, children=[WeatherSync])
TrafficAlignLoop = OperatorPOWL(operator=Operator.LOOP, children=[TrafficAlign])
PackageSecureLoop = OperatorPOWL(operator=Operator.LOOP, children=[PackageSecure])
CustomerAlertLoop = OperatorPOWL(operator=Operator.LOOP, children=[CustomerAlert])
DroneAssembleLoop = OperatorPOWL(operator=Operator.LOOP, children=[DroneAssemble])
FlightTestLoop = OperatorPOWL(operator=Operator.LOOP, children=[FlightTest])
DataMonitorLoop = OperatorPOWL(operator=Operator.LOOP, children=[DataMonitor])
SafetyAuditLoop = OperatorPOWL(operator=Operator.LOOP, children=[SafetyAudit])
EmergencyPlanLoop = OperatorPOWL(operator=Operator.LOOP, children=[EmergencyPlan])
MaintenancePlanLoop = OperatorPOWL(operator=Operator.LOOP, children=[MaintenancePlan])
BatteryCycleLoop = OperatorPOWL(operator=Operator.LOOP, children=[BatteryCycle])
RouteUpdateLoop = OperatorPOWL(operator=Operator.LOOP, children=[RouteUpdate])
PerformanceReviewLoop = OperatorPOWL(operator=Operator.LOOP, children=[PerformanceReview])
ImpactStudyLoop = OperatorPOWL(operator=Operator.LOOP, children=[ImpactStudy])
ComplianceReviewLoop = OperatorPOWL(operator=Operator.LOOP, children=[ComplianceReview])

# Define the exclusive choice nodes
RegulatoryCheckChoice = OperatorPOWL(operator=Operator.XOR, children=[RegulatoryCheckLoop, Skip])
PathDesignChoice = OperatorPOWL(operator=Operator.XOR, children=[PathDesignLoop, Skip])
WeatherSyncChoice = OperatorPOWL(operator=Operator.XOR, children=[WeatherSyncLoop, Skip])
TrafficAlignChoice = OperatorPOWL(operator=Operator.XOR, children=[TrafficAlignLoop, Skip])
PackageSecureChoice = OperatorPOWL(operator=Operator.XOR, children=[PackageSecureLoop, Skip])
CustomerAlertChoice = OperatorPOWL(operator=Operator.XOR, children=[CustomerAlertLoop, Skip])
DroneAssembleChoice = OperatorPOWL(operator=Operator.XOR, children=[DroneAssembleLoop, Skip])
FlightTestChoice = OperatorPOWL(operator=Operator.XOR, children=[FlightTestLoop, Skip])
DataMonitorChoice = OperatorPOWL(operator=Operator.XOR, children=[DataMonitorLoop, Skip])
SafetyAuditChoice = OperatorPOWL(operator=Operator.XOR, children=[SafetyAuditLoop, Skip])
EmergencyPlanChoice = OperatorPOWL(operator=Operator.XOR, children=[EmergencyPlanLoop, Skip])
MaintenancePlanChoice = OperatorPOWL(operator=Operator.XOR, children=[MaintenancePlanLoop, Skip])
BatteryCycleChoice = OperatorPOWL(operator=Operator.XOR, children=[BatteryCycleLoop, Skip])
RouteUpdateChoice = OperatorPOWL(operator=Operator.XOR, children=[RouteUpdateLoop, Skip])
PerformanceReviewChoice = OperatorPOWL(operator=Operator.XOR, children=[PerformanceReviewLoop, Skip])
ImpactStudyChoice = OperatorPOWL(operator=Operator.XOR, children=[ImpactStudyLoop, Skip])
ComplianceReviewChoice = OperatorPOWL(operator=Operator.XOR, children=[ComplianceReviewLoop, Skip])

# Define the root node
root = StrictPartialOrder(nodes=[RegulatoryCheckChoice, PathDesignChoice, WeatherSyncChoice, TrafficAlignChoice, PackageSecureChoice, CustomerAlertChoice, DroneAssembleChoice, FlightTestChoice, DataMonitorChoice, SafetyAuditChoice, EmergencyPlanChoice, MaintenancePlanChoice, BatteryCycleChoice, RouteUpdateChoice, PerformanceReviewChoice, ImpactStudyChoice, ComplianceReviewChoice])
root.order.add_edge(RegulatoryCheckChoice, PathDesignChoice)
root.order.add_edge(PathDesignChoice, WeatherSyncChoice)
root.order.add_edge(WeatherSyncChoice, TrafficAlignChoice)
root.order.add_edge(TrafficAlignChoice, PackageSecureChoice)
root.order.add_edge(PackageSecureChoice, CustomerAlertChoice)
root.order.add_edge(CustomerAlertChoice, DroneAssembleChoice)
root.order.add_edge(DroneAssembleChoice, FlightTestChoice)
root.order.add_edge(FlightTestChoice, DataMonitorChoice)
root.order.add_edge(DataMonitorChoice, SafetyAuditChoice)
root.order.add_edge(SafetyAuditChoice, EmergencyPlanChoice)
root.order.add_edge(EmergencyPlanChoice, MaintenancePlanChoice)
root.order.add_edge(MaintenancePlanChoice, BatteryCycleChoice)
root.order.add_edge(BatteryCycleChoice, RouteUpdateChoice)
root.order.add_edge(RouteUpdateChoice, PerformanceReviewChoice)
root.order.add_edge(PerformanceReviewChoice, ImpactStudyChoice)
root.order.add_edge(ImpactStudyChoice, ComplianceReviewChoice)