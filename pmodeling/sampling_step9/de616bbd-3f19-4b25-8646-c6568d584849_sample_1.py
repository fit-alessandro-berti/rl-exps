import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
site_analysis = Transition(label='Site Analysis')
structural_check = Transition(label='Structural Check')
system_design = Transition(label='System Design')
hydroponics_setup = Transition(label='Hydroponics Setup')
lighting_install = Transition(label='Lighting Install')
sensor_install = Transition(label='Sensor Install')
climate_control = Transition(label='Climate Control')
nutrient_monitor = Transition(label='Nutrient Monitor')
seed_selection = Transition(label='Seed Selection')
germination_start = Transition(label='Germination Start')
auto_planting = Transition(label='Auto Planting')
growth_monitoring = Transition(label='Growth Monitoring')
ai_analytics = Transition(label='AI Analytics')
robotic_harvest = Transition(label='Robotic Harvest')
packaging = Transition(label='Packaging')
trace_labeling = Transition(label='Trace Labeling')
logistics_plan = Transition(label='Logistics Plan')
skip = SilentTransition()
site_analysis_structural_check = OperatorPOWL(operator=Operator.XOR, children=[site_analysis, structural_check])
system_design_hydroponics = OperatorPOWL(operator=Operator.XOR, children=[system_design, hydroponics_setup])
system_design_lighting = OperatorPOWL(operator=Operator.XOR, children=[system_design, lighting_install])
system_design_sensor = OperatorPOWL(operator=Operator.XOR, children=[system_design, sensor_install])
system_design_climate = OperatorPOWL(operator=Operator.XOR, children=[system_design, climate_control])
system_design_nutrient = OperatorPOWL(operator=Operator.XOR, children=[system_design, nutrient_monitor])
seed_selection_germination = OperatorPOWL(operator=Operator.XOR, children=[seed_selection, germination_start])
auto_planting_growth = OperatorPOWL(operator=Operator.XOR, children=[auto_planting, growth_monitoring])
ai_analytics_harvest = OperatorPOWL(operator=Operator.XOR, children=[ai_analytics, robotic_harvest])
packaging_labeling = OperatorPOWL(operator=Operator.XOR, children=[packaging, trace_labeling])
logistics_plan_delivery = OperatorPOWL(operator=Operator.XOR, children=[logistics_plan, skip])
root = StrictPartialOrder(nodes=[site_analysis_structural_check, system_design_hydroponics, system_design_lighting, system_design_sensor, system_design_climate, system_design_nutrient, seed_selection_germination, auto_planting_growth, ai_analytics_harvest, packaging_labeling, logistics_plan_delivery])
root.order.add_edge(site_analysis_structural_check, system_design_hydroponics)
root.order.add_edge(site_analysis_structural_check, system_design_lighting)
root.order.add_edge(site_analysis_structural_check, system_design_sensor)
root.order.add_edge(site_analysis_structural_check, system_design_climate)
root.order.add_edge(site_analysis_structural_check, system_design_nutrient)
root.order.add_edge(system_design_hydroponics, seed_selection_germination)
root.order.add_edge(system_design_lighting, seed_selection_germination)
root.order.add_edge(system_design_sensor, seed_selection_germination)
root.order.add_edge(system_design_climate, seed_selection_germination)
root.order.add_edge(system_design_nutrient, seed_selection_germination)
root.order.add_edge(seed_selection_germination, auto_planting_growth)
root.order.add_edge(system_design_hydroponics, auto_planting_growth)
root.order.add_edge(system_design_lighting, auto_planting_growth)
root.order.add_edge(system_design_sensor, auto_planting_growth)
root.order.add_edge(system_design_climate, auto_planting_growth)
root.order.add_edge(system_design_nutrient, auto_planting_growth)
root.order.add_edge(auto_planting_growth, ai_analytics_harvest)
root.order.add_edge(system_design_hydroponics, ai_analytics_harvest)
root.order.add_edge(system_design_lighting, ai_analytics_harvest)
root.order.add_edge(system_design_sensor, ai_analytics_harvest)
root.order.add_edge(system_design_climate, ai_analytics_harvest)
root.order.add_edge(system_design_nutrient, ai_analytics_harvest)
root.order.add_edge(ai_analytics_harvest, packaging_labeling)
root.order.add_edge(system_design_hydroponics, packaging_labeling)
root.order.add_edge(system_design_lighting, packaging_labeling)
root.order.add_edge(system_design_sensor, packaging_labeling)
root.order.add_edge(system_design_climate, packaging_labeling)
root.order.add_edge(system_design_nutrient, packaging_labeling)
root.order.add_edge(packaging_labeling, logistics_plan_delivery)
root.order.add_edge(system_design_hydroponics, logistics_plan_delivery)
root.order.add_edge(system_design_lighting, logistics_plan_delivery)
root.order.add_edge(system_design_sensor, logistics_plan_delivery)
root.order.add_edge(system_design_climate, logistics_plan_delivery)
root.order.add_edge(system_design_nutrient, logistics_plan_delivery)
root.order.add_edge(ai_analytics_harvest, logistics_plan_delivery)