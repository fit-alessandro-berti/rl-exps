import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

SiteSurvey = Transition(label='Site Survey')
FloraMapping = Transition(label='Flora Mapping')
HiveSetup = Transition(label='Hive Setup')
SensorInstall = Transition(label='Sensor Install')
HealthCheck = Transition(label='Health Check')
PestControl = Transition(label='Pest Control')
DataLogging = Transition(label='Data Logging')
CommunityMeet = Transition(label='Community Meet')
WorkshopPlan = Transition(label='Workshop Plan')
HoneyExtract = Transition(label='Honey Extract')
QualityTest = Transition(label='Quality Test')
Packaging = Transition(label='Packaging')
MarketSetup = Transition(label='Market Setup')
SalesReport = Transition(label='Sales Report')
RegulationCheck = Transition(label='Regulation Check')
WasteManage = Transition(label='Waste Manage')
SeasonalReview = Transition(label='Seasonal Review')

skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[SiteSurvey, FloraMapping])
xor1 = OperatorPOWL(operator=Operator.XOR, children=[HiveSetup, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[SensorInstall, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[HealthCheck, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[PestControl, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[DataLogging, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[CommunityMeet, skip])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[WorkshopPlan, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[HoneyExtract, skip])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[QualityTest, skip])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[Packaging, skip])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[MarketSetup, skip])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[SalesReport, skip])
xor13 = OperatorPOWL(operator=Operator.XOR, children=[RegulationCheck, skip])
xor14 = OperatorPOWL(operator=Operator.XOR, children=[WasteManage, skip])
xor15 = OperatorPOWL(operator=Operator.XOR, children=[SeasonalReview, skip])

root = StrictPartialOrder(nodes=[loop, xor1, xor2, xor3, xor4, xor5, xor6, xor7, xor8, xor9, xor10, xor11, xor12, xor13, xor14, xor15])
root.order.add_edge(loop, xor1)
root.order.add_edge(loop, xor2)
root.order.add_edge(loop, xor3)
root.order.add_edge(loop, xor4)
root.order.add_edge(loop, xor5)
root.order.add_edge(loop, xor6)
root.order.add_edge(loop, xor7)
root.order.add_edge(loop, xor8)
root.order.add_edge(loop, xor9)
root.order.add_edge(loop, xor10)
root.order.add_edge(loop, xor11)
root.order.add_edge(loop, xor12)
root.order.add_edge(loop, xor13)
root.order.add_edge(loop, xor14)
root.order.add_edge(loop, xor15)