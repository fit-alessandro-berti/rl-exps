import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

ClientConsult = Transition(label='Client Consult')
SpecAnalysis = Transition(label='Spec Analysis')
ModuleSelect = Transition(label='Module Select')
ComponentOrder = Transition(label='Component Order')
PartsInspect = Transition(label='Parts Inspect')
FrameAssemble = Transition(label='Frame Assemble')
SensorInstall = Transition(label='Sensor Install')
MotorAttach = Transition(label='Motor Attach')
WiringConnect = Transition(label='Wiring Connect')
SoftwareUpload = Transition(label='Software Upload')
CalibrationTest = Transition(label='Calibration Test')
FlightSimulate = Transition(label='Flight Simulate')
QualityReview = Transition(label='Quality Review')
UserTrain = Transition(label='User Train')
RemoteSetup = Transition(label='Remote Setup')
FeedbackCollect = Transition(label='Feedback Collect')
SupportSchedule = Transition(label='Support Schedule')

skip = SilentTransition()

loop = OperatorPOWL(operator=Operator.LOOP, children=[ClientConsult, SpecAnalysis])
xor = OperatorPOWL(operator=Operator.XOR, children=[ModuleSelect, ComponentOrder])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[PartsInspect, FrameAssemble])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[SensorInstall, MotorAttach])
loop3 = OperatorPOWL(operator=Operator.LOOP, children=[WiringConnect, SoftwareUpload])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[CalibrationTest, FlightSimulate])
loop4 = OperatorPOWL(operator=Operator.LOOP, children=[QualityReview, UserTrain])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[RemoteSetup, FeedbackCollect])
loop5 = OperatorPOWL(operator=Operator.LOOP, children=[SupportSchedule, FeedbackCollect])

root = StrictPartialOrder(nodes=[loop, xor, loop2, xor2, loop3, xor3, loop4, xor4, loop5])
root.order.add_edge(loop, xor)
root.order.add_edge(xor, loop2)
root.order.add_edge(loop2, xor2)
root.order.add_edge(xor2, loop3)
root.order.add_edge(loop3, xor3)
root.order.add_edge(xor3, loop4)
root.order.add_edge(loop4, xor4)
root.order.add_edge(xor4, loop5)
root.order.add_edge(loop5, FeedbackCollect)