import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

MilkSourcing = Transition(label='Milk Sourcing')
QualityTesting = Transition(label='Quality Testing')
BatchSelection = Transition(label='Batch Selection')
CurdPreparation = Transition(label='Curd Preparation')
PressingCheese = Transition(label='Pressing Cheese')
AgingControl = Transition(label='Aging Control')
FlavorProfiling = Transition(label='Flavor Profiling')
PackagingPrep = Transition(label='Packaging Prep')
ClimatePacking = Transition(label='Climate Packing')
ExportLicensing = Transition(label='Export Licensing')
CustomsFiling = Transition(label='Customs Filing')
FreightBooking = Transition(label='Freight Booking')
ColdStorage = Transition(label='Cold Storage')
TransportTracking = Transition(label='Transport Tracking')
RetailDelivery = Transition(label='Retail Delivery')
FeedbackCollection = Transition(label='Feedback Collection')

skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[MilkSourcing, QualityTesting])
xor = OperatorPOWL(operator=Operator.XOR, children=[BatchSelection, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[CurdPreparation, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[PressingCheese, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[AgingControl, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[FlavorProfiling, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[PackagingPrep, skip])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[ClimatePacking, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[ExportLicensing, skip])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[CustomsFiling, skip])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[FreightBooking, skip])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[ColdStorage, skip])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[TransportTracking, skip])
xor13 = OperatorPOWL(operator=Operator.XOR, children=[RetailDelivery, skip])
xor14 = OperatorPOWL(operator=Operator.XOR, children=[FeedbackCollection, skip])

root = StrictPartialOrder(nodes=[loop, xor, xor2, xor3, xor4, xor5, xor6, xor7, xor8, xor9, xor10, xor11, xor12, xor13, xor14])
root.order.add_edge(loop, xor)
root.order.add_edge(xor, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor6, xor7)
root.order.add_edge(xor7, xor8)
root.order.add_edge(xor8, xor9)
root.order.add_edge(xor9, xor10)
root.order.add_edge(xor10, xor11)
root.order.add_edge(xor11, xor12)
root.order.add_edge(xor12, xor13)
root.order.add_edge(xor13, xor14)