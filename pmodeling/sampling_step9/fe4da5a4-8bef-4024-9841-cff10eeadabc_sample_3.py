import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

PermitSecuring = Transition(label='Permit Securing')
StructureCheck = Transition(label='Structure Check')
SoilTesting = Transition(label='Soil Testing')
WaterAnalysis = Transition(label='Water Analysis')
MaterialSourcing = Transition(label='Material Sourcing')
PlanterSetup = Transition(label='Planter Setup')
SensorInstall = Transition(label='Sensor Install')
IrrigationSetup = Transition(label='Irrigation Setup')
VendorLiaison = Transition(label='Vendor Liaison')
StaffTraining = Transition(label='Staff Training')
PestControl = Transition(label='Pest Control')
ProduceMarketing = Transition(label='Produce Marketing')
CropRotation = Transition(label='Crop Rotation')
HealthAudit = Transition(label='Health Audit')
WasteComposting = Transition(label='Waste Composting')

skip = SilentTransition()

permit_choice = OperatorPOWL(operator=Operator.XOR, children=[PermitSecuring, skip])
structure_choice = OperatorPOWL(operator=Operator.XOR, children=[StructureCheck, skip])
soil_choice = OperatorPOWL(operator=Operator.XOR, children=[SoilTesting, skip])
water_choice = OperatorPOWL(operator=Operator.XOR, children=[WaterAnalysis, skip])
material_choice = OperatorPOWL(operator=Operator.XOR, children=[MaterialSourcing, skip])
planter_choice = OperatorPOWL(operator=Operator.XOR, children=[PlanterSetup, skip])
sensor_choice = OperatorPOWL(operator=Operator.XOR, children=[SensorInstall, skip])
irrigation_choice = OperatorPOWL(operator=Operator.XOR, children=[IrrigationSetup, skip])
vendor_choice = OperatorPOWL(operator=Operator.XOR, children=[VendorLiaison, skip])
training_choice = OperatorPOWL(operator=Operator.XOR, children=[StaffTraining, skip])
pest_choice = OperatorPOWL(operator=Operator.XOR, children=[PestControl, skip])
marketing_choice = OperatorPOWL(operator=Operator.XOR, children=[ProduceMarketing, skip])
rotation_choice = OperatorPOWL(operator=Operator.XOR, children=[CropRotation, skip])
audit_choice = OperatorPOWL(operator=Operator.XOR, children=[HealthAudit, skip])
composting_choice = OperatorPOWL(operator=Operator.XOR, children=[WasteComposting, skip])

root = StrictPartialOrder(nodes=[permit_choice, structure_choice, soil_choice, water_choice, material_choice, planter_choice, sensor_choice, irrigation_choice, vendor_choice, training_choice, pest_choice, marketing_choice, rotation_choice, audit_choice, composting_choice])
root.order.add_edge(permit_choice, structure_choice)
root.order.add_edge(permit_choice, soil_choice)
root.order.add_edge(permit_choice, water_choice)
root.order.add_edge(permit_choice, material_choice)
root.order.add_edge(structure_choice, planter_choice)
root.order.add_edge(structure_choice, sensor_choice)
root.order.add_edge(structure_choice, irrigation_choice)
root.order.add_edge(material_choice, vendor_choice)
root.order.add_edge(training_choice, pest_choice)
root.order.add_edge(marketing_choice, rotation_choice)
root.order.add_edge(audit_choice, composting_choice)