import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define the transitions
initial_audit = Transition(label='Initial Audit')
artist_review = Transition(label='Artist Review')
material_check = Transition(label='Material Check')
condition_scan = Transition(label='Condition Scan')
ownership_verify = Transition(label='Ownership Verify')
appraisal_update = Transition(label='Appraisal Update')
restoration_plan = Transition(label='Restoration Plan')
restoration_track = Transition(label='Restoration Track')
logistics_book = Transition(label='Logistics Book')
shipping_monitor = Transition(label='Shipping Monitor')
customs_clear = Transition(label='Customs Clear')
legal_compliance = Transition(label='Legal Compliance')
ledger_update = Transition(label='Ledger Update')
exhibition_setup = Transition(label='Exhibition Setup')
public_showcase = Transition(label='Public Showcase')
archival_prep = Transition(label='Archival Prep')
final_report = Transition(label='Final Report')

# Define the silent transitions
skip_initial_audit = SilentTransition()
skip_artist_review = SilentTransition()
skip_material_check = SilentTransition()
skip_condition_scan = SilentTransition()
skip_ownership_verify = SilentTransition()
skip_appraisal_update = SilentTransition()
skip_restoration_plan = SilentTransition()
skip_restoration_track = SilentTransition()
skip_logistics_book = SilentTransition()
skip_shipping_monitor = SilentTransition()
skip_customs_clear = SilentTransition()
skip_legal_compliance = SilentTransition()
skip_ledger_update = SilentTransition()
skip_exhibition_setup = SilentTransition()
skip_public_showcase = SilentTransition()
skip_archival_prep = SilentTransition()
skip_final_report = SilentTransition()

# Define the loop nodes
initial_audit_loop = OperatorPOWL(operator=Operator.LOOP, children=[initial_audit, skip_initial_audit])
artist_review_loop = OperatorPOWL(operator=Operator.LOOP, children=[artist_review, skip_artist_review])
material_check_loop = OperatorPOWL(operator=Operator.LOOP, children=[material_check, skip_material_check])
condition_scan_loop = OperatorPOWL(operator=Operator.LOOP, children=[condition_scan, skip_condition_scan])
ownership_verify_loop = OperatorPOWL(operator=Operator.LOOP, children=[ownership_verify, skip_ownership_verify])
appraisal_update_loop = OperatorPOWL(operator=Operator.LOOP, children=[appraisal_update, skip_appraisal_update])
restoration_plan_loop = OperatorPOWL(operator=Operator.LOOP, children=[restoration_plan, skip_restoration_plan])
restoration_track_loop = OperatorPOWL(operator=Operator.LOOP, children=[restoration_track, skip_restoration_track])
logistics_book_loop = OperatorPOWL(operator=Operator.LOOP, children=[logistics_book, skip_logistics_book])
shipping_monitor_loop = OperatorPOWL(operator=Operator.LOOP, children=[shipping_monitor, skip_shipping_monitor])
customs_clear_loop = OperatorPOWL(operator=Operator.LOOP, children=[customs_clear, skip_customs_clear])
legal_compliance_loop = OperatorPOWL(operator=Operator.LOOP, children=[legal_compliance, skip_legal_compliance])
ledger_update_loop = OperatorPOWL(operator=Operator.LOOP, children=[ledger_update, skip_ledger_update])
exhibition_setup_loop = OperatorPOWL(operator=Operator.LOOP, children=[exhibition_setup, skip_exhibition_setup])
public_showcase_loop = OperatorPOWL(operator=Operator.LOOP, children=[public_showcase, skip_public_showcase])
archival_prep_loop = OperatorPOWL(operator=Operator.LOOP, children=[archival_prep, skip_archival_prep])
final_report_loop = OperatorPOWL(operator=Operator.LOOP, children=[final_report, skip_final_report])

# Define the XOR nodes
xor_initial_audit = OperatorPOWL(operator=Operator.XOR, children=[initial_audit_loop, skip_initial_audit])
xor_artist_review = OperatorPOWL(operator=Operator.XOR, children=[artist_review_loop, skip_artist_review])
xor_material_check = OperatorPOWL(operator=Operator.XOR, children=[material_check_loop, skip_material_check])
xor_condition_scan = OperatorPOWL(operator=Operator.XOR, children=[condition_scan_loop, skip_condition_scan])
xor_ownership_verify = OperatorPOWL(operator=Operator.XOR, children=[ownership_verify_loop, skip_ownership_verify])
xor_appraisal_update = OperatorPOWL(operator=Operator.XOR, children=[appraisal_update_loop, skip_appraisal_update])
xor_restoration_plan = OperatorPOWL(operator=Operator.XOR, children=[restoration_plan_loop, skip_restoration_plan])
xor_restoration_track = OperatorPOWL(operator=Operator.XOR, children=[restoration_track_loop, skip_restoration_track])
xor_logistics_book = OperatorPOWL(operator=Operator.XOR, children=[logistics_book_loop, skip_logistics_book])
xor_shipping_monitor = OperatorPOWL(operator=Operator.XOR, children=[shipping_monitor_loop, skip_shipping_monitor])
xor_customs_clear = OperatorPOWL(operator=Operator.XOR, children=[customs_clear_loop, skip_customs_clear])
xor_legal_compliance = OperatorPOWL(operator=Operator.XOR, children=[legal_compliance_loop, skip_legal_compliance])
xor_ledger_update = OperatorPOWL(operator=Operator.XOR, children=[ledger_update_loop, skip_ledger_update])
xor_exhibition_setup = OperatorPOWL(operator=Operator.XOR, children=[exhibition_setup_loop, skip_exhibition_setup])
xor_public_showcase = OperatorPOWL(operator=Operator.XOR, children=[public_showcase_loop, skip_public_showcase])
xor_archival_prep = OperatorPOWL(operator=Operator.XOR, children=[archival_prep_loop, skip_archival_prep])
xor_final_report = OperatorPOWL(operator=Operator.XOR, children=[final_report_loop, skip_final_report])

# Define the root POWL model
root = StrictPartialOrder(nodes=[xor_initial_audit, xor_artist_review, xor_material_check, xor_condition_scan, xor_ownership_verify, xor_appraisal_update, xor_restoration_plan, xor_restoration_track, xor_logistics_book, xor_shipping_monitor, xor_customs_clear, xor_legal_compliance, xor_ledger_update, xor_exhibition_setup, xor_public_showcase, xor_archival_prep, xor_final_report])
root.order.add_edge(xor_initial_audit, xor_artist_review)
root.order.add_edge(xor_artist_review, xor_material_check)
root.order.add_edge(xor_material_check, xor_condition_scan)
root.order.add_edge(xor_condition_scan, xor_ownership_verify)
root.order.add_edge(xor_ownership_verify, xor_appraisal_update)
root.order.add_edge(xor_appraisal_update, xor_restoration_plan)
root.order.add_edge(xor_restoration_plan, xor_restoration_track)
root.order.add_edge(xor_restoration_track, xor_logistics_book)
root.order.add_edge(xor_logistics_book, xor_shipping_monitor)
root.order.add_edge(xor_shipping_monitor, xor_customs_clear)
root.order.add_edge(xor_customs_clear, xor_legal_compliance)
root.order.add_edge(xor_legal_compliance, xor_ledger_update)
root.order.add_edge(xor_ledger_update, xor_exhibition_setup)
root.order.add_edge(xor_exhibition_setup, xor_public_showcase)
root.order.add_edge(xor_public_showcase, xor_archival_prep)
root.order.add_edge(xor_archival_prep, xor_final_report)

# Print the root POWL model
print(root)