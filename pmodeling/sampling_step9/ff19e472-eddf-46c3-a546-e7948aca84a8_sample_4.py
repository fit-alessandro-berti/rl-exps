import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

SiteSurvey = Transition(label='Site Survey')
DesignLayout = Transition(label='Design Layout')
InstallModules = Transition(label='Install Modules')
CalibrateClimate = Transition(label='Calibrate Climate')
PrepareNutrients = Transition(label='Prepare Nutrients')
SelectSeeds = Transition(label='Select Seeds')
StartGermination = Transition(label='Start Germination')
DeploySensors = Transition(label='Deploy Sensors')
MonitorGrowth = Transition(label='Monitor Growth')
ManagePests = Transition(label='Manage Pests')
ScheduleHarvest = Transition(label='Schedule Harvest')
ProcessWaste = Transition(label='Process Waste')
OptimizeEnergy = Transition(label='Optimize Energy')
ConductTraining = Transition(label='Conduct Training')
UpdateRecords = Transition(label='Update Records')
ReviewPerformance = Transition(label='Review Performance')

skip = SilentTransition()

SiteSurveyChoice = OperatorPOWL(operator=Operator.XOR, children=[SiteSurvey, skip])
DesignLayoutChoice = OperatorPOWL(operator=Operator.XOR, children=[DesignLayout, skip])
InstallModulesChoice = OperatorPOWL(operator=Operator.XOR, children=[InstallModules, skip])
CalibrateClimateChoice = OperatorPOWL(operator=Operator.XOR, children=[CalibrateClimate, skip])
PrepareNutrientsChoice = OperatorPOWL(operator=Operator.XOR, children=[PrepareNutrients, skip])
SelectSeedsChoice = OperatorPOWL(operator=Operator.XOR, children=[SelectSeeds, skip])
StartGerminationChoice = OperatorPOWL(operator=Operator.XOR, children=[StartGermination, skip])
DeploySensorsChoice = OperatorPOWL(operator=Operator.XOR, children=[DeploySensors, skip])
MonitorGrowthChoice = OperatorPOWL(operator=Operator.XOR, children=[MonitorGrowth, skip])
ManagePestsChoice = OperatorPOWL(operator=Operator.XOR, children=[ManagePests, skip])
ScheduleHarvestChoice = OperatorPOWL(operator=Operator.XOR, children=[ScheduleHarvest, skip])
ProcessWasteChoice = OperatorPOWL(operator=Operator.XOR, children=[ProcessWaste, skip])
OptimizeEnergyChoice = OperatorPOWL(operator=Operator.XOR, children=[OptimizeEnergy, skip])
ConductTrainingChoice = OperatorPOWL(operator=Operator.XOR, children=[ConductTraining, skip])
UpdateRecordsChoice = OperatorPOWL(operator=Operator.XOR, children=[UpdateRecords, skip])
ReviewPerformanceChoice = OperatorPOWL(operator=Operator.XOR, children=[ReviewPerformance, skip])

loop = OperatorPOWL(operator=Operator.LOOP, children=[SiteSurveyChoice, DesignLayoutChoice, InstallModulesChoice, CalibrateClimateChoice, PrepareNutrientsChoice, SelectSeedsChoice, StartGerminationChoice, DeploySensorsChoice, MonitorGrowthChoice, ManagePestsChoice, ScheduleHarvestChoice, ProcessWasteChoice, OptimizeEnergyChoice, ConductTrainingChoice, UpdateRecordsChoice, ReviewPerformanceChoice])

root = StrictPartialOrder(nodes=[loop])
root.order.add_edge(loop, SiteSurveyChoice)
root.order.add_edge(loop, DesignLayoutChoice)
root.order.add_edge(loop, InstallModulesChoice)
root.order.add_edge(loop, CalibrateClimateChoice)
root.order.add_edge(loop, PrepareNutrientsChoice)
root.order.add_edge(loop, SelectSeedsChoice)
root.order.add_edge(loop, StartGerminationChoice)
root.order.add_edge(loop, DeploySensorsChoice)
root.order.add_edge(loop, MonitorGrowthChoice)
root.order.add_edge(loop, ManagePestsChoice)
root.order.add_edge(loop, ScheduleHarvestChoice)
root.order.add_edge(loop, ProcessWasteChoice)
root.order.add_edge(loop, OptimizeEnergyChoice)
root.order.add_edge(loop, ConductTrainingChoice)
root.order.add_edge(loop, UpdateRecordsChoice)
root.order.add_edge(loop, ReviewPerformanceChoice)