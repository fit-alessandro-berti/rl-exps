import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

Site_Survey = Transition(label='Site Survey')
Structural_Check = Transition(label='Structural Check')
Resource_Sourcing = Transition(label='Resource Sourcing')
System_Install = Transition(label='System Install')
Lighting_Setup = Transition(label='Lighting Setup')
Irrigation_Setup = Transition(label='Irrigation Setup')
Stakeholder_Meet = Transition(label='Stakeholder Meet')
Volunteer_Train = Transition(label='Volunteer Train')
Regulation_Review = Transition(label='Regulation Review')
Crop_Selection = Transition(label='Crop Selection')
Planting_Phase = Transition(label='Planting Phase')
Climate_Control = Transition(label='Climate Control')
Growth_Monitor = Transition(label='Growth Monitor')
Data_Logging = Transition(label='Data Logging')
Harvest_Event = Transition(label='Harvest Event')
Waste_Manage = Transition(label='Waste Manage')
Feedback_Collect = Transition(label='Feedback Collect')

skip = SilentTransition()
loop1 = OperatorPOWL(operator=Operator.LOOP, children=[Structural_Check, Resource_Sourcing, System_Install])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[Lighting_Setup, Irrigation_Setup])
loop3 = OperatorPOWL(operator=Operator.LOOP, children=[Stakeholder_Meet, Volunteer_Train])
loop4 = OperatorPOWL(operator=Operator.LOOP, children=[Regulation_Review, Crop_Selection])
loop5 = OperatorPOWL(operator=Operator.LOOP, children=[Planting_Phase, Climate_Control])
loop6 = OperatorPOWL(operator=Operator.LOOP, children=[Growth_Monitor, Data_Logging])
loop7 = OperatorPOWL(operator=Operator.LOOP, children=[Harvest_Event, Waste_Manage])
loop8 = OperatorPOWL(operator=Operator.LOOP, children=[Feedback_Collect])

xor1 = OperatorPOWL(operator=Operator.XOR, children=[loop1, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[loop2, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[loop3, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[loop4, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[loop5, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[loop6, skip])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[loop7, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[loop8, skip])

root = StrictPartialOrder(nodes=[xor1, xor2, xor3, xor4, xor5, xor6, xor7, xor8])
root.order.add_edge(xor1, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor6, xor7)
root.order.add_edge(xor7, xor8)