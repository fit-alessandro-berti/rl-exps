import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
artifact_intake = Transition(label='Artifact Intake')
condition_check = Transition(label='Condition Check')
provenance_research = Transition(label='Provenance Research')
scientific_testing = Transition(label='Scientific Testing')
radiocarbon_dating = Transition(label='Radiocarbon Dating')
spectroscopy_scan = Transition(label='Spectroscopy Scan')
legal_clearance = Transition(label='Legal Clearance')
heritage_compliance = Transition(label='Heritage Compliance')
digital_archiving = Transition(label='Digital Archiving')
expert_review = Transition(label='Expert Review')
committee_vote = Transition(label='Committee Vote')
acquisition_approval = Transition(label='Acquisition Approval')
conservation_plan = Transition(label='Conservation Plan')
storage_setup = Transition(label='Storage Setup')
stakeholder_update = Transition(label='Stakeholder Update')
skip = SilentTransition()
provenance_choice = OperatorPOWL(operator=Operator.XOR, children=[provenance_research, skip])
scientific_choice = OperatorPOWL(operator=Operator.XOR, children=[scientific_testing, skip])
legal_choice = OperatorPOWL(operator=Operator.XOR, children=[legal_clearance, skip])
heritage_choice = OperatorPOWL(operator=Operator.XOR, children=[heritage_compliance, skip])
digital_choice = OperatorPOWL(operator=Operator.XOR, children=[digital_archiving, skip])
expert_choice = OperatorPOWL(operator=Operator.XOR, children=[expert_review, skip])
committee_choice = OperatorPOWL(operator=Operator.XOR, children=[committee_vote, skip])
storage_choice = OperatorPOWL(operator=Operator.XOR, children=[storage_setup, skip])
stakeholder_choice = OperatorPOWL(operator=Operator.XOR, children=[stakeholder_update, skip])
loop = OperatorPOWL(operator=Operator.LOOP, children=[radiocarbon_dating, spectroscopy_scan])
root = StrictPartialOrder(nodes=[artifact_intake, condition_check, provenance_choice, scientific_choice, legal_choice, heritage_choice, digital_choice, expert_choice, committee_choice, storage_choice, stakeholder_choice, loop])
root.order.add_edge(artifact_intake, provenance_choice)
root.order.add_edge(provenance_choice, scientific_choice)
root.order.add_edge(scientific_choice, legal_choice)
root.order.add_edge(legal_choice, heritage_choice)
root.order.add_edge(heritage_choice, digital_choice)
root.order.add_edge(digital_choice, expert_choice)
root.order.add_edge(expert_choice, committee_choice)
root.order.add_edge(committee_choice, storage_choice)
root.order.add_edge(storage_choice, stakeholder_choice)
root.order.add_edge(stakeholder_choice, loop)
root.order.add_edge(loop, provenance_choice)