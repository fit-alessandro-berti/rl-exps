import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

SiteAnalysis = Transition(label='Site Analysis')
StructuralCheck = Transition(label='Structural Check')
SystemDesign = Transition(label='System Design')
HydroponicsSetup = Transition(label='Hydroponics Setup')
LightingInstall = Transition(label='Lighting Install')
SensorInstall = Transition(label='Sensor Install')
ClimateControl = Transition(label='Climate Control')
NutrientMonitor = Transition(label='Nutrient Monitor')
SeedSelection = Transition(label='Seed Selection')
GerminationStart = Transition(label='Germination Start')
AutoPlanting = Transition(label='Auto Planting')
GrowthMonitoring = Transition(label='Growth Monitoring')
AIAnalytics = Transition(label='AI Analytics')
RoboticHarvest = Transition(label='Robotic Harvest')
Packaging = Transition(label='Packaging')
TraceLabeling = Transition(label='Trace Labeling')
LogisticsPlan = Transition(label='Logistics Plan')

skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[SiteAnalysis, StructuralCheck])
xor1 = OperatorPOWL(operator=Operator.XOR, children=[SystemDesign, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[HydroponicsSetup, LightingInstall])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[SensorInstall, ClimateControl])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[NutrientMonitor, GerminationStart])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[AutoPlanting, GrowthMonitoring])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[AIAnalytics, RoboticHarvest])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[Packaging, TraceLabeling])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[LogisticsPlan, skip])

root = StrictPartialOrder(nodes=[loop, xor1, xor2, xor3, xor4, xor5, xor6, xor7, xor8])
root.order.add_edge(loop, xor1)
root.order.add_edge(xor1, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor6, xor7)
root.order.add_edge(xor7, xor8)