import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

Demand_Forecast = Transition(label='Demand Forecast')
Courier_Match = Transition(label='Courier Match')
Credential_Check = Transition(label='Credential Check')
Route_Design = Transition(label='Route Design')
Load_Assign = Transition(label='Load Assign')
Traffic_Scan = Transition(label='Traffic Scan')
Package_Secure = Transition(label='Package Secure')
Dispatch_Alert = Transition(label='Dispatch Alert')
Real_time_Track = Transition(label='Real-time Track')
Incentive_Issue = Transition(label='Incentive Issue')
Dispute_Review = Transition(label='Dispute Review')
Customer_Notify = Transition(label='Customer Notify')
Feedback_Collect = Transition(label='Feedback Collect')
Performance_Log = Transition(label='Performance Log')
Ledger_Update = Transition(label='Ledger Update')
Hub_Sync = Transition(label='Hub Sync')

skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[Demand_Forecast, Courier_Match])
xor = OperatorPOWL(operator=Operator.XOR, children=[Credential_Check, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[Route_Design, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[Load_Assign, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[Traffic_Scan, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[Package_Secure, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[Dispatch_Alert, skip])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[Real_time_Track, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[Incentive_Issue, skip])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[Dispute_Review, skip])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[Customer_Notify, skip])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[Feedback_Collect, skip])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[Performance_Log, skip])
xor13 = OperatorPOWL(operator=Operator.XOR, children=[Ledger_Update, skip])
xor14 = OperatorPOWL(operator=Operator.XOR, children=[Hub_Sync, skip])

root = StrictPartialOrder(nodes=[loop, xor, xor2, xor3, xor4, xor5, xor6, xor7, xor8, xor9, xor10, xor11, xor12, xor13, xor14])
root.order.add_edge(loop, xor)
root.order.add_edge(loop, xor2)
root.order.add_edge(loop, xor3)
root.order.add_edge(loop, xor4)
root.order.add_edge(loop, xor5)
root.order.add_edge(loop, xor6)
root.order.add_edge(loop, xor7)
root.order.add_edge(loop, xor8)
root.order.add_edge(loop, xor9)
root.order.add_edge(loop, xor10)
root.order.add_edge(loop, xor11)
root.order.add_edge(loop, xor12)
root.order.add_edge(loop, xor13)
root.order.add_edge(loop, xor14)