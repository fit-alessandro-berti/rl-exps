import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
artifact_intake = Transition(label='Artifact Intake')
condition_check = Transition(label='Condition Check')
material_test = Transition(label='Material Test')
archival_search = Transition(label='Archival Search')
style_compare = Transition(label='Style Compare')
expert_review = Transition(label='Expert Review')
restoration_check = Transition(label='Restoration Check')
provenance_trace = Transition(label='Provenance Trace')
legal_verify = Transition(label='Legal Verify')
value_appraise = Transition(label='Value Appraise')
catalog_entry = Transition(label='Catalog Entry')
marketing_plan = Transition(label='Marketing Plan')
auction_setup = Transition(label='Auction Setup')
certify_final = Transition(label='Certify Final')
sales_report = Transition(label='Sales Report')
skip = SilentTransition()
loop_artifact_intake = OperatorPOWL(operator=Operator.LOOP, children=[artifact_intake])
loop_condition_check = OperatorPOWL(operator=Operator.LOOP, children=[condition_check])
loop_material_test = OperatorPOWL(operator=Operator.LOOP, children=[material_test])
loop_archival_search = OperatorPOWL(operator=Operator.LOOP, children=[archival_search])
loop_style_compare = OperatorPOWL(operator=Operator.LOOP, children=[style_compare])
loop_expert_review = OperatorPOWL(operator=Operator.LOOP, children=[expert_review])
loop_restoration_check = OperatorPOWL(operator=Operator.LOOP, children=[restoration_check])
loop_provenance_trace = OperatorPOWL(operator=Operator.LOOP, children=[provenance_trace])
loop_legal_verify = OperatorPOWL(operator=Operator.LOOP, children=[legal_verify])
loop_value_appraise = OperatorPOWL(operator=Operator.LOOP, children=[value_appraise])
loop_catalog_entry = OperatorPOWL(operator=Operator.LOOP, children=[catalog_entry])
loop_marketing_plan = OperatorPOWL(operator=Operator.LOOP, children=[marketing_plan])
loop_auction_setup = OperatorPOWL(operator=Operator.LOOP, children=[auction_setup])
loop_certify_final = OperatorPOWL(operator=Operator.LOOP, children=[certify_final])
loop_sales_report = OperatorPOWL(operator=Operator.LOOP, children=[sales_report])
xor_artifact_intake = OperatorPOWL(operator=Operator.XOR, children=[loop_artifact_intake, skip])
xor_condition_check = OperatorPOWL(operator=Operator.XOR, children=[loop_condition_check, skip])
xor_material_test = OperatorPOWL(operator=Operator.XOR, children=[loop_material_test, skip])
xor_archival_search = OperatorPOWL(operator=Operator.XOR, children=[loop_archival_search, skip])
xor_style_compare = OperatorPOWL(operator=Operator.XOR, children=[loop_style_compare, skip])
xor_expert_review = OperatorPOWL(operator=Operator.XOR, children=[loop_expert_review, skip])
xor_restoration_check = OperatorPOWL(operator=Operator.XOR, children=[loop_restoration_check, skip])
xor_provenance_trace = OperatorPOWL(operator=Operator.XOR, children=[loop_provenance_trace, skip])
xor_legal_verify = OperatorPOWL(operator=Operator.XOR, children=[loop_legal_verify, skip])
xor_value_appraise = OperatorPOWL(operator=Operator.XOR, children=[loop_value_appraise, skip])
xor_catalog_entry = OperatorPOWL(operator=Operator.XOR, children=[loop_catalog_entry, skip])
xor_marketing_plan = OperatorPOWL(operator=Operator.XOR, children=[loop_marketing_plan, skip])
xor_auction_setup = OperatorPOWL(operator=Operator.XOR, children=[loop_auction_setup, skip])
xor_certify_final = OperatorPOWL(operator=Operator.XOR, children=[loop_certify_final, skip])
xor_sales_report = OperatorPOWL(operator=Operator.XOR, children=[loop_sales_report, skip])
root = StrictPartialOrder(nodes=[xor_artifact_intake, xor_condition_check, xor_material_test, xor_archival_search, xor_style_compare, xor_expert_review, xor_restoration_check, xor_provenance_trace, xor_legal_verify, xor_value_appraise, xor_catalog_entry, xor_marketing_plan, xor_auction_setup, xor_certify_final, xor_sales_report])
root.order.add_edge(xor_artifact_intake, loop_artifact_intake)
root.order.add_edge(xor_condition_check, loop_condition_check)
root.order.add_edge(xor_material_test, loop_material_test)
root.order.add_edge(xor_archival_search, loop_archival_search)
root.order.add_edge(xor_style_compare, loop_style_compare)
root.order.add_edge(xor_expert_review, loop_expert_review)
root.order.add_edge(xor_restoration_check, loop_restoration_check)
root.order.add_edge(xor_provenance_trace, loop_provenance_trace)
root.order.add_edge(xor_legal_verify, loop_legal_verify)
root.order.add_edge(xor_value_appraise, loop_value_appraise)
root.order.add_edge(xor_catalog_entry, loop_catalog_entry)
root.order.add_edge(xor_marketing_plan, loop_marketing_plan)
root.order.add_edge(xor_auction_setup, loop_auction_setup)
root.order.add_edge(xor_certify_final, loop_certify_final)
root.order.add_edge(xor_sales_report, loop_sales_report)