import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

farm_selection = Transition(label='Farm Selection')
milk_testing = Transition(label='Milk Testing')
starter_culture = Transition(label='Starter Culture')
curd_formation = Transition(label='Curd Formation')
pressing_cheese = Transition(label='Pressing Cheese')
microbial_profiling = Transition(label='Microbial Profiling')
aging_control = Transition(label='Aging Control')
hand_wrapping = Transition(label='Hand Wrapping')
quality_audit = Transition(label='Quality Audit')
packaging_prep = Transition(label='Packaging Prep')
climate_shipping = Transition(label='Climate Shipping')
retail_coordination = Transition(label='Retail Coordination')
seasonal_review = Transition(label='Seasonal Review')
consumer_survey = Transition(label='Consumer Survey')
feedback_analysis = Transition(label='Feedback Analysis')
market_adjustment = Transition(label='Market Adjustment')

skip = SilentTransition()
loop_farm_selection = OperatorPOWL(operator=Operator.LOOP, children=[farm_selection, milk_testing])
loop_starter_culture = OperatorPOWL(operator=Operator.LOOP, children=[starter_culture, curd_formation])
loop_pressing_cheese = OperatorPOWL(operator=Operator.LOOP, children=[pressing_cheese, microbial_profiling])
loop_aging_control = OperatorPOWL(operator=Operator.LOOP, children=[aging_control, hand_wrapping])
loop_quality_audit = OperatorPOWL(operator=Operator.LOOP, children=[quality_audit, packaging_prep])
loop_climate_shipping = OperatorPOWL(operator=Operator.LOOP, children=[climate_shipping, retail_coordination])
loop_seasonal_review = OperatorPOWL(operator=Operator.LOOP, children=[seasonal_review, consumer_survey])
loop_feedback_analysis = OperatorPOWL(operator=Operator.LOOP, children=[feedback_analysis, market_adjustment])

xor_farm_selection = OperatorPOWL(operator=Operator.XOR, children=[loop_farm_selection, skip])
xor_starter_culture = OperatorPOWL(operator=Operator.XOR, children=[loop_starter_culture, skip])
xor_pressing_cheese = OperatorPOWL(operator=Operator.XOR, children=[loop_pressing_cheese, skip])
xor_aging_control = OperatorPOWL(operator=Operator.XOR, children=[loop_aging_control, skip])
xor_quality_audit = OperatorPOWL(operator=Operator.XOR, children=[loop_quality_audit, skip])
xor_climate_shipping = OperatorPOWL(operator=Operator.XOR, children=[loop_climate_shipping, skip])
xor_seasonal_review = OperatorPOWL(operator=Operator.XOR, children=[loop_seasonal_review, skip])
xor_feedback_analysis = OperatorPOWL(operator=Operator.XOR, children=[loop_feedback_analysis, skip])

root = StrictPartialOrder(nodes=[xor_farm_selection, xor_starter_culture, xor_pressing_cheese, xor_aging_control, xor_quality_audit, xor_climate_shipping, xor_seasonal_review, xor_feedback_analysis])
root.order.add_edge(xor_farm_selection, xor_starter_culture)
root.order.add_edge(xor_starter_culture, xor_pressing_cheese)
root.order.add_edge(xor_pressing_cheese, xor_aging_control)
root.order.add_edge(xor_aging_control, xor_quality_audit)
root.order.add_edge(xor_quality_audit, xor_climate_shipping)
root.order.add_edge(xor_climate_shipping, xor_seasonal_review)
root.order.add_edge(xor_seasonal_review, xor_feedback_analysis)