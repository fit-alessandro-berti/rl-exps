import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
design_layout = Transition(label='Design Layout')
system_build = Transition(label='System Build')
install_sensors = Transition(label='Install Sensors')
select_crops = Transition(label='Select Crops')
setup_lighting = Transition(label='Setup Lighting')
configure_climate = Transition(label='Configure Climate')
nutrient_mix = Transition(label='Nutrient Mix')
automate_watering = Transition(label='Automate Watering')
test_systems = Transition(label='Test Systems')
train_staff = Transition(label='Train Staff')
waste_plan = Transition(label='Waste Plan')
market_link = Transition(label='Market Link')
data_monitor = Transition(label='Data Monitor')
optimize_yield = Transition(label='Optimize Yield')

skip = SilentTransition()

site_survey_loop = OperatorPOWL(operator=Operator.LOOP, children=[site_survey])
design_layout_loop = OperatorPOWL(operator=Operator.LOOP, children=[design_layout])
system_build_loop = OperatorPOWL(operator=Operator.LOOP, children=[system_build])
install_sensors_loop = OperatorPOWL(operator=Operator.LOOP, children=[install_sensors])
select_crops_loop = OperatorPOWL(operator=Operator.LOOP, children=[select_crops])
setup_lighting_loop = OperatorPOWL(operator=Operator.LOOP, children=[setup_lighting])
configure_climate_loop = OperatorPOWL(operator=Operator.LOOP, children=[configure_climate])
nutrient_mix_loop = OperatorPOWL(operator=Operator.LOOP, children=[nutrient_mix])
automate_watering_loop = OperatorPOWL(operator=Operator.LOOP, children=[automate_watering])
test_systems_loop = OperatorPOWL(operator=Operator.LOOP, children=[test_systems])
train_staff_loop = OperatorPOWL(operator=Operator.LOOP, children=[train_staff])
waste_plan_loop = OperatorPOWL(operator=Operator.LOOP, children=[waste_plan])
market_link_loop = OperatorPOWL(operator=Operator.LOOP, children=[market_link])
data_monitor_loop = OperatorPOWL(operator=Operator.LOOP, children=[data_monitor])
optimize_yield_loop = OperatorPOWL(operator=Operator.LOOP, children=[optimize_yield])

xor = OperatorPOWL(operator=Operator.XOR, children=[waste_plan, skip])
xor_loop = OperatorPOWL(operator=Operator.LOOP, children=[xor])

root = StrictPartialOrder(nodes=[site_survey_loop, design_layout_loop, system_build_loop, install_sensors_loop, select_crops_loop, setup_lighting_loop, configure_climate_loop, nutrient_mix_loop, automate_watering_loop, test_systems_loop, train_staff_loop, waste_plan_loop, market_link_loop, data_monitor_loop, optimize_yield_loop, xor_loop])
root.order.add_edge(site_survey_loop, design_layout_loop)
root.order.add_edge(design_layout_loop, system_build_loop)
root.order.add_edge(system_build_loop, install_sensors_loop)
root.order.add_edge(install_sensors_loop, select_crops_loop)
root.order.add_edge(select_crops_loop, setup_lighting_loop)
root.order.add_edge(setup_lighting_loop, configure_climate_loop)
root.order.add_edge(configure_climate_loop, nutrient_mix_loop)
root.order.add_edge(nutrient_mix_loop, automate_watering_loop)
root.order.add_edge(automate_watering_loop, test_systems_loop)
root.order.add_edge(test_systems_loop, train_staff_loop)
root.order.add_edge(train_staff_loop, waste_plan_loop)
root.order.add_edge(waste_plan_loop, market_link_loop)
root.order.add_edge(market_link_loop, data_monitor_loop)
root.order.add_edge(data_monitor_loop, optimize_yield_loop)
root.order.add_edge(optimize_yield_loop, xor_loop)