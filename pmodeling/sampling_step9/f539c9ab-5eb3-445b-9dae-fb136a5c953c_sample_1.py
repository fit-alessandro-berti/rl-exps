import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
site_survey = Transition(label='Site Survey')
structural_audit = Transition(label='Structural Audit')
modular_design = Transition(label='Modular Design')
hydroponic_setup = Transition(label='Hydroponic Setup')
climate_config = Transition(label='Climate Config')
nutrient_mix = Transition(label='Nutrient Mix')
pest_detect = Transition(label='Pest Detect')
lighting_setup = Transition(label='Lighting Setup')
energy_audit = Transition(label='Energy Audit')
automation_install = Transition(label='Automation Install')
staff_training = Transition(label='Staff Training')
market_analysis = Transition(label='Market Analysis')
regulation_check = Transition(label='Regulation Check')
yield_monitor = Transition(label='Yield Monitor')
waste_manage = Transition(label='Waste Manage')
data_analytics = Transition(label='Data Analytics')
skip = SilentTransition()
loop_site_survey = OperatorPOWL(operator=Operator.LOOP, children=[site_survey, structural_audit])
xor_modular_design = OperatorPOWL(operator=Operator.XOR, children=[modular_design, skip])
loop_modular_design = OperatorPOWL(operator=Operator.LOOP, children=[modular_design, skip])
xor_hydroponic_setup = OperatorPOWL(operator=Operator.XOR, children=[hydroponic_setup, skip])
loop_hydroponic_setup = OperatorPOWL(operator=Operator.LOOP, children=[hydroponic_setup, skip])
xor_climate_config = OperatorPOWL(operator=Operator.XOR, children=[climate_config, skip])
loop_climate_config = OperatorPOWL(operator=Operator.LOOP, children=[climate_config, skip])
xor_nutrient_mix = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, skip])
loop_nutrient_mix = OperatorPOWL(operator=Operator.LOOP, children=[nutrient_mix, skip])
xor_pest_detect = OperatorPOWL(operator=Operator.XOR, children=[pest_detect, skip])
loop_pest_detect = OperatorPOWL(operator=Operator.LOOP, children=[pest_detect, skip])
xor_lighting_setup = OperatorPOWL(operator=Operator.XOR, children=[lighting_setup, skip])
loop_lighting_setup = OperatorPOWL(operator=Operator.LOOP, children=[lighting_setup, skip])
xor_energy_audit = OperatorPOWL(operator=Operator.XOR, children=[energy_audit, skip])
loop_energy_audit = OperatorPOWL(operator=Operator.LOOP, children=[energy_audit, skip])
xor_automation_install = OperatorPOWL(operator=Operator.XOR, children=[automation_install, skip])
loop_automation_install = OperatorPOWL(operator=Operator.LOOP, children=[automation_install, skip])
xor_staff_training = OperatorPOWL(operator=Operator.XOR, children=[staff_training, skip])
loop_staff_training = OperatorPOWL(operator=Operator.LOOP, children=[staff_training, skip])
xor_market_analysis = OperatorPOWL(operator=Operator.XOR, children=[market_analysis, skip])
loop_market_analysis = OperatorPOWL(operator=Operator.LOOP, children=[market_analysis, skip])
xor_regulation_check = OperatorPOWL(operator=Operator.XOR, children=[regulation_check, skip])
loop_regulation_check = OperatorPOWL(operator=Operator.LOOP, children=[regulation_check, skip])
xor_yield_monitor = OperatorPOWL(operator=Operator.XOR, children=[yield_monitor, skip])
loop_yield_monitor = OperatorPOWL(operator=Operator.LOOP, children=[yield_monitor, skip])
xor_waste_manage = OperatorPOWL(operator=Operator.XOR, children=[waste_manage, skip])
loop_waste_manage = OperatorPOWL(operator=Operator.LOOP, children=[waste_manage, skip])
xor_data_analytics = OperatorPOWL(operator=Operator.XOR, children=[data_analytics, skip])
loop_data_analytics = OperatorPOWL(operator=Operator.LOOP, children=[data_analytics, skip])
root = StrictPartialOrder(nodes=[loop_site_survey, xor_modular_design, loop_modular_design, xor_hydroponic_setup, loop_hydroponic_setup, xor_climate_config, loop_climate_config, xor_nutrient_mix, loop_nutrient_mix, xor_pest_detect, loop_pest_detect, xor_lighting_setup, loop_lighting_setup, xor_energy_audit, loop_energy_audit, xor_automation_install, loop_automation_install, xor_staff_training, loop_staff_training, xor_market_analysis, loop_market_analysis, xor_regulation_check, loop_regulation_check, xor_yield_monitor, loop_yield_monitor, xor_waste_manage, loop_waste_manage, xor_data_analytics, loop_data_analytics])
root.order.add_edge(loop_site_survey, xor_modular_design)
root.order.add_edge(xor_modular_design, loop_modular_design)
root.order.add_edge(loop_modular_design, xor_hydroponic_setup)
root.order.add_edge(xor_hydroponic_setup, loop_hydroponic_setup)
root.order.add_edge(loop_hydroponic_setup, xor_climate_config)
root.order.add_edge(xor_climate_config, loop_climate_config)
root.order.add_edge(loop_climate_config, xor_nutrient_mix)
root.order.add_edge(xor_nutrient_mix, loop_nutrient_mix)
root.order.add_edge(loop_nutrient_mix, xor_pest_detect)
root.order.add_edge(xor_pest_detect, loop_pest_detect)
root.order.add_edge(loop_pest_detect, xor_lighting_setup)
root.order.add_edge(xor_lighting_setup, loop_lighting_setup)
root.order.add_edge(loop_lighting_setup, xor_energy_audit)
root.order.add_edge(xor_energy_audit, loop_energy_audit)
root.order.add_edge(loop_energy_audit, xor_automation_install)
root.order.add_edge(xor_automation_install, loop_automation_install)
root.order.add_edge(loop_automation_install, xor_staff_training)
root.order.add_edge(xor_staff_training, loop_staff_training)
root.order.add_edge(loop_staff_training, xor_market_analysis)
root.order.add_edge(xor_market_analysis, loop_market_analysis)
root.order.add_edge(loop_market_analysis, xor_regulation_check)
root.order.add_edge(xor_regulation_check, loop_regulation_check)
root.order.add_edge(loop_regulation_check, xor_yield_monitor)
root.order.add_edge(xor_yield_monitor, loop_yield_monitor)
root.order.add_edge(loop_yield_monitor, xor_waste_manage)
root.order.add_edge(xor_waste_manage, loop_waste_manage)
root.order.add_edge(loop_waste_manage, xor_data_analytics)
root.order.add_edge(xor_data_analytics, loop_data_analytics)