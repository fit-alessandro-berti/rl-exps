import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_analysis = Transition(label='Site Analysis')
structure_check = Transition(label='Structure Check')
modify_layout = Transition(label='Modify Layout')
install_hvac = Transition(label='Install HVAC')
setup_hydroponics = Transition(label='Setup Hydroponics')
prepare_nutrients = Transition(label='Prepare Nutrients')
select_seeds = Transition(label='Select Seeds')
automate_planting = Transition(label='Automate Planting')
deploy_sensors = Transition(label='Deploy Sensors')
pest_control = Transition(label='Pest Control')
optimize_energy = Transition(label='Optimize Energy')
recycle_water = Transition(label='Recycle Water')
automate_harvest = Transition(label='Automate Harvest')
package_crops = Transition(label='Package Crops')
coordinate_delivery = Transition(label='Coordinate Delivery')
analyze_data = Transition(label='Analyze Data')
skip = SilentTransition()

loop_site_analysis = OperatorPOWL(operator=Operator.LOOP, children=[site_analysis, structure_check])
xor_structure_check = OperatorPOWL(operator=Operator.XOR, children=[modify_layout, skip])
loop_modify_layout = OperatorPOWL(operator=Operator.LOOP, children=[install_hvac, setup_hydroponics])
xor_install_hvac = OperatorPOWL(operator=Operator.XOR, children=[prepare_nutrients, skip])
loop_prepare_nutrients = OperatorPOWL(operator=Operator.LOOP, children=[select_seeds, automate_planting])
xor_select_seeds = OperatorPOWL(operator=Operator.XOR, children=[deploy_sensors, skip])
loop_deploy_sensors = OperatorPOWL(operator=Operator.LOOP, children=[pest_control, optimize_energy])
xor_pest_control = OperatorPOWL(operator=Operator.XOR, children=[recycle_water, skip])
loop_recycle_water = OperatorPOWL(operator=Operator.LOOP, children=[automate_harvest, package_crops])
xor_automate_harvest = OperatorPOWL(operator=Operator.XOR, children=[coordinate_delivery, skip])
loop_coordinate_delivery = OperatorPOWL(operator=Operator.LOOP, children=[analyze_data, skip])

root = StrictPartialOrder(nodes=[loop_site_analysis, xor_structure_check, loop_modify_layout, xor_install_hvac, loop_prepare_nutrients, xor_select_seeds, loop_deploy_sensors, xor_pest_control, loop_recycle_water, xor_automate_harvest, loop_coordinate_delivery])
root.order.add_edge(loop_site_analysis, xor_structure_check)
root.order.add_edge(xor_structure_check, loop_modify_layout)
root.order.add_edge(loop_modify_layout, xor_install_hvac)
root.order.add_edge(xor_install_hvac, loop_prepare_nutrients)
root.order.add_edge(loop_prepare_nutrients, xor_select_seeds)
root.order.add_edge(xor_select_seeds, loop_deploy_sensors)
root.order.add_edge(loop_deploy_sensors, xor_pest_control)
root.order.add_edge(xor_pest_control, loop_recycle_water)
root.order.add_edge(loop_recycle_water, xor_automate_harvest)
root.order.add_edge(xor_automate_harvest, loop_coordinate_delivery)