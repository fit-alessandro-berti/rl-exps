import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
Milk_Sourcing = Transition(label='Milk Sourcing')
Farm_Audit = Transition(label='Farm Audit')
Milk_Testing = Transition(label='Milk Testing')
Batch_Forming = Transition(label='Batch Forming')
Curd_Cutting = Transition(label='Curd Cutting')
Molding_Cheese = Transition(label='Molding Cheese')
Salting_Process = Transition(label='Salting Process')
Aging_Control = Transition(label='Aging Control')
Quality_Check = Transition(label='Quality Check')
Packaging_Design = Transition(label='Packaging Design')
Label_Printing = Transition(label='Label Printing')
Inventory_Update = Transition(label='Inventory Update')
Order_Receiving = Transition(label='Order Receiving')
Retail_Coordination = Transition(label='Retail Coordination')
Shipping_Prep = Transition(label='Shipping Prep')
Customer_Feedback = Transition(label='Customer Feedback')
Demand_Forecast = Transition(label='Demand Forecast')
Limited_Release = Transition(label='Limited Release')
skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[Milk_Sourcing, Farm_Audit, Milk_Testing, Batch_Forming, Curd_Cutting, Molding_Cheese, Salting_Process, Aging_Control, Quality_Check])
xor = OperatorPOWL(operator=Operator.XOR, children=[Packaging_Design, Label_Printing])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[Inventory_Update, Order_Receiving])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[Retail_Coordination, Shipping_Prep])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[Customer_Feedback, Demand_Forecast])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[Limited_Release])
root = StrictPartialOrder(nodes=[loop, xor, xor2, xor3, xor4, xor5])
root.order.add_edge(loop, xor)
root.order.add_edge(loop, xor2)
root.order.add_edge(loop, xor3)
root.order.add_edge(loop, xor4)
root.order.add_edge(loop, xor5)