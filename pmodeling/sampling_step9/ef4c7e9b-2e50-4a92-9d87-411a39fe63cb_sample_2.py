import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define activities
seed_selection = Transition(label='Seed Selection')
nutrient_mix = Transition(label='Nutrient Mix')
environment_setup = Transition(label='Environment Setup')
pest_scan = Transition(label='Pest Scan')
light_control = Transition(label='Light Control')
growth_monitor = Transition(label='Growth Monitor')
water_cycle = Transition(label='Water Cycle')
air_quality = Transition(label='Air Quality')
robotic_harvest = Transition(label='Robotic Harvest')
quality_check = Transition(label='Quality Check')
data_logging = Transition(label='Data Logging')
packaging = Transition(label='Packaging')
waste_sort = Transition(label='Waste Sort')
energy_audit = Transition(label='Energy Audit')
retail_sync = Transition(label='Retail Sync')
skip = SilentTransition()

# Define loops
seed_setup = OperatorPOWL(operator=Operator.LOOP, children=[seed_selection, nutrient_mix, environment_setup, pest_scan, light_control, growth_monitor, water_cycle, air_quality, robotic_harvest, quality_check, data_logging, packaging, waste_sort, energy_audit, retail_sync])
quality_loop = OperatorPOWL(operator=Operator.LOOP, children=[quality_check, data_logging, packaging, waste_sort, energy_audit, retail_sync])

# Define exclusive choices
seed_or_skip = OperatorPOWL(operator=Operator.XOR, children=[seed_selection, skip])
nutrient_or_skip = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, skip])
pest_or_skip = OperatorPOWL(operator=Operator.XOR, children=[pest_scan, skip])
light_or_skip = OperatorPOWL(operator=Operator.XOR, children=[light_control, skip])
water_or_skip = OperatorPOWL(operator=Operator.XOR, children=[water_cycle, skip])
air_or_skip = OperatorPOWL(operator=Operator.XOR, children=[air_quality, skip])
harvest_or_skip = OperatorPOWL(operator=Operator.XOR, children=[robotic_harvest, skip])
quality_or_skip = OperatorPOWL(operator=Operator.XOR, children=[quality_check, skip])
data_or_skip = OperatorPOWL(operator=Operator.XOR, children=[data_logging, skip])
packaging_or_skip = OperatorPOWL(operator=Operator.XOR, children=[packaging, skip])
waste_or_skip = OperatorPOWL(operator=Operator.XOR, children=[waste_sort, skip])
energy_or_skip = OperatorPOWL(operator=Operator.XOR, children=[energy_audit, skip])
retail_or_skip = OperatorPOWL(operator=Operator.XOR, children=[retail_sync, skip])

# Define the root of the POWL model
root = StrictPartialOrder(nodes=[seed_setup, quality_loop, seed_or_skip, nutrient_or_skip, pest_or_skip, light_or_skip, water_or_skip, air_or_skip, harvest_or_skip, quality_or_skip, data_or_skip, packaging_or_skip, waste_or_skip, energy_or_skip, retail_or_skip])
root.order.add_edge(seed_setup, quality_loop)
root.order.add_edge(seed_setup, seed_or_skip)
root.order.add_edge(seed_setup, nutrient_or_skip)
root.order.add_edge(seed_setup, pest_or_skip)
root.order.add_edge(seed_setup, light_or_skip)
root.order.add_edge(seed_setup, water_or_skip)
root.order.add_edge(seed_setup, air_or_skip)
root.order.add_edge(seed_setup, harvest_or_skip)
root.order.add_edge(quality_loop, quality_or_skip)
root.order.add_edge(quality_loop, data_or_skip)
root.order.add_edge(quality_loop, packaging_or_skip)
root.order.add_edge(quality_loop, waste_or_skip)
root.order.add_edge(quality_loop, energy_or_skip)
root.order.add_edge(quality_loop, retail_or_skip)
root.order.add_edge(seed_or_skip, nutrient_mix)
root.order.add_edge(nutrient_or_skip, pest_scan)
root.order.add_edge(pest_or_skip, light_control)
root.order.add_edge(light_or_skip, water_cycle)
root.order.add_edge(water_or_skip, air_quality)
root.order.add_edge(air_or_skip, robotic_harvest)
root.order.add_edge(harvest_or_skip, quality_check)
root.order.add_edge(quality_or_skip, data_logging)
root.order.add_edge(data_or_skip, packaging)
root.order.add_edge(packaging_or_skip, waste_sort)
root.order.add_edge(waste_or_skip, energy_audit)
root.order.add_edge(energy_or_skip, retail_sync)
root.order.add_edge(retail_or_skip, seed_selection)
root.order.add_edge(retail_or_skip, nutrient_mix)
root.order.add_edge(retail_or_skip, pest_scan)
root.order.add_edge(retail_or_skip, light_control)
root.order.add_edge(retail_or_skip, water_cycle)
root.order.add_edge(retail_or_skip, air_quality)
root.order.add_edge(retail_or_skip, robotic_harvest)
root.order.add_edge(retail_or_skip, quality_check)
root.order.add_edge(retail_or_skip, data_logging)
root.order.add_edge(retail_or_skip, packaging)
root.order.add_edge(retail_or_skip, waste_sort)
root.order.add_edge(retail_or_skip, energy_audit)
root.order.add_edge(retail_or_skip, retail_sync)