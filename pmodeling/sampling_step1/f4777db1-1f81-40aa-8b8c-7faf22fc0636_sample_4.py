from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition

# Define the activities
site_survey = Transition(label='Site Survey')
impact_study = Transition(label='Impact Study')
structure_check = Transition(label='Structure Check')
soil_testing = Transition(label='Soil Testing')
system_design = Transition(label='System Design')
seed_selection = Transition(label='Seed Selection')
irrigation_setup = Transition(label='Irrigation Setup')
lighting_install = Transition(label='Lighting Install')
pest_control = Transition(label='Pest Control')
community_meet = Transition(label='Community Meet')
regulation_review = Transition(label='Regulation Review')
waste_plan = Transition(label='Waste Plan')
crop_monitor = Transition(label='Crop Monitor')
harvest_prep = Transition(label='Harvest Prep')
market_launch = Transition(label='Market Launch')

# Define the loop and exclusive choice operators
loop = OperatorPOWL(operator=Operator.LOOP, children=[crop_monitor, harvest_prep, market_launch])
xor = OperatorPOWL(operator=Operator.XOR, children=[pest_control, community_meet, regulation_review])

# Define the root partial order
root = StrictPartialOrder(nodes=[site_survey, impact_study, structure_check, soil_testing, system_design, seed_selection, irrigation_setup, lighting_install, loop, xor])

# Add dependencies to the partial order
root.order.add_edge(site_survey, impact_study)
root.order.add_edge(site_survey, structure_check)
root.order.add_edge(site_survey, soil_testing)
root.order.add_edge(site_survey, system_design)
root.order.add_edge(site_survey, seed_selection)
root.order.add_edge(site_survey, irrigation_setup)
root.order.add_edge(site_survey, lighting_install)
root.order.add_edge(impact_study, structure_check)
root.order.add_edge(impact_study, soil_testing)
root.order.add_edge(impact_study, system_design)
root.order.add_edge(impact_study, seed_selection)
root.order.add_edge(impact_study, irrigation_setup)
root.order.add_edge(impact_study, lighting_install)
root.order.add_edge(structure_check, soil_testing)
root.order.add_edge(structure_check, system_design)
root.order.add_edge(structure_check, seed_selection)
root.order.add_edge(structure_check, irrigation_setup)
root.order.add_edge(structure_check, lighting_install)
root.order.add_edge(soil_testing, system_design)
root.order.add_edge(soil_testing, seed_selection)
root.order.add_edge(soil_testing, irrigation_setup)
root.order.add_edge(soil_testing, lighting_install)
root.order.add_edge(system_design, seed_selection)
root.order.add_edge(system_design, irrigation_setup)
root.order.add_edge(system_design, lighting_install)
root.order.add_edge(seed_selection, irrigation_setup)
root.order.add_edge(seed_selection, lighting_install)
root.order.add_edge(irrigation_setup, lighting_install)
root.order.add_edge(pest_control, community_meet)
root.order.add_edge(pest_control, regulation_review)
root.order.add_edge(community_meet, regulation_review)
root.order.add_edge(loop, crop_monitor)
root.order.add_edge(loop, harvest_prep)
root.order.add_edge(loop, market_launch)
root.order.add_edge(xor, loop)

print(root)