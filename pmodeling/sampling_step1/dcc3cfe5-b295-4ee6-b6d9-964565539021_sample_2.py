from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition

# Define the POWL model
A = Transition(label='Demand Forecast')
B = Transition(label='Courier Match')
C = Transition(label='Credential Check')
D = Transition(label='Route Design')
E = Transition(label='Load Assign')
F = Transition(label='Traffic Scan')
G = Transition(label='Package Secure')
H = Transition(label='Dispatch Alert')
I = Transition(label='Real-time Track')
J = Transition(label='Incentive Issue')
K = Transition(label='Dispute Review')
L = Transition(label='Customer Notify')
M = Transition(label='Feedback Collect')
N = Transition(label='Performance Log')
O = Transition(label='Ledger Update')
P = Transition(label='Hub Sync')
Q = SilentTransition()

# Define the process tree
root = StrictPartialOrder(nodes=[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q])
root.order.add_edge(A, B)
root.order.add_edge(B, C)
root.order.add_edge(C, D)
root.order.add_edge(D, E)
root.order.add_edge(E, F)
root.order.add_edge(F, G)
root.order.add_edge(G, H)
root.order.add_edge(H, I)
root.order.add_edge(I, J)
root.order.add_edge(J, K)
root.order.add_edge(K, L)
root.order.add_edge(L, M)
root.order.add_edge(M, N)
root.order.add_edge(N, O)
root.order.add_edge(O, P)
root.order.add_edge(P, Q)

# Define the dependencies
root.order.add_edge(A, B)
root.order.add_edge(B, C)
root.order.add_edge(C, D)
root.order.add_edge(D, E)
root.order.add_edge(E, F)
root.order.add_edge(F, G)
root.order.add_edge(G, H)
root.order.add_edge(H, I)
root.order.add_edge(I, J)
root.order.add_edge(J, K)
root.order.add_edge(K, L)
root.order.add_edge(L, M)
root.order.add_edge(M, N)
root.order.add_edge(N, O)
root.order.add_edge(O, P)
root.order.add_edge(P, Q)

# Print the POWL model
print(root)