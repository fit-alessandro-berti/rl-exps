import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

client_brief = Transition(label='Client Brief')
spec_analysis = Transition(label='Spec Analysis')
material_sourcing = Transition(label='Material Sourcing')
component_vetting = Transition(label='Component Vetting')
frame_assembly = Transition(label='Frame Assembly')
sensor_install = Transition(label='Sensor Install')
propulsion_setup = Transition(label='Propulsion Setup')
calibration = Transition(label='Calibration')
software_load = Transition(label='Software Load')
flight_test = Transition(label='Flight Test')
ai_training = Transition(label='AI Training')
qa_review = Transition(label='QA Review')
mission_pack = Transition(label='Mission Pack')
client_training = Transition(label='Client Training')
deployment_support = Transition(label='Deployment Support')

client_brief_to_spec_analysis = OperatorPOWL(operator=Operator.XOR, children=[material_sourcing, client_brief])
spec_analysis_to_component_vetting = OperatorPOWL(operator=Operator.XOR, children=[component_vetting, spec_analysis])
component_vetting_to_frame_assembly = OperatorPOWL(operator=Operator.XOR, children=[frame_assembly, component_vetting])
frame_assembly_to_sensor_install = OperatorPOWL(operator=Operator.XOR, children=[sensor_install, frame_assembly])
sensor_install_to_propulsion_setup = OperatorPOWL(operator=Operator.XOR, children=[propulsion_setup, sensor_install])
propulsion_setup_to_calibration = OperatorPOWL(operator=Operator.XOR, children=[calibration, propulsion_setup])
calibration_to_software_load = OperatorPOWL(operator=Operator.XOR, children=[software_load, calibration])
software_load_to_flight_test = OperatorPOWL(operator=Operator.XOR, children=[flight_test, software_load])
flight_test_to_ai_training = OperatorPOWL(operator=Operator.XOR, children=[ai_training, flight_test])
ai_training_to_qa_review = OperatorPOWL(operator=Operator.XOR, children=[qa_review, ai_training])
qa_review_to_mission_pack = OperatorPOWL(operator=Operator.XOR, children=[mission_pack, qa_review])
mission_pack_to_client_training = OperatorPOWL(operator=Operator.XOR, children=[client_training, mission_pack])
client_training_to_deployment_support = OperatorPOWL(operator=Operator.XOR, children=[deployment_support, client_training])

root = StrictPartialOrder(nodes=[client_brief, material_sourcing, component_vetting, frame_assembly, sensor_install, propulsion_setup, calibration, software_load, flight_test, ai_training, qa_review, mission_pack, client_training, deployment_support])
root.order.add_edge(client_brief, spec_analysis)
root.order.add_edge(spec_analysis, component_vetting)
root.order.add_edge(component_vetting, frame_assembly)
root.order.add_edge(frame_assembly, sensor_install)
root.order.add_edge(sensor_install, propulsion_setup)
root.order.add_edge(propulsion_setup, calibration)
root.order.add_edge(calibration, software_load)
root.order.add_edge(software_load, flight_test)
root.order.add_edge(flight_test, ai_training)
root.order.add_edge(ai_training, qa_review)
root.order.add_edge(qa_review, mission_pack)
root.order.add_edge(mission_pack, client_training)
root.order.add_edge(client_training, deployment_support)