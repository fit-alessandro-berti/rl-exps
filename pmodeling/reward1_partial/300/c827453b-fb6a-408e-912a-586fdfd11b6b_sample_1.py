import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

sensor_setup = Transition(label='Sensor Setup')
data_capture = Transition(label='Data Capture')
nutrient_mix = Transition(label='Nutrient Mix')
crop_rotate = Transition(label='Crop Rotate')
waste_collect = Transition(label='Waste Collect')
compost_process = Transition(label='Compost Process')
drone_dispatch = Transition(label='Drone Dispatch')
pest_control = Transition(label='Pest Control')
pollination_run = Transition(label='Pollination Run')
volunteer_assign = Transition(label='Volunteer Assign')
feedback_gather = Transition(label='Feedback Gather')
model_update = Transition(label='Model Update')
yield_forecast = Transition(label='Yield Forecast')
water_adjust = Transition(label='Water Adjust')
report_generate = Transition(label='Report Generate')
resource_audit = Transition(label='Resource Audit')
schedule_sync = Transition(label='Schedule Sync')

xor1 = OperatorPOWL(operator=Operator.XOR, children=[compost_process, SilentTransition()])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[pest_control, SilentTransition()])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[pollination_run, SilentTransition()])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[volunteer_assign, SilentTransition()])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[feedback_gather, SilentTransition()])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[model_update, SilentTransition()])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[water_adjust, SilentTransition()])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[report_generate, SilentTransition()])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[resource_audit, SilentTransition()])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[schedule_sync, SilentTransition()])

loop1 = OperatorPOWL(operator=Operator.LOOP, children=[data_capture, nutrient_mix])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[crop_rotate, xor1])
loop3 = OperatorPOWL(operator=Operator.LOOP, children=[waste_collect, xor2])
loop4 = OperatorPOWL(operator=Operator.LOOP, children=[drone_dispatch, xor3])
loop5 = OperatorPOWL(operator=Operator.LOOP, children=[xor4, xor5])
loop6 = OperatorPOWL(operator=Operator.LOOP, children=[xor6, xor7])
loop7 = OperatorPOWL(operator=Operator.LOOP, children=[xor8, xor9])
loop8 = OperatorPOWL(operator=Operator.LOOP, children=[xor10, loop1])

root = StrictPartialOrder(nodes=[sensor_setup, loop1, loop2, loop3, loop4, loop5, loop6, loop7, loop8])
root.order.add_edge(sensor_setup, loop1)
root.order.add_edge(loop1, loop2)
root.order.add_edge(loop2, loop3)
root.order.add_edge(loop3, loop4)
root.order.add_edge(loop4, loop5)
root.order.add_edge(loop5, loop6)
root.order.add_edge(loop6, loop7)
root.order.add_edge(loop7, loop8)
root.order.add_edge(loop8, sensor_setup)