from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

audit_artifacts = Transition(label='Audit Artifacts')
interview_staff = Transition(label='Interview Staff')
assess_risks = Transition(label='Assess Risks')
plan_retrieval = Transition(label='Plan Retrieval')
legal_review = Transition(label='Legal Review')
security_check = Transition(label='Security Check')
execute_recovery = Transition(label='Execute Recovery')
validate_items = Transition(label='Validate Items')
restore_function = Transition(label='Restore Function')
update_systems = Transition(label='Update Systems')
train_users = Transition(label='Train Users')
document_findings = Transition(label='Document Findings')
archive_records = Transition(label='Archive Records')
review_lessons = Transition(label='Review Lessons')
close_process = Transition(label='Close Process')

audit_interview = OperatorPOWL(operator=Operator.XOR, children=[audit_artifacts, interview_staff])
audit_assess = OperatorPOWL(operator=Operator.XOR, children=[audit_interview, assess_risks])
audit_retrieval = OperatorPOWL(operator=Operator.XOR, children=[audit_assess, plan_retrieval])
audit_legal = OperatorPOWL(operator=Operator.XOR, children=[audit_retrieval, legal_review])
audit_security = OperatorPOWL(operator=Operator.XOR, children=[audit_legal, security_check])
audit_recovery = OperatorPOWL(operator=Operator.XOR, children=[audit_security, execute_recovery])
audit_validate = OperatorPOWL(operator=Operator.XOR, children=[audit_recovery, validate_items])
audit_restore = OperatorPOWL(operator=Operator.XOR, children=[audit_validate, restore_function])
audit_update = OperatorPOWL(operator=Operator.XOR, children=[audit_restore, update_systems])
audit_train = OperatorPOWL(operator=Operator.XOR, children=[audit_update, train_users])
audit_findings = OperatorPOWL(operator=Operator.XOR, children=[audit_train, document_findings])
audit_archive = OperatorPOWL(operator=Operator.XOR, children=[audit_findings, archive_records])
audit_lessons = OperatorPOWL(operator=Operator.XOR, children=[audit_archive, review_lessons])
audit_close = OperatorPOWL(operator=Operator.XOR, children=[audit_lessons, close_process])

root = StrictPartialOrder(nodes=[audit_close])
root.order.add_edge(audit_close, audit_lessons)
root.order.add_edge(audit_lessons, audit_archive)
root.order.add_edge(audit_archive, audit_findings)
root.order.add_edge(audit_findings, audit_train)
root.order.add_edge(audit_train, audit_update)
root.order.add_edge(audit_update, audit_restore)
root.order.add_edge(audit_restore, audit_validate)
root.order.add_edge(audit_validate, audit_recovery)
root.order.add_edge(audit_recovery, audit_security)
root.order.add_edge(audit_security, audit_legal)
root.order.add_edge(audit_legal, audit_retrieval)
root.order.add_edge(audit_retrieval, audit_assess)
root.order.add_edge(audit_assess, audit_interview)
root.order.add_edge(audit_interview, audit_artifacts)
root.order.add_edge(audit_artifacts, interview_staff)

print(root)