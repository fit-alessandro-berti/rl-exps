import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

ThreatAssess = Transition(label='Threat Assess')
AlertDispatch = Transition(label='Alert Dispatch')
ResourceCheck = Transition(label='Resource Check')
TeamMobilize = Transition(label='Team Mobilize')
CommandSetup = Transition(label='Command Setup')
IntelGather = Transition(label='Intel Gather')
RiskEvaluate = Transition(label='Risk Evaluate')
PrioritySet = Transition(label='Priority Set')
FieldDeploy = Transition(label='Field Deploy')
CommSync = Transition(label='Comm Sync')
PublicUpdate = Transition(label='Public Update')
SupplyManage = Transition(label='Supply Manage')
SafetyMonitor = Transition(label='Safety Monitor')
IncidentLog = Transition(label='Incident Log')
RecoveryPlan = Transition(label='Recovery Plan')
DebriefTeam = Transition(label='Debrief Team')
DataArchive = Transition(label='Data Archive')

skip = SilentTransition()
xor1 = OperatorPOWL(operator=Operator.XOR, children=[TeamMobilize, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[IntelGather, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[RiskEvaluate, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[PrioritySet, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[FieldDeploy, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[CommSync, skip])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[PublicUpdate, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[SupplyManage, skip])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[SafetyMonitor, skip])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[IncidentLog, skip])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[RecoveryPlan, skip])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[DebriefTeam, skip])
xor13 = OperatorPOWL(operator=Operator.XOR, children=[DataArchive, skip])

root = StrictPartialOrder(nodes=[ThreatAssess, AlertDispatch, ResourceCheck, xor1, xor2, xor3, xor4, xor5, xor6, xor7, xor8, xor9, xor10, xor11, xor12, xor13])
root.order.add_edge(ThreatAssess, AlertDispatch)
root.order.add_edge(AlertDispatch, ResourceCheck)
root.order.add_edge(ResourceCheck, xor1)
root.order.add_edge(ResourceCheck, xor2)
root.order.add_edge(ResourceCheck, xor3)
root.order.add_edge(ResourceCheck, xor4)
root.order.add_edge(ResourceCheck, xor5)
root.order.add_edge(ResourceCheck, xor6)
root.order.add_edge(ResourceCheck, xor7)
root.order.add_edge(ResourceCheck, xor8)
root.order.add_edge(ResourceCheck, xor9)
root.order.add_edge(ResourceCheck, xor10)
root.order.add_edge(ResourceCheck, xor11)
root.order.add_edge(ResourceCheck, xor12)
root.order.add_edge(ResourceCheck, xor13)