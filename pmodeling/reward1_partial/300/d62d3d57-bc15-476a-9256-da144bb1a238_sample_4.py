import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
site_survey = Transition(label='Site Survey')
structure_assess = Transition(label='Structure Assess')
system_design = Transition(label='System Design')
crop_select = Transition(label='Crop Select')
permit_obtain = Transition(label='Permit Obtain')
enviro_setup = Transition(label='Enviro Setup')
irrigation_plan = Transition(label='Irrigation Plan')
sensor_install = Transition(label='Sensor Install')
ai_calibration = Transition(label='AI Calibration')
staff_train = Transition(label='Staff Train')
nutrient_mix = Transition(label='Nutrient Mix')
pest_monitor = Transition(label='Pest Monitor')
yield_analyze = Transition(label='Yield Analyze')
market_align = Transition(label='Market Align')
launch_farm = Transition(label='Launch Farm')
skip = SilentTransition()
xor = OperatorPOWL(operator=Operator.XOR, children=[permit_obtain, skip])
xor1 = OperatorPOWL(operator=Operator.XOR, children=[enviro_setup, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[irrigation_plan, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[sensor_install, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[ai_calibration, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[staff_train, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, skip])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[pest_monitor, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[yield_analyze, skip])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[market_align, skip])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[launch_farm, skip])
loop1 = OperatorPOWL(operator=Operator.LOOP, children=[site_survey, structure_assess])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[system_design, crop_select])
loop3 = OperatorPOWL(operator=Operator.LOOP, children=[xor])
loop4 = OperatorPOWL(operator=Operator.LOOP, children=[xor1])
loop5 = OperatorPOWL(operator=Operator.LOOP, children=[xor2])
loop6 = OperatorPOWL(operator=Operator.LOOP, children=[xor3])
loop7 = OperatorPOWL(operator=Operator.LOOP, children=[xor4])
loop8 = OperatorPOWL(operator=Operator.LOOP, children=[xor5])
loop9 = OperatorPOWL(operator=Operator.LOOP, children=[xor6])
loop10 = OperatorPOWL(operator=Operator.LOOP, children=[xor7])
loop11 = OperatorPOWL(operator=Operator.LOOP, children=[xor8])
loop12 = OperatorPOWL(operator=Operator.LOOP, children=[xor9])
loop13 = OperatorPOWL(operator=Operator.LOOP, children=[xor10])
root = StrictPartialOrder(nodes=[loop1, loop2, loop3, loop4, loop5, loop6, loop7, loop8, loop9, loop10, loop11, loop12, loop13])
root.order.add_edge(loop1, loop2)
root.order.add_edge(loop2, loop3)
root.order.add_edge(loop3, loop4)
root.order.add_edge(loop4, loop5)
root.order.add_edge(loop5, loop6)
root.order.add_edge(loop6, loop7)
root.order.add_edge(loop7, loop8)
root.order.add_edge(loop8, loop9)
root.order.add_edge(loop9, loop10)
root.order.add_edge(loop10, loop11)
root.order.add_edge(loop11, loop12)
root.order.add_edge(loop12, loop13)
root.order.add_edge(loop13, launch_farm)