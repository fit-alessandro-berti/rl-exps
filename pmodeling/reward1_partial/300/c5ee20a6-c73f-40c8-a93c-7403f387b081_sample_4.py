from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

initial_assess = Transition(label='Initial Assess')
condition_scan = Transition(label='Condition Scan')
material_test = Transition(label='Material Test')
historical_check = Transition(label='Historical Check')
provenance_verify = Transition(label='Provenance Verify')
parts_sourcing = Transition(label='Parts Sourcing')
gentle_clean = Transition(label='Gentle Clean')
stabilize_item = Transition(label='Stabilize Item')
structural_repair = Transition(label='Structural Repair')
surface_finish = Transition(label='Surface Finish')
expert_consult = Transition(label='Expert Consult')
archival_review = Transition(label='Archival Review')
ethics_audit = Transition(label='Ethics Audit')
quality_inspect = Transition(label='Quality Inspect')
photo_document = Transition(label='Photo Document')
packaging_prep = Transition(label='Packaging Prep')
report_generate = Transition(label='Report Generate')
certify_provenance = Transition(label='Certify Provenance')

xor1 = OperatorPOWL(operator=Operator.XOR, children=[provenance_verify, expert_consult])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[archival_review, ethics_audit])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[quality_inspect, packaging_prep])

loop = OperatorPOWL(operator=Operator.LOOP, children=[material_test, xor1])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[parts_sourcing, xor2])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[gentle_clean, xor3])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[structural_repair, xor4])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[surface_finish, xor5])

root = StrictPartialOrder(nodes=[initial_assess, condition_scan, loop, xor6, xor7, report_generate, certify_provenance])
root.order.add_edge(initial_assess, condition_scan)
root.order.add_edge(condition_scan, loop)
root.order.add_edge(loop, xor6)
root.order.add_edge(xor6, xor7)
root.order.add_edge(xor7, report_generate)
root.order.add_edge(report_generate, certify_provenance)