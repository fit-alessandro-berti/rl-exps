import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define transitions for each activity
light_sourcing = Transition(label='Light Sourcing')
nutrient_order = Transition(label='Nutrient Order')
climate_setup = Transition(label='Climate Setup')
growth_planning = Transition(label='Growth Planning')
seed_planting = Transition(label='Seed Planting')
irrigation_check = Transition(label='Irrigation Check')
pest_monitoring = Transition(label='Pest Monitoring')
energy_tracking = Transition(label='Energy Tracking')
quality_testing = Transition(label='Quality Testing')
data_analysis = Transition(label='Data Analysis')
equipment_repair = Transition(label='Equipment Repair')
packaging_prep = Transition(label='Packaging Prep')
inventory_update = Transition(label='Inventory Update')
delivery_scheduling = Transition(label='Delivery Scheduling')
customer_feedback = Transition(label='Customer Feedback')
market_forecast = Transition(label='Market Forecast')

# Define partial order nodes
light_sourcing_node = StrictPartialOrder(nodes=[light_sourcing])
nutrient_order_node = StrictPartialOrder(nodes=[nutrient_order])
climate_setup_node = StrictPartialOrder(nodes=[climate_setup])
growth_planning_node = StrictPartialOrder(nodes=[growth_planning])
seed_planting_node = StrictPartialOrder(nodes=[seed_planting])
irrigation_check_node = StrictPartialOrder(nodes=[irrigation_check])
pest_monitoring_node = StrictPartialOrder(nodes=[pest_monitoring])
energy_tracking_node = StrictPartialOrder(nodes=[energy_tracking])
quality_testing_node = StrictPartialOrder(nodes=[quality_testing])
data_analysis_node = StrictPartialOrder(nodes=[data_analysis])
equipment_repair_node = StrictPartialOrder(nodes=[equipment_repair])
packaging_prep_node = StrictPartialOrder(nodes=[packaging_prep])
inventory_update_node = StrictPartialOrder(nodes=[inventory_update])
delivery_scheduling_node = StrictPartialOrder(nodes=[delivery_scheduling])
customer_feedback_node = StrictPartialOrder(nodes=[customer_feedback])
market_forecast_node = StrictPartialOrder(nodes=[market_forecast])

# Define dependencies between nodes
root = StrictPartialOrder(nodes=[light_sourcing_node, nutrient_order_node, climate_setup_node, growth_planning_node, seed_planting_node, irrigation_check_node, pest_monitoring_node, energy_tracking_node, quality_testing_node, data_analysis_node, equipment_repair_node, packaging_prep_node, inventory_update_node, delivery_scheduling_node, customer_feedback_node, market_forecast_node])
root.order.add_edge(light_sourcing_node, nutrient_order_node)
root.order.add_edge(light_sourcing_node, climate_setup_node)
root.order.add_edge(nutrient_order_node, growth_planning_node)
root.order.add_edge(climate_setup_node, growth_planning_node)
root.order.add_edge(growth_planning_node, seed_planting_node)
root.order.add_edge(seed_planting_node, irrigation_check_node)
root.order.add_edge(irrigation_check_node, pest_monitoring_node)
root.order.add_edge(pest_monitoring_node, energy_tracking_node)
root.order.add_edge(energy_tracking_node, quality_testing_node)
root.order.add_edge(quality_testing_node, data_analysis_node)
root.order.add_edge(data_analysis_node, equipment_repair_node)
root.order.add_edge(equipment_repair_node, packaging_prep_node)
root.order.add_edge(packaging_prep_node, inventory_update_node)
root.order.add_edge(inventory_update_node, delivery_scheduling_node)
root.order.add_edge(delivery_scheduling_node, customer_feedback_node)
root.order.add_edge(customer_feedback_node, market_forecast_node)