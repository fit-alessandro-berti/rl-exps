from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
system_design = Transition(label='System Design')
module_build = Transition(label='Module Build')
nutrient_mix = Transition(label='Nutrient Mix')
seed_selection = Transition(label='Seed Selection')
planting_plan = Transition(label='Planting Plan')
irrigation_setup = Transition(label='Irrigation Setup')
climate_control = Transition(label='Climate Control')
lighting_adjust = Transition(label='Lighting Adjust')
pest_monitor = Transition(label='Pest Monitor')
waste_cycle = Transition(label='Waste Cycle')
data_capture = Transition(label='Data Capture')
yield_forecast = Transition(label='Yield Forecast')
regulation_check = Transition(label='Regulation Check')
community_meet = Transition(label='Community Meet')
harvest_prep = Transition(label='Harvest Prep')
market_link = Transition(label='Market Link')

# Define the process
site_survey_node = StrictPartialOrder(nodes=[site_survey])
system_design_node = StrictPartialOrder(nodes=[system_design])
module_build_node = StrictPartialOrder(nodes=[module_build])
nutrient_mix_node = StrictPartialOrder(nodes=[nutrient_mix])
seed_selection_node = StrictPartialOrder(nodes=[seed_selection])
planting_plan_node = StrictPartialOrder(nodes=[planting_plan])
irrigation_setup_node = StrictPartialOrder(nodes=[irrigation_setup])
climate_control_node = StrictPartialOrder(nodes=[climate_control])
lighting_adjust_node = StrictPartialOrder(nodes=[lighting_adjust])
pest_monitor_node = StrictPartialOrder(nodes=[pest_monitor])
waste_cycle_node = StrictPartialOrder(nodes=[waste_cycle])
data_capture_node = StrictPartialOrder(nodes=[data_capture])
yield_forecast_node = StrictPartialOrder(nodes=[yield_forecast])
regulation_check_node = StrictPartialOrder(nodes=[regulation_check])
community_meet_node = StrictPartialOrder(nodes=[community_meet])
harvest_prep_node = StrictPartialOrder(nodes=[harvest_prep])
market_link_node = StrictPartialOrder(nodes=[market_link])

# Define the dependencies
root = StrictPartialOrder(nodes=[site_survey_node, system_design_node, module_build_node, nutrient_mix_node, seed_selection_node, planting_plan_node, irrigation_setup_node, climate_control_node, lighting_adjust_node, pest_monitor_node, waste_cycle_node, data_capture_node, yield_forecast_node, regulation_check_node, community_meet_node, harvest_prep_node, market_link_node])
root.order.add_edge(site_survey_node, system_design_node)
root.order.add_edge(system_design_node, module_build_node)
root.order.add_edge(module_build_node, nutrient_mix_node)
root.order.add_edge(nutrient_mix_node, seed_selection_node)
root.order.add_edge(seed_selection_node, planting_plan_node)
root.order.add_edge(planting_plan_node, irrigation_setup_node)
root.order.add_edge(irrigation_setup_node, climate_control_node)
root.order.add_edge(climate_control_node, lighting_adjust_node)
root.order.add_edge(lighting_adjust_node, pest_monitor_node)
root.order.add_edge(pest_monitor_node, waste_cycle_node)
root.order.add_edge(waste_cycle_node, data_capture_node)
root.order.add_edge(data_capture_node, yield_forecast_node)
root.order.add_edge(yield_forecast_node, regulation_check_node)
root.order.add_edge(regulation_check_node, community_meet_node)
root.order.add_edge(community_meet_node, harvest_prep_node)
root.order.add_edge(harvest_prep_node, market_link_node)

# Print the result
print(root)