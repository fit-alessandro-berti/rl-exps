from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_analysis = Transition(label='Site Analysis')
zoning_approval = Transition(label='Zoning Approval')
structural_check = Transition(label='Structural Check')
building_retrofit = Transition(label='Building Retrofit')
hydroponic_setup = Transition(label='Hydroponic Setup')
climate_control = Transition(label='Climate Control')
nutrient_design = Transition(label='Nutrient Design')
staff_hiring = Transition(label='Staff Hiring')
staff_training = Transition(label='Staff Training')
software_install = Transition(label='Software Install')
system_testing = Transition(label='System Testing')
crop_planting = Transition(label='Crop Planting')
growth_monitor = Transition(label='Growth Monitor')
pest_control = Transition(label='Pest Control')
harvest_plan = Transition(label='Harvest Plan')

skip = SilentTransition()

xor = OperatorPOWL(operator=Operator.XOR, children=[staff_training, software_install])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[system_testing, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[crop_planting, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[growth_monitor, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[pest_control, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[harvest_plan, skip])

root = StrictPartialOrder(nodes=[site_analysis, zoning_approval, structural_check, building_retrofit, hydroponic_setup, climate_control, nutrient_design, xor, xor2, xor3, xor4, xor5, xor6])
root.order.add_edge(site_analysis, zoning_approval)
root.order.add_edge(zoning_approval, structural_check)
root.order.add_edge(structural_check, building_retrofit)
root.order.add_edge(building_retrofit, hydroponic_setup)
root.order.add_edge(hydroponic_setup, climate_control)
root.order.add_edge(climate_control, nutrient_design)
root.order.add_edge(nutrient_design, xor)
root.order.add_edge(xor, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)