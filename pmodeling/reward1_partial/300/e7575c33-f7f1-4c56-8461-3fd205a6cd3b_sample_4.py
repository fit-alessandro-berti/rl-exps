import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define the POWL model for each activity
artifact_intake = Transition(label='Artifact Intake')
catalog_entry = Transition(label='Catalog Entry')
visual_inspect = Transition(label='Visual Inspect')
material_test = Transition(label='Material Test')
spectroscopy = Transition(label='Spectroscopy')
historical_check = Transition(label='Historical Check')
provenance_trace = Transition(label='Provenance Trace')
style_compare = Transition(label='Style Compare')
three_d_scanning = Transition(label='3D Scanning')
condition_assess = Transition(label='Condition Assess')
preservation_plan = Transition(label='Preservation Plan')
legal_review = Transition(label='Legal Review')
report_draft = Transition(label='Report Draft')
report_finalize = Transition(label='Report Finalize')
archive_data = Transition(label='Archive Data')
sale_prep = Transition(label='Sale Prep')

# Define the POWL model for the process
root = StrictPartialOrder(nodes=[
    artifact_intake, catalog_entry, visual_inspect, material_test, spectroscopy,
    historical_check, provenance_trace, style_compare, three_d_scanning,
    condition_assess, preservation_plan, legal_review, report_draft,
    report_finalize, archive_data, sale_prep
])

# Define the dependencies between activities
root.order.add_edge(artifact_intake, catalog_entry)
root.order.add_edge(artifact_intake, visual_inspect)
root.order.add_edge(artifact_intake, material_test)
root.order.add_edge(artifact_intake, spectroscopy)
root.order.add_edge(artifact_intake, historical_check)
root.order.add_edge(artifact_intake, provenance_trace)
root.order.add_edge(artifact_intake, style_compare)
root.order.add_edge(artifact_intake, three_d_scanning)
root.order.add_edge(artifact_intake, condition_assess)
root.order.add_edge(artifact_intake, preservation_plan)
root.order.add_edge(artifact_intake, legal_review)
root.order.add_edge(artifact_intake, report_draft)
root.order.add_edge(artifact_intake, report_finalize)
root.order.add_edge(artifact_intake, archive_data)
root.order.add_edge(artifact_intake, sale_prep)

# Define the dependencies between activities (continued)
root.order.add_edge(catalog_entry, visual_inspect)
root.order.add_edge(catalog_entry, material_test)
root.order.add_edge(catalog_entry, spectroscopy)
root.order.add_edge(catalog_entry, historical_check)
root.order.add_edge(catalog_entry, provenance_trace)
root.order.add_edge(catalog_entry, style_compare)
root.order.add_edge(catalog_entry, three_d_scanning)
root.order.add_edge(catalog_entry, condition_assess)
root.order.add_edge(catalog_entry, preservation_plan)
root.order.add_edge(catalog_entry, legal_review)
root.order.add_edge(catalog_entry, report_draft)
root.order.add_edge(catalog_entry, report_finalize)
root.order.add_edge(catalog_entry, archive_data)
root.order.add_edge(catalog_entry, sale_prep)

# Define the dependencies between activities (continued)
root.order.add_edge(visual_inspect, material_test)
root.order.add_edge(visual_inspect, spectroscopy)
root.order.add_edge(visual_inspect, historical_check)
root.order.add_edge(visual_inspect, provenance_trace)
root.order.add_edge(visual_inspect, style_compare)
root.order.add_edge(visual_inspect, three_d_scanning)
root.order.add_edge(visual_inspect, condition_assess)
root.order.add_edge(visual_inspect, preservation_plan)
root.order.add_edge(visual_inspect, legal_review)
root.order.add_edge(visual_inspect, report_draft)
root.order.add_edge(visual_inspect, report_finalize)
root.order.add_edge(visual_inspect, archive_data)
root.order.add_edge(visual_inspect, sale_prep)

# Define the dependencies between activities (continued)
root.order.add_edge(material_test, spectroscopy)
root.order.add_edge(material_test, historical_check)
root.order.add_edge(material_test, provenance_trace)
root.order.add_edge(material_test, style_compare)
root.order.add_edge(material_test, three_d_scanning)
root.order.add_edge(material_test, condition_assess)
root.order.add_edge(material_test, preservation_plan)
root.order.add_edge(material_test, legal_review)
root.order.add_edge(material_test, report_draft)
root.order.add_edge(material_test, report_finalize)
root.order.add_edge(material_test, archive_data)
root.order.add_edge(material_test, sale_prep)

# Define the dependencies between activities (continued)
root.order.add_edge(spectroscopy, historical_check)
root.order.add_edge(spectroscopy, provenance_trace)
root.order.add_edge(spectroscopy, style_compare)
root.order.add_edge(spectroscopy, three_d_scanning)
root.order.add_edge(spectroscopy, condition_assess)
root.order.add_edge(spectroscopy, preservation_plan)
root.order.add_edge(spectroscopy, legal_review)
root.order.add_edge(spectroscopy, report_draft)
root.order.add_edge(spectroscopy, report_finalize)
root.order.add_edge(spectroscopy, archive_data)
root.order.add_edge(spectroscopy, sale_prep)

# Define the dependencies between activities (continued)
root.order.add_edge(historical_check, provenance_trace)
root.order.add_edge(historical_check, style_compare)
root.order.add_edge(historical_check, three_d_scanning)
root.order.add_edge(historical_check, condition_assess)
root.order.add_edge(historical_check, preservation_plan)
root.order.add_edge(historical_check, legal_review)
root.order.add_edge(historical_check, report_draft)
root.order.add_edge(historical_check, report_finalize)
root.order.add_edge(historical_check, archive_data)
root.order.add_edge(historical_check, sale_prep)

# Define the dependencies between activities (continued)
root.order.add_edge(provenance_trace, style_compare)
root.order.add_edge(provenance_trace, three_d_scanning)
root.order.add_edge(provenance_trace, condition_assess)
root.order.add_edge(provenance_trace, preservation_plan)
root.order.add_edge(provenance_trace, legal_review)
root.order.add_edge(provenance_trace, report_draft)
root.order.add_edge(provenance_trace, report_finalize)
root.order.add_edge(provenance_trace, archive_data)
root.order.add_edge(provenance_trace, sale_prep)

# Define the dependencies between activities (continued)
root.order.add_edge(style_compare, three_d_scanning)
root.order.add_edge(style_compare, condition_assess)
root.order.add_edge(style_compare, preservation_plan)
root.order.add_edge(style_compare, legal_review)
root.order.add_edge(style_compare, report_draft)
root.order.add_edge(style_compare, report_finalize)
root.order.add_edge(style_compare, archive_data)
root.order.add_edge(style_compare, sale_prep)

# Define the dependencies between activities (continued)
root.order.add_edge(three_d_scanning, condition_assess)
root.order.add_edge(three_d_scanning, preservation_plan)
root.order.add_edge(three_d_scanning, legal_review)
root.order.add_edge(three_d_scanning, report_draft)
root.order.add_edge(three_d_scanning, report_finalize)
root.order.add_edge(three_d_scanning, archive_data)
root.order.add_edge(three_d_scanning, sale_prep)

# Define the dependencies between activities (continued)
root.order.add_edge(condition_assess, preservation_plan)
root.order.add_edge(condition_assess, legal_review)
root.order.add_edge(condition_assess, report_draft)
root.order.add_edge(condition_assess, report_finalize)
root.order.add_edge(condition_assess, archive_data)
root.order.add_edge(condition_assess, sale_prep)

# Define the dependencies between activities (continued)
root.order.add_edge(preservation_plan, legal_review)
root.order.add_edge(preservation_plan, report_draft)
root.order.add_edge(preservation_plan, report_finalize)
root.order.add_edge(preservation_plan, archive_data)
root.order.add_edge(preservation_plan, sale_prep)

# Define the dependencies between activities (continued)
root.order.add_edge(legal_review, report_draft)
root.order.add_edge(legal_review, report_finalize)
root.order.add_edge(legal_review, archive_data)
root.order.add_edge(legal_review, sale_prep)

# Define the dependencies between activities (continued)
root.order.add_edge(report_draft, report_finalize)
root.order.add_edge(report_draft, archive_data)
root.order.add_edge(report_draft, sale_prep)

# Define the dependencies between activities (continued)
root.order.add_edge(report_finalize, archive_data)
root.order.add_edge(report_finalize, sale_prep)

# Define the dependencies between activities (continued)
root.order.add_edge(archive_data, sale_prep)