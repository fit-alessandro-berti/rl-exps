import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

drone_design = Transition(label='Drone Design')
regulatory_check = Transition(label='Regulatory Check')
nav_system = Transition(label='Nav System')
partner_setup = Transition(label='Partner Setup')
operator_training = Transition(label='Operator Training')
test_flights = Transition(label='Test Flights')
weather_review = Transition(label='Weather Review')
route_optimize = Transition(label='Route Optimize')
parts_logistics = Transition(label='Parts Logistics')
feedback_loop = Transition(label='Feedback Loop')
risk_assess = Transition(label='Risk Assess')
emergency_plan = Transition(label='Emergency Plan')
compliance_audit = Transition(label='Compliance Audit')
data_sync = Transition(label='Data Sync')
service_launch = Transition(label='Service Launch')

skip = SilentTransition()

loop1 = OperatorPOWL(operator=Operator.LOOP, children=[drone_design, regulatory_check, nav_system, partner_setup, operator_training, test_flights, weather_review, route_optimize, parts_logistics, feedback_loop, risk_assess, emergency_plan, compliance_audit, data_sync])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[drone_design, regulatory_check, nav_system, partner_setup, operator_training, test_flights, weather_review, route_optimize, parts_logistics, feedback_loop, risk_assess, emergency_plan, compliance_audit, data_sync])
loop3 = OperatorPOWL(operator=Operator.LOOP, children=[drone_design, regulatory_check, nav_system, partner_setup, operator_training, test_flights, weather_review, route_optimize, parts_logistics, feedback_loop, risk_assess, emergency_plan, compliance_audit, data_sync])
loop4 = OperatorPOWL(operator=Operator.LOOP, children=[drone_design, regulatory_check, nav_system, partner_setup, operator_training, test_flights, weather_review, route_optimize, parts_logistics, feedback_loop, risk_assess, emergency_plan, compliance_audit, data_sync])
loop5 = OperatorPOWL(operator=Operator.LOOP, children=[drone_design, regulatory_check, nav_system, partner_setup, operator_training, test_flights, weather_review, route_optimize, parts_logistics, feedback_loop, risk_assess, emergency_plan, compliance_audit, data_sync])
loop6 = OperatorPOWL(operator=Operator.LOOP, children=[drone_design, regulatory_check, nav_system, partner_setup, operator_training, test_flights, weather_review, route_optimize, parts_logistics, feedback_loop, risk_assess, emergency_plan, compliance_audit, data_sync])
loop7 = OperatorPOWL(operator=Operator.LOOP, children=[drone_design, regulatory_check, nav_system, partner_setup, operator_training, test_flights, weather_review, route_optimize, parts_logistics, feedback_loop, risk_assess, emergency_plan, compliance_audit, data_sync])
loop8 = OperatorPOWL(operator=Operator.LOOP, children=[drone_design, regulatory_check, nav_system, partner_setup, operator_training, test_flights, weather_review, route_optimize, parts_logistics, feedback_loop, risk_assess, emergency_plan, compliance_audit, data_sync])
loop9 = OperatorPOWL(operator=Operator.LOOP, children=[drone_design, regulatory_check, nav_system, partner_setup, operator_training, test_flights, weather_review, route_optimize, parts_logistics, feedback_loop, risk_assess, emergency_plan, compliance_audit, data_sync])
loop10 = OperatorPOWL(operator=Operator.LOOP, children=[drone_design, regulatory_check, nav_system, partner_setup, operator_training, test_flights, weather_review, route_optimize, parts_logistics, feedback_loop, risk_assess, emergency_plan, compliance_audit, data_sync])
loop11 = OperatorPOWL(operator=Operator.LOOP, children=[drone_design, regulatory_check, nav_system, partner_setup, operator_training, test_flights, weather_review, route_optimize, parts_logistics, feedback_loop, risk_assess, emergency_plan, compliance_audit, data_sync])
loop12 = OperatorPOWL(operator=Operator.LOOP, children=[drone_design, regulatory_check, nav_system, partner_setup, operator_training, test_flights, weather_review, route_optimize, parts_logistics, feedback_loop, risk_assess, emergency_plan, compliance_audit, data_sync])
loop13 = OperatorPOWL(operator=Operator.LOOP, children=[drone_design, regulatory_check, nav_system, partner_setup, operator_training, test_flights, weather_review, route_optimize, parts_logistics, feedback_loop, risk_assess, emergency_plan, compliance_audit, data_sync])
loop14 = OperatorPOWL(operator=Operator.LOOP, children=[drone_design, regulatory_check, nav_system, partner_setup, operator_training, test_flights, weather_review, route_optimize, parts_logistics, feedback_loop, risk_assess, emergency_plan, compliance_audit, data_sync])
loop15 = OperatorPOWL(operator=Operator.LOOP, children=[drone_design, regulatory_check, nav_system, partner_setup, operator_training, test_flights, weather_review, route_optimize, parts_logistics, feedback_loop, risk_assess, emergency_plan, compliance_audit, data_sync])
loop16 = OperatorPOWL(operator=Operator.LOOP, children=[drone_design, regulatory_check, nav_system, partner_setup, operator_training, test_flights, weather_review, route_optimize, parts_logistics, feedback_loop, risk_assess, emergency_plan, compliance_audit, data_sync])
loop17 = OperatorPOWL(operator=Operator.LOOP, children=[drone_design, regulatory_check, nav_system, partner_setup, operator_training, test_flights, weather_review, route_optimize, parts_logistics, feedback_loop, risk_assess, emergency_plan, compliance_audit, data_sync])
loop18 = OperatorPOWL(operator=Operator.LOOP, children=[drone_design, regulatory_check, nav_system, partner_setup, operator_training, test_flights, weather_review, route_optimize, parts_logistics, feedback_loop, risk_assess, emergency_plan, compliance_audit, data_sync])
loop19 = OperatorPOWL(operator=Operator.LOOP, children=[drone_design, regulatory_check, nav_system, partner_setup, operator_training, test_flights, weather_review, route_optimize, parts_logistics, feedback_loop, risk_assess, emergency_plan, compliance_audit, data_sync])
loop20 = OperatorPOWL(operator=Operator.LOOP, children=[drone_design, regulatory_check, nav_system, partner_setup, operator_training, test_flights, weather_review, route_optimize, parts_logistics, feedback_loop, risk_assess, emergency_plan, compliance_audit, data_sync])

root = StrictPartialOrder(nodes=[loop1, loop2, loop3, loop4, loop5, loop6, loop7, loop8, loop9, loop10, loop11, loop12, loop13, loop14, loop15, loop16, loop17, loop18, loop19, loop20])
root.order.add_edge(loop1, loop2)
root.order.add_edge(loop2, loop3)
root.order.add_edge(loop3, loop4)
root.order.add_edge(loop4, loop5)
root.order.add_edge(loop5, loop6)
root.order.add_edge(loop6, loop7)
root.order.add_edge(loop7, loop8)
root.order.add_edge(loop8, loop9)
root.order.add_edge(loop9, loop10)
root.order.add_edge(loop10, loop11)
root.order.add_edge(loop11, loop12)
root.order.add_edge(loop12, loop13)
root.order.add_edge(loop13, loop14)
root.order.add_edge(loop14, loop15)
root.order.add_edge(loop15, loop16)
root.order.add_edge(loop16, loop17)
root.order.add_edge(loop17, loop18)
root.order.add_edge(loop18, loop19)
root.order.add_edge(loop19, loop20)
root.order.add_edge(loop20, loop1)