import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
design_layout = Transition(label='Design Layout')
system_build = Transition(label='System Build')
install_sensors = Transition(label='Install Sensors')
set_controls = Transition(label='Set Controls')
test_modules = Transition(label='Test Modules')
select_crops = Transition(label='Select Crops')
configure_irrigation = Transition(label='Configure Irrigation')
deploy_ai = Transition(label='Deploy AI')
monitor_pests = Transition(label='Monitor Pests')
manage_energy = Transition(label='Manage Energy')
recycle_waste = Transition(label='Recycle Waste')
train_staff = Transition(label='Train Staff')
launch_market = Transition(label='Launch Market')
engage_community = Transition(label='Engage Community')

skip = SilentTransition()

site_survey_to_design_layout = OperatorPOWL(operator=Operator.XOR, children=[site_survey, design_layout])
design_layout_to_system_build = OperatorPOWL(operator=Operator.XOR, children=[design_layout, system_build])
system_build_to_install_sensors = OperatorPOWL(operator=Operator.XOR, children=[system_build, install_sensors])
install_sensors_to_set_controls = OperatorPOWL(operator=Operator.XOR, children=[install_sensors, set_controls])
set_controls_to_test_modules = OperatorPOWL(operator=Operator.XOR, children=[set_controls, test_modules])
test_modules_to_select_crops = OperatorPOWL(operator=Operator.XOR, children=[test_modules, select_crops])
select_crops_to_configure_irrigation = OperatorPOWL(operator=Operator.XOR, children=[select_crops, configure_irrigation])
configure_irrigation_to_deploy_ai = OperatorPOWL(operator=Operator.XOR, children=[configure_irrigation, deploy_ai])
deploy_ai_to_monitor_pests = OperatorPOWL(operator=Operator.XOR, children=[deploy_ai, monitor_pests])
monitor_pests_to_manage_energy = OperatorPOWL(operator=Operator.XOR, children=[monitor_pests, manage_energy])
manage_energy_to_recycle_waste = OperatorPOWL(operator=Operator.XOR, children=[manage_energy, recycle_waste])
recycle_waste_to_train_staff = OperatorPOWL(operator=Operator.XOR, children=[recycle_waste, train_staff])
train_staff_to_launch_market = OperatorPOWL(operator=Operator.XOR, children=[train_staff, launch_market])
launch_market_to_engage_community = OperatorPOWL(operator=Operator.XOR, children=[launch_market, engage_community])

root = StrictPartialOrder(nodes=[site_survey_to_design_layout, design_layout_to_system_build, system_build_to_install_sensors, install_sensors_to_set_controls, set_controls_to_test_modules, test_modules_to_select_crops, select_crops_to_configure_irrigation, configure_irrigation_to_deploy_ai, deploy_ai_to_monitor_pests, monitor_pests_to_manage_energy, manage_energy_to_recycle_waste, recycle_waste_to_train_staff, train_staff_to_launch_market, launch_market_to_engage_community])

root.order.add_edge(site_survey_to_design_layout, design_layout_to_system_build)
root.order.add_edge(design_layout_to_system_build, system_build_to_install_sensors)
root.order.add_edge(system_build_to_install_sensors, install_sensors_to_set_controls)
root.order.add_edge(install_sensors_to_set_controls, set_controls_to_test_modules)
root.order.add_edge(set_controls_to_test_modules, test_modules_to_select_crops)
root.order.add_edge(test_modules_to_select_crops, select_crops_to_configure_irrigation)
root.order.add_edge(select_crops_to_configure_irrigation, configure_irrigation_to_deploy_ai)
root.order.add_edge(configure_irrigation_to_deploy_ai, deploy_ai_to_monitor_pests)
root.order.add_edge(deploy_ai_to_monitor_pests, monitor_pests_to_manage_energy)
root.order.add_edge(monitor_pests_to_manage_energy, manage_energy_to_recycle_waste)
root.order.add_edge(manage_energy_to_recycle_waste, recycle_waste_to_train_staff)
root.order.add_edge(recycle_waste_to_train_staff, train_staff_to_launch_market)
root.order.add_edge(train_staff_to_launch_market, launch_market_to_engage_community)

print(root)