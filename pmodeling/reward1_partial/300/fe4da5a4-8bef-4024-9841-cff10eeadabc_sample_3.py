import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

permit_securing = Transition(label='Permit Securing')
structure_check = Transition(label='Structure Check')
soil_testing = Transition(label='Soil Testing')
water_analysis = Transition(label='Water Analysis')
material_sourcing = Transition(label='Material Sourcing')
planter_setup = Transition(label='Planter Setup')
sensor_install = Transition(label='Sensor Install')
irrigation_setup = Transition(label='Irrigation Setup')
vendor_liaison = Transition(label='Vendor Liaison')
staff_training = Transition(label='Staff Training')
pest_control = Transition(label='Pest Control')
produce_marketing = Transition(label='Produce Marketing')
crop_rotation = Transition(label='Crop Rotation')
health_audit = Transition(label='Health Audit')
waste_composting = Transition(label='Waste Composting')

skip = SilentTransition()

permit_securing_choice = OperatorPOWL(operator=Operator.XOR, children=[permit_securing, skip])
structure_check_choice = OperatorPOWL(operator=Operator.XOR, children=[structure_check, skip])
soil_testing_choice = OperatorPOWL(operator=Operator.XOR, children=[soil_testing, skip])
water_analysis_choice = OperatorPOWL(operator=Operator.XOR, children=[water_analysis, skip])
material_sourcing_choice = OperatorPOWL(operator=Operator.XOR, children=[material_sourcing, skip])
planter_setup_choice = OperatorPOWL(operator=Operator.XOR, children=[planter_setup, skip])
sensor_install_choice = OperatorPOWL(operator=Operator.XOR, children=[sensor_install, skip])
irrigation_setup_choice = OperatorPOWL(operator=Operator.XOR, children=[irrigation_setup, skip])
vendor_liaison_choice = OperatorPOWL(operator=Operator.XOR, children=[vendor_liaison, skip])
staff_training_choice = OperatorPOWL(operator=Operator.XOR, children=[staff_training, skip])
pest_control_choice = OperatorPOWL(operator=Operator.XOR, children=[pest_control, skip])
produce_marketing_choice = OperatorPOWL(operator=Operator.XOR, children=[produce_marketing, skip])
crop_rotation_choice = OperatorPOWL(operator=Operator.XOR, children=[crop_rotation, skip])
health_audit_choice = OperatorPOWL(operator=Operator.XOR, children=[health_audit, skip])
waste_composting_choice = OperatorPOWL(operator=Operator.XOR, children=[waste_composting, skip])

root = StrictPartialOrder(nodes=[permit_securing_choice, structure_check_choice, soil_testing_choice, water_analysis_choice, material_sourcing_choice, planter_setup_choice, sensor_install_choice, irrigation_setup_choice, vendor_liaison_choice, staff_training_choice, pest_control_choice, produce_marketing_choice, crop_rotation_choice, health_audit_choice, waste_composting_choice])

root.order.add_edge(permit_securing_choice, structure_check_choice)
root.order.add_edge(structure_check_choice, soil_testing_choice)
root.order.add_edge(soil_testing_choice, water_analysis_choice)
root.order.add_edge(water_analysis_choice, material_sourcing_choice)
root.order.add_edge(material_sourcing_choice, planter_setup_choice)
root.order.add_edge(planter_setup_choice, sensor_install_choice)
root.order.add_edge(sensor_install_choice, irrigation_setup_choice)
root.order.add_edge(irrigation_setup_choice, vendor_liaison_choice)
root.order.add_edge(vendor_liaison_choice, staff_training_choice)
root.order.add_edge(staff_training_choice, pest_control_choice)
root.order.add_edge(pest_control_choice, produce_marketing_choice)
root.order.add_edge(produce_marketing_choice, crop_rotation_choice)
root.order.add_edge(crop_rotation_choice, health_audit_choice)
root.order.add_edge(health_audit_choice, waste_composting_choice)

print(root)