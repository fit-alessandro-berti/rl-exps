import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

seed_selection = Transition(label='Seed Selection')
nutrient_mix = Transition(label='Nutrient Mix')
environment_setup = Transition(label='Environment Setup')
sensor_deployment = Transition(label='Sensor Deployment')
growth_monitoring = Transition(label='Growth Monitoring')
pest_detection = Transition(label='Pest Detection')
automated_harvest = Transition(label='Automated Harvest')
quality_check = Transition(label='Quality Check')
packaging_prep = Transition(label='Packaging Prep')
biodegradable_pack = Transition(label='Biodegradable Pack')
inventory_sync = Transition(label='Inventory Sync')
demand_forecast = Transition(label='Demand Forecast')
micro_fulfillment = Transition(label='Micro Fulfillment')
local_dispatch = Transition(label='Local Dispatch')
consumer_feedback = Transition(label='Consumer Feedback')
crop_adjustment = Transition(label='Crop Adjustment')

skip = SilentTransition()

seed_selection_to_nutrient_mix = OperatorPOWL(operator=Operator.XOR, children=[seed_selection, nutrient_mix])
nutrient_mix_to_environment_setup = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, environment_setup])
environment_setup_to_sensor_deployment = OperatorPOWL(operator=Operator.XOR, children=[environment_setup, sensor_deployment])
sensor_deployment_to_growth_monitoring = OperatorPOWL(operator=Operator.XOR, children=[sensor_deployment, growth_monitoring])
growth_monitoring_to_pest_detection = OperatorPOWL(operator=Operator.XOR, children=[growth_monitoring, pest_detection])
pest_detection_to_automated_harvest = OperatorPOWL(operator=Operator.XOR, children=[pest_detection, automated_harvest])
automated_harvest_to_quality_check = OperatorPOWL(operator=Operator.XOR, children=[automated_harvest, quality_check])
quality_check_to_packaging_prep = OperatorPOWL(operator=Operator.XOR, children=[quality_check, packaging_prep])
packaging_prep_to_biodegradable_pack = OperatorPOWL(operator=Operator.XOR, children=[packaging_prep, biodegradable_pack])
biodegradable_pack_to_inventory_sync = OperatorPOWL(operator=Operator.XOR, children=[biodegradable_pack, inventory_sync])
inventory_sync_to_demand_forecast = OperatorPOWL(operator=Operator.XOR, children=[inventory_sync, demand_forecast])
demand_forecast_to_micro_fulfillment = OperatorPOWL(operator=Operator.XOR, children=[demand_forecast, micro_fulfillment])
micro_fulfillment_to_local_dispatch = OperatorPOWL(operator=Operator.XOR, children=[micro_fulfillment, local_dispatch])
local_dispatch_to_consumer_feedback = OperatorPOWL(operator=Operator.XOR, children=[local_dispatch, consumer_feedback])
consumer_feedback_to_crop_adjustment = OperatorPOWL(operator=Operator.XOR, children=[consumer_feedback, crop_adjustment])

root = StrictPartialOrder(nodes=[seed_selection_to_nutrient_mix, nutrient_mix_to_environment_setup, environment_setup_to_sensor_deployment, sensor_deployment_to_growth_monitoring, growth_monitoring_to_pest_detection, pest_detection_to_automated_harvest, automated_harvest_to_quality_check, quality_check_to_packaging_prep, packaging_prep_to_biodegradable_pack, biodegradable_pack_to_inventory_sync, inventory_sync_to_demand_forecast, demand_forecast_to_micro_fulfillment, micro_fulfillment_to_local_dispatch, local_dispatch_to_consumer_feedback, consumer_feedback_to_crop_adjustment])
root.order.add_edge(seed_selection_to_nutrient_mix, nutrient_mix_to_environment_setup)
root.order.add_edge(nutrient_mix_to_environment_setup, environment_setup_to_sensor_deployment)
root.order.add_edge(environment_setup_to_sensor_deployment, sensor_deployment_to_growth_monitoring)
root.order.add_edge(sensor_deployment_to_growth_monitoring, growth_monitoring_to_pest_detection)
root.order.add_edge(growth_monitoring_to_pest_detection, pest_detection_to_automated_harvest)
root.order.add_edge(pest_detection_to_automated_harvest, automated_harvest_to_quality_check)
root.order.add_edge(automated_harvest_to_quality_check, quality_check_to_packaging_prep)
root.order.add_edge(quality_check_to_packaging_prep, packaging_prep_to_biodegradable_pack)
root.order.add_edge(packaging_prep_to_biodegradable_pack, biodegradable_pack_to_inventory_sync)
root.order.add_edge(biodegradable_pack_to_inventory_sync, inventory_sync_to_demand_forecast)
root.order.add_edge(inventory_sync_to_demand_forecast, demand_forecast_to_micro_fulfillment)
root.order.add_edge(demand_forecast_to_micro_fulfillment, micro_fulfillment_to_local_dispatch)
root.order.add_edge(micro_fulfillment_to_local_dispatch, local_dispatch_to_consumer_feedback)
root.order.add_edge(local_dispatch_to_consumer_feedback, consumer_feedback_to_crop_adjustment)