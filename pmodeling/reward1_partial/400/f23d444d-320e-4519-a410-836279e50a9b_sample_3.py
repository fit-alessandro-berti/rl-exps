from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
system_design = Transition(label='System Design')
module_build = Transition(label='Module Build')
nutrient_mix = Transition(label='Nutrient Mix')
seed_selection = Transition(label='Seed Selection')
planting_plan = Transition(label='Planting Plan')
irrigation_setup = Transition(label='Irrigation Setup')
climate_control = Transition(label='Climate Control')
lighting_adjust = Transition(label='Lighting Adjust')
pest_monitor = Transition(label='Pest Monitor')
waste_cycle = Transition(label='Waste Cycle')
data_capture = Transition(label='Data Capture')
yield_forecast = Transition(label='Yield Forecast')
regulation_check = Transition(label='Regulation Check')
community_meet = Transition(label='Community Meet')
harvest_prep = Transition(label='Harvest Prep')
market_link = Transition(label='Market Link')

skip = SilentTransition()

site_survey_loop = OperatorPOWL(operator=Operator.LOOP, children=[site_survey])
system_design_loop = OperatorPOWL(operator=Operator.LOOP, children=[system_design])
module_build_loop = OperatorPOWL(operator=Operator.LOOP, children=[module_build])
nutrient_mix_loop = OperatorPOWL(operator=Operator.LOOP, children=[nutrient_mix])
seed_selection_loop = OperatorPOWL(operator=Operator.LOOP, children=[seed_selection])
planting_plan_loop = OperatorPOWL(operator=Operator.LOOP, children=[planting_plan])
irrigation_setup_loop = OperatorPOWL(operator=Operator.LOOP, children=[irrigation_setup])
climate_control_loop = OperatorPOWL(operator=Operator.LOOP, children=[climate_control])
lighting_adjust_loop = OperatorPOWL(operator=Operator.LOOP, children=[lighting_adjust])
pest_monitor_loop = OperatorPOWL(operator=Operator.LOOP, children=[pest_monitor])
waste_cycle_loop = OperatorPOWL(operator=Operator.LOOP, children=[waste_cycle])
data_capture_loop = OperatorPOWL(operator=Operator.LOOP, children=[data_capture])
yield_forecast_loop = OperatorPOWL(operator=Operator.LOOP, children=[yield_forecast])
regulation_check_loop = OperatorPOWL(operator=Operator.LOOP, children=[regulation_check])
community_meet_loop = OperatorPOWL(operator=Operator.LOOP, children=[community_meet])
harvest_prep_loop = OperatorPOWL(operator=Operator.LOOP, children=[harvest_prep])
market_link_loop = OperatorPOWL(operator=Operator.LOOP, children=[market_link])

root = StrictPartialOrder(nodes=[site_survey_loop, system_design_loop, module_build_loop, nutrient_mix_loop, seed_selection_loop, planting_plan_loop, irrigation_setup_loop, climate_control_loop, lighting_adjust_loop, pest_monitor_loop, waste_cycle_loop, data_capture_loop, yield_forecast_loop, regulation_check_loop, community_meet_loop, harvest_prep_loop, market_link_loop])
root.order.add_edge(site_survey_loop, system_design_loop)
root.order.add_edge(system_design_loop, module_build_loop)
root.order.add_edge(module_build_loop, nutrient_mix_loop)
root.order.add_edge(nutrient_mix_loop, seed_selection_loop)
root.order.add_edge(seed_selection_loop, planting_plan_loop)
root.order.add_edge(planting_plan_loop, irrigation_setup_loop)
root.order.add_edge(irrigation_setup_loop, climate_control_loop)
root.order.add_edge(climate_control_loop, lighting_adjust_loop)
root.order.add_edge(lighting_adjust_loop, pest_monitor_loop)
root.order.add_edge(pest_monitor_loop, waste_cycle_loop)
root.order.add_edge(waste_cycle_loop, data_capture_loop)
root.order.add_edge(data_capture_loop, yield_forecast_loop)
root.order.add_edge(yield_forecast_loop, regulation_check_loop)
root.order.add_edge(regulation_check_loop, community_meet_loop)
root.order.add_edge(community_meet_loop, harvest_prep_loop)
root.order.add_edge(harvest_prep_loop, market_link_loop)

print(root)