import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_analysis = Transition(label='Site Analysis')
env_assessment = Transition(label='Env Assessment')
system_design = Transition(label='System Design')
equipment_order = Transition(label='Equipment Order')
seed_selection = Transition(label='Seed Selection')
install_modules = Transition(label='Install Modules')
calibrate_systems = Transition(label='Calibrate Systems')
staff_training = Transition(label='Staff Training')
plant_seeding = Transition(label='Plant Seeding')
iot_monitoring = Transition(label='IoT Monitoring')
data_analytics = Transition(label='Data Analytics')
nutrient_adjust = Transition(label='Nutrient Adjust')
pest_control = Transition(label='Pest Control')
maintenance_check = Transition(label='Maintenance Check')
market_launch = Transition(label='Market Launch')
logistics_setup = Transition(label='Logistics Setup')

skip = SilentTransition()

site_analysis_xor = OperatorPOWL(operator=Operator.XOR, children=[env_assessment, skip])
system_design_xor = OperatorPOWL(operator=Operator.XOR, children=[skip, system_design])
equipment_order_xor = OperatorPOWL(operator=Operator.XOR, children=[system_design, equipment_order])
seed_selection_xor = OperatorPOWL(operator=Operator.XOR, children=[equipment_order, seed_selection])
install_modules_xor = OperatorPOWL(operator=Operator.XOR, children=[seed_selection, install_modules])
calibrate_systems_xor = OperatorPOWL(operator=Operator.XOR, children=[install_modules, calibrate_systems])
staff_training_xor = OperatorPOWL(operator=Operator.XOR, children=[calibrate_systems, staff_training])
plant_seeding_xor = OperatorPOWL(operator=Operator.XOR, children=[staff_training, plant_seeding])
iot_monitoring_xor = OperatorPOWL(operator=Operator.XOR, children=[plant_seeding, iot_monitoring])
data_analytics_xor = OperatorPOWL(operator=Operator.XOR, children=[iot_monitoring, data_analytics])
nutrient_adjust_xor = OperatorPOWL(operator=Operator.XOR, children=[data_analytics, nutrient_adjust])
pest_control_xor = OperatorPOWL(operator=Operator.XOR, children=[nutrient_adjust, pest_control])
maintenance_check_xor = OperatorPOWL(operator=Operator.XOR, children=[pest_control, maintenance_check])
market_launch_xor = OperatorPOWL(operator=Operator.XOR, children=[maintenance_check, market_launch])
logistics_setup_xor = OperatorPOWL(operator=Operator.XOR, children=[market_launch, logistics_setup])

root = StrictPartialOrder(nodes=[site_analysis_xor, system_design_xor, equipment_order_xor, seed_selection_xor, install_modules_xor, calibrate_systems_xor, staff_training_xor, plant_seeding_xor, iot_monitoring_xor, data_analytics_xor, nutrient_adjust_xor, pest_control_xor, maintenance_check_xor, market_launch_xor, logistics_setup_xor])
root.order.add_edge(site_analysis_xor, system_design_xor)
root.order.add_edge(system_design_xor, equipment_order_xor)
root.order.add_edge(equipment_order_xor, seed_selection_xor)
root.order.add_edge(seed_selection_xor, install_modules_xor)
root.order.add_edge(install_modules_xor, calibrate_systems_xor)
root.order.add_edge(calibrate_systems_xor, staff_training_xor)
root.order.add_edge(staff_training_xor, plant_seeding_xor)
root.order.add_edge(plant_seeding_xor, iot_monitoring_xor)
root.order.add_edge(iot_monitoring_xor, data_analytics_xor)
root.order.add_edge(data_analytics_xor, nutrient_adjust_xor)
root.order.add_edge(nutrient_adjust_xor, pest_control_xor)
root.order.add_edge(pest_control_xor, maintenance_check_xor)
root.order.add_edge(maintenance_check_xor, market_launch_xor)
root.order.add_edge(market_launch_xor, logistics_setup_xor)