import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
structural_audit = Transition(label='Structural Audit')
modular_design = Transition(label='Modular Design')
hydroponic_setup = Transition(label='Hydroponic Setup')
climate_config = Transition(label='Climate Config')
nutrient_mix = Transition(label='Nutrient Mix')
pest_detect = Transition(label='Pest Detect')
lighting_setup = Transition(label='Lighting Setup')
energy_audit = Transition(label='Energy Audit')
automation_install = Transition(label='Automation Install')
staff_training = Transition(label='Staff Training')
market_analysis = Transition(label='Market Analysis')
regulation_check = Transition(label='Regulation Check')
yield_monitor = Transition(label='Yield Monitor')
waste_manage = Transition(label='Waste Manage')
data_analytics = Transition(label='Data Analytics')

site_survey_next = OperatorPOWL(operator=Operator.XOR, children=[structural_audit, site_survey])
structural_audit_next = OperatorPOWL(operator=Operator.XOR, children=[modular_design, structural_audit])
modular_design_next = OperatorPOWL(operator=Operator.XOR, children=[hydroponic_setup, modular_design])
hydroponic_setup_next = OperatorPOWL(operator=Operator.XOR, children=[climate_config, hydroponic_setup])
climate_config_next = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, climate_config])
nutrient_mix_next = OperatorPOWL(operator=Operator.XOR, children=[pest_detect, nutrient_mix])
pest_detect_next = OperatorPOWL(operator=Operator.XOR, children=[lighting_setup, pest_detect])
lighting_setup_next = OperatorPOWL(operator=Operator.XOR, children=[energy_audit, lighting_setup])
energy_audit_next = OperatorPOWL(operator=Operator.XOR, children=[automation_install, energy_audit])
automation_install_next = OperatorPOWL(operator=Operator.XOR, children=[staff_training, automation_install])
staff_training_next = OperatorPOWL(operator=Operator.XOR, children=[market_analysis, staff_training])
market_analysis_next = OperatorPOWL(operator=Operator.XOR, children=[regulation_check, market_analysis])
regulation_check_next = OperatorPOWL(operator=Operator.XOR, children=[yield_monitor, regulation_check])
yield_monitor_next = OperatorPOWL(operator=Operator.XOR, children=[waste_manage, yield_monitor])
waste_manage_next = OperatorPOWL(operator=Operator.XOR, children=[data_analytics, waste_manage])
data_analytics_next = OperatorPOWL(operator=Operator.XOR, children=[site_survey, data_analytics])

root = StrictPartialOrder(nodes=[site_survey_next, structural_audit_next, modular_design_next, hydroponic_setup_next, climate_config_next, nutrient_mix_next, pest_detect_next, lighting_setup_next, energy_audit_next, automation_install_next, staff_training_next, market_analysis_next, regulation_check_next, yield_monitor_next, waste_manage_next, data_analytics_next])
root.order.add_edge(site_survey_next, structural_audit_next)
root.order.add_edge(structural_audit_next, modular_design_next)
root.order.add_edge(modular_design_next, hydroponic_setup_next)
root.order.add_edge(hydroponic_setup_next, climate_config_next)
root.order.add_edge(climate_config_next, nutrient_mix_next)
root.order.add_edge(nutrient_mix_next, pest_detect_next)
root.order.add_edge(pest_detect_next, lighting_setup_next)
root.order.add_edge(lighting_setup_next, energy_audit_next)
root.order.add_edge(energy_audit_next, automation_install_next)
root.order.add_edge(automation_install_next, staff_training_next)
root.order.add_edge(staff_training_next, market_analysis_next)
root.order.add_edge(market_analysis_next, regulation_check_next)
root.order.add_edge(regulation_check_next, yield_monitor_next)
root.order.add_edge(yield_monitor_next, waste_manage_next)
root.order.add_edge(waste_manage_next, data_analytics_next)
root.order.add_edge(data_analytics_next, site_survey_next)