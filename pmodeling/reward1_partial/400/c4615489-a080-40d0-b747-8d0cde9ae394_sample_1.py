import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
structural_audit = Transition(label='Structural Audit')
permit_filing = Transition(label='Permit Filing')
design_layout = Transition(label='Design Layout')
install_hvac = Transition(label='Install HVAC')
set_lighting = Transition(label='Set Lighting')
build_racks = Transition(label='Build Racks')
install_hydroponics = Transition(label='Install Hydroponics')
configure_sensors = Transition(label='Configure Sensors')
select_crops = Transition(label='Select Crops')
seed_planting = Transition(label='Seed Planting')
monitor_growth = Transition(label='Monitor Growth')
nutrient_mixing = Transition(label='Nutrient Mixing')
staff_training = Transition(label='Staff Training')
market_launch = Transition(label='Market Launch')
waste_recycling = Transition(label='Waste Recycling')
customer_onboarding = Transition(label='Customer Onboarding')

skip = SilentTransition()

site_audit = OperatorPOWL(operator=Operator.XOR, children=[site_survey, structural_audit])
permit = OperatorPOWL(operator=Operator.XOR, children=[permit_filing, design_layout])
install_hvac_lighting = OperatorPOWL(operator=Operator.XOR, children=[install_hvac, set_lighting])
build_racks_hydroponics = OperatorPOWL(operator=Operator.XOR, children=[build_racks, install_hydroponics])
configure_sensors = OperatorPOWL(operator=Operator.XOR, children=[configure_sensors, skip])
select_crops = OperatorPOWL(operator=Operator.XOR, children=[select_crops, skip])
seed_planting_monitor_growth = OperatorPOWL(operator=Operator.XOR, children=[seed_planting, monitor_growth])
nutrient_mixing = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mixing, skip])
staff_training_market_launch = OperatorPOWL(operator=Operator.XOR, children=[staff_training, market_launch])
waste_recycling = OperatorPOWL(operator=Operator.XOR, children=[waste_recycling, skip])
customer_onboarding = OperatorPOWL(operator=Operator.XOR, children=[customer_onboarding, skip])

root = StrictPartialOrder(nodes=[site_audit, permit, install_hvac_lighting, build_racks_hydroponics, configure_sensors, select_crops, seed_planting_monitor_growth, nutrient_mixing, staff_training_market_launch, waste_recycling, customer_onboarding])
root.order.add_edge(site_audit, permit)
root.order.add_edge(permit, install_hvac_lighting)
root.order.add_edge(install_hvac_lighting, build_racks_hydroponics)
root.order.add_edge(build_racks_hydroponics, configure_sensors)
root.order.add_edge(configure_sensors, select_crops)
root.order.add_edge(select_crops, seed_planting_monitor_growth)
root.order.add_edge(seed_planting_monitor_growth, nutrient_mixing)
root.order.add_edge(nutrient_mixing, staff_training_market_launch)
root.order.add_edge(staff_training_market_launch, waste_recycling)
root.order.add_edge(waste_recycling, customer_onboarding)