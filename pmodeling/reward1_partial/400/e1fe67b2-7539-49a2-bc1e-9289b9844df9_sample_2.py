from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

Gather_Specs = Transition(label='Gather Specs')
Design_Custom = Transition(label='Design Custom')
Source_Parts = Transition(label='Source Parts')
Firmware_Load = Transition(label='Firmware Load')
Mechanical_Fit = Transition(label='Mechanical Fit')
Cable_Routing = Transition(label='Cable Routing')
Sensor_Align = Transition(label='Sensor Align')
Component_Test = Transition(label='Component Test')
Software_Sync = Transition(label='Software Sync')
Flight_Calibrate = Transition(label='Flight Calibrate')
Enviro_Test = Transition(label='Enviro Test')
Remote_Pair = Transition(label='Remote Pair')
Quality_Check = Transition(label='Quality Check')
Package_Unit = Transition(label='Package Unit')
Register_Drone = Transition(label='Register Drone')
Client_Train = Transition(label='Client Train')

skip = SilentTransition()

Gather_Specs_XOR = OperatorPOWL(operator=Operator.XOR, children=[Design_Custom, skip])
Source_Parts_XOR = OperatorPOWL(operator=Operator.XOR, children=[Firmware_Load, skip])
Mechanical_Fit_XOR = OperatorPOWL(operator=Operator.XOR, children=[Cable_Routing, skip])
Sensor_Align_XOR = OperatorPOWL(operator=Operator.XOR, children=[Sensor_Align, skip])
Component_Test_XOR = OperatorPOWL(operator=Operator.XOR, children=[Component_Test, skip])
Software_Sync_XOR = OperatorPOWL(operator=Operator.XOR, children=[Software_Sync, skip])
Flight_Calibrate_XOR = OperatorPOWL(operator=Operator.XOR, children=[Flight_Calibrate, skip])
Enviro_Test_XOR = OperatorPOWL(operator=Operator.XOR, children=[Enviro_Test, skip])
Remote_Pair_XOR = OperatorPOWL(operator=Operator.XOR, children=[Remote_Pair, skip])
Quality_Check_XOR = OperatorPOWL(operator=Operator.XOR, children=[Quality_Check, skip])
Package_Unit_XOR = OperatorPOWL(operator=Operator.XOR, children=[Package_Unit, skip])
Register_Drone_XOR = OperatorPOWL(operator=Operator.XOR, children=[Register_Drone, skip])
Client_Train_XOR = OperatorPOWL(operator=Operator.XOR, children=[Client_Train, skip])

root = StrictPartialOrder(nodes=[Gather_Specs_XOR, Source_Parts_XOR, Mechanical_Fit_XOR, Sensor_Align_XOR, Component_Test_XOR, Software_Sync_XOR, Flight_Calibrate_XOR, Enviro_Test_XOR, Remote_Pair_XOR, Quality_Check_XOR, Package_Unit_XOR, Register_Drone_XOR, Client_Train_XOR])

root.order.add_edge(Gather_Specs, Gather_Specs_XOR)
root.order.add_edge(Gather_Specs_XOR, Source_Parts_XOR)
root.order.add_edge(Source_Parts_XOR, Mechanical_Fit_XOR)
root.order.add_edge(Mechanical_Fit_XOR, Sensor_Align_XOR)
root.order.add_edge(Sensor_Align_XOR, Component_Test_XOR)
root.order.add_edge(Component_Test_XOR, Software_Sync_XOR)
root.order.add_edge(Software_Sync_XOR, Flight_Calibrate_XOR)
root.order.add_edge(Flight_Calibrate_XOR, Enviro_Test_XOR)
root.order.add_edge(Enviro_Test_XOR, Remote_Pair_XOR)
root.order.add_edge(Remote_Pair_XOR, Quality_Check_XOR)
root.order.add_edge(Quality_Check_XOR, Package_Unit_XOR)
root.order.add_edge(Package_Unit_XOR, Register_Drone_XOR)
root.order.add_edge(Register_Drone_XOR, Client_Train_XOR)