import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
structural_check = Transition(label='Structural Check')
modular_install = Transition(label='Modular Install')
hydroponic_setup = Transition(label='Hydroponic Setup')
nutrient_mix = Transition(label='Nutrient Mix')
sensor_setup = Transition(label='Sensor Setup')
ai_training = Transition(label='AI Training')
data_capture = Transition(label='Data Capture')
maintenance_plan = Transition(label='Maintenance Plan')
pest_scan = Transition(label='Pest Scan')
growth_monitor = Transition(label='Growth Monitor')
harvest_sync = Transition(label='Harvest Sync')
quality_test = Transition(label='Quality Test')
package_prep = Transition(label='Package Prep')
logistics_plan = Transition(label='Logistics Plan')

skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[site_survey, structural_check])
xor1 = OperatorPOWL(operator=Operator.XOR, children=[modular_install, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[hydroponic_setup, nutrient_mix])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[sensor_setup, ai_training])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[data_capture, maintenance_plan])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[pest_scan, growth_monitor])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[harvest_sync, quality_test])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[package_prep, logistics_plan])

root = StrictPartialOrder(nodes=[loop, xor1, xor2, xor3, xor4, xor5, xor6, xor7])
root.order.add_edge(loop, xor1)
root.order.add_edge(xor1, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor6, xor7)