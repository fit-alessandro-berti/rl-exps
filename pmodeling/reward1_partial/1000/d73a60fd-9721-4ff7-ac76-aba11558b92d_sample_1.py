import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define the activities
site_survey = Transition(label='Site Survey')
structural_audit = Transition(label='Structural Audit')
system_design = Transition(label='System Design')
permit_filing = Transition(label='Permit Filing')
foundation_prep = Transition(label='Foundation Prep')
frame_build = Transition(label='Frame Build')
irrigation_setup = Transition(label='Irrigation Setup')
lighting_install = Transition(label='Lighting Install')
climate_control = Transition(label='Climate Control')
nutrient_mix = Transition(label='Nutrient Mix')
crop_planting = Transition(label='Crop Planting')
pest_scouting = Transition(label='Pest Scouting')
data_monitoring = Transition(label='Data Monitoring')
waste_sorting = Transition(label='Waste Sorting')
energy_audit = Transition(label='Energy Audit')
community_meet = Transition(label='Community Meet')
yield_analysis = Transition(label='Yield Analysis')
skip = SilentTransition()

# Define the process flow
site_survey_then_audit = OperatorPOWL(operator=Operator.XOR, children=[site_survey, structural_audit])
audit_then_design = OperatorPOWL(operator=Operator.XOR, children=[structural_audit, system_design])
design_then_permit = OperatorPOWL(operator=Operator.XOR, children=[system_design, permit_filing])
permit_then_prep = OperatorPOWL(operator=Operator.XOR, children=[permit_filing, foundation_prep])
prep_then_build = OperatorPOWL(operator=Operator.XOR, children=[foundation_prep, frame_build])
build_then_irrigation = OperatorPOWL(operator=Operator.XOR, children=[frame_build, irrigation_setup])
irrigation_then_lighting = OperatorPOWL(operator=Operator.XOR, children=[irrigation_setup, lighting_install])
lighting_then_climate = OperatorPOWL(operator=Operator.XOR, children=[lighting_install, climate_control])
climate_then_nutrient = OperatorPOWL(operator=Operator.XOR, children=[climate_control, nutrient_mix])
nutrient_then_plant = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, crop_planting])
plant_then_scout = OperatorPOWL(operator=Operator.XOR, children=[crop_planting, pest_scouting])
scout_then_monitor = OperatorPOWL(operator=Operator.XOR, children=[pest_scouting, data_monitoring])
monitor_then_sort = OperatorPOWL(operator=Operator.XOR, children=[data_monitoring, waste_sorting])
sort_then_audit = OperatorPOWL(operator=Operator.XOR, children=[waste_sorting, energy_audit])
audit_then_meet = OperatorPOWL(operator=Operator.XOR, children=[energy_audit, community_meet])
meet_then_analyze = OperatorPOWL(operator=Operator.XOR, children=[community_meet, yield_analysis])

# Define the root model
root = StrictPartialOrder(nodes=[site_survey_then_audit, audit_then_design, design_then_permit, permit_then_prep, prep_then_build, build_then_irrigation, irrigation_then_lighting, lighting_then_climate, climate_then_nutrient, nutrient_then_plant, plant_then_scout, scout_then_monitor, monitor_then_sort, sort_then_audit, audit_then_meet, meet_then_analyze])
root.order.add_edge(site_survey_then_audit, audit_then_design)
root.order.add_edge(audit_then_design, design_then_permit)
root.order.add_edge(design_then_permit, permit_then_prep)
root.order.add_edge(permit_then_prep, prep_then_build)
root.order.add_edge(prep_then_build, build_then_irrigation)
root.order.add_edge(build_then_irrigation, irrigation_then_lighting)
root.order.add_edge(irrigation_then_lighting, lighting_then_climate)
root.order.add_edge(lighting_then_climate, climate_then_nutrient)
root.order.add_edge(climate_then_nutrient, nutrient_then_plant)
root.order.add_edge(nutrient_then_plant, plant_then_scout)
root.order.add_edge(plant_then_scout, scout_then_monitor)
root.order.add_edge(scout_then_monitor, monitor_then_sort)
root.order.add_edge(monitor_then_sort, sort_then_audit)
root.order.add_edge(sort_then_audit, audit_then_meet)
root.order.add_edge(audit_then_meet, meet_then_analyze)

print(root)