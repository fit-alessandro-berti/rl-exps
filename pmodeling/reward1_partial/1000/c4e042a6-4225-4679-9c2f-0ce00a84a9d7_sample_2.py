from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define transitions for each activity
material_sourcing = Transition(label='Material Sourcing')
supplier_audit = Transition(label='Supplier Audit')
credential_verify = Transition(label='Credential Verify')
design_concept = Transition(label='Design Concept')
prototype_build = Transition(label='Prototype Build')
quality_review = Transition(label='Quality Review')
artisan_assign = Transition(label='Artisan Assign')
batch_scheduling = Transition(label='Batch Scheduling')
custom_approvals = Transition(label='Custom Approvals')
inventory_adjust = Transition(label='Inventory Adjust')
production_sync = Transition(label='Production Sync')
shipping_plan = Transition(label='Shipping Plan')
compliance_check = Transition(label='Compliance Check')
feedback_loop = Transition(label='Feedback Loop')
market_target = Transition(label='Market Target')
order_fulfill = Transition(label='Order Fulfill')
sustainability = Transition(label='Sustainability')
customer_engage = Transition(label='Customer Engage')

# Define silent transitions
skip = SilentTransition()

# Define partial order nodes
material_sourcing_node = OperatorPOWL(operator=Operator.CONC, children=[material_sourcing, supplier_audit])
supplier_audit_node = OperatorPOWL(operator=Operator.CONC, children=[supplier_audit, credential_verify])
credential_verify_node = OperatorPOWL(operator=Operator.CONC, children=[credential_verify, design_concept])
design_concept_node = OperatorPOWL(operator=Operator.CONC, children=[design_concept, prototype_build])
prototype_build_node = OperatorPOWL(operator=Operator.CONC, children=[prototype_build, quality_review])
quality_review_node = OperatorPOWL(operator=Operator.CONC, children=[quality_review, artisan_assign])
artisan_assign_node = OperatorPOWL(operator=Operator.CONC, children=[artisan_assign, batch_scheduling])
batch_scheduling_node = OperatorPOWL(operator=Operator.CONC, children=[batch_scheduling, custom_approvals])
custom_approvals_node = OperatorPOWL(operator=Operator.CONC, children=[custom_approvals, inventory_adjust])
inventory_adjust_node = OperatorPOWL(operator=Operator.CONC, children=[inventory_adjust, production_sync])
production_sync_node = OperatorPOWL(operator=Operator.CONC, children=[production_sync, shipping_plan])
shipping_plan_node = OperatorPOWL(operator=Operator.CONC, children=[shipping_plan, compliance_check])
compliance_check_node = OperatorPOWL(operator=Operator.CONC, children=[compliance_check, feedback_loop])
feedback_loop_node = OperatorPOWL(operator=Operator.CONC, children=[feedback_loop, market_target])
market_target_node = OperatorPOWL(operator=Operator.CONC, children=[market_target, order_fulfill])
order_fulfill_node = OperatorPOWL(operator=Operator.CONC, children=[order_fulfill, sustainability])
sustainability_node = OperatorPOWL(operator=Operator.CONC, children=[sustainability, customer_engage])

# Define the root of the partial order
root = StrictPartialOrder(nodes=[material_sourcing_node, supplier_audit_node, credential_verify_node, design_concept_node, prototype_build_node, quality_review_node, artisan_assign_node, batch_scheduling_node, custom_approvals_node, inventory_adjust_node, production_sync_node, shipping_plan_node, compliance_check_node, feedback_loop_node, market_target_node, order_fulfill_node, sustainability_node, customer_engage])
root.order.add_edge(material_sourcing_node, supplier_audit_node)
root.order.add_edge(supplier_audit_node, credential_verify_node)
root.order.add_edge(credential_verify_node, design_concept_node)
root.order.add_edge(design_concept_node, prototype_build_node)
root.order.add_edge(prototype_build_node, quality_review_node)
root.order.add_edge(quality_review_node, artisan_assign_node)
root.order.add_edge(artisan_assign_node, batch_scheduling_node)
root.order.add_edge(batch_scheduling_node, custom_approvals_node)
root.order.add_edge(custom_approvals_node, inventory_adjust_node)
root.order.add_edge(inventory_adjust_node, production_sync_node)
root.order.add_edge(production_sync_node, shipping_plan_node)
root.order.add_edge(shipping_plan_node, compliance_check_node)
root.order.add_edge(compliance_check_node, feedback_loop_node)
root.order.add_edge(feedback_loop_node, market_target_node)
root.order.add_edge(market_target_node, order_fulfill_node)
root.order.add_edge(order_fulfill_node, sustainability_node)
root.order.add_edge(sustainability_node, customer_engage)