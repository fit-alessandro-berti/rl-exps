import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

artifact_intake = Transition(label='Artifact Intake')
condition_check = Transition(label='Condition Check')
provenance_research = Transition(label='Provenance Research')
scientific_testing = Transition(label='Scientific Testing')
radiocarbon_dating = Transition(label='Radiocarbon Dating')
spectroscopy_scan = Transition(label='Spectroscopy Scan')
legal_clearance = Transition(label='Legal Clearance')
heritage_compliance = Transition(label='Heritage Compliance')
digital_archiving = Transition(label='Digital Archiving')
expert_review = Transition(label='Expert Review')
committee_vote = Transition(label='Committee Vote')
acquisition_approval = Transition(label='Acquisition Approval')
conservation_plan = Transition(label='Conservation Plan')
storage_setup = Transition(label='Storage Setup')
stakeholder_update = Transition(label='Stakeholder Update')

skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[provenance_research, scientific_testing])
xor = OperatorPOWL(operator=Operator.XOR, children=[legal_clearance, heritage_compliance])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[expert_review, committee_vote])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[acquisition_approval, stakeholder_update])

root = StrictPartialOrder(nodes=[artifact_intake, condition_check, loop, xor, xor2, xor3, storage_setup])
root.order.add_edge(artifact_intake, condition_check)
root.order.add_edge(condition_check, loop)
root.order.add_edge(loop, provenance_research)
root.order.add_edge(loop, scientific_testing)
root.order.add_edge(provenance_research, xor)
root.order.add_edge(scientific_testing, xor)
root.order.add_edge(xor, legal_clearance)
root.order.add_edge(xor, heritage_compliance)
root.order.add_edge(legal_clearance, xor2)
root.order.add_edge(heritage_compliance, xor2)
root.order.add_edge(xor2, expert_review)
root.order.add_edge(xor2, committee_vote)
root.order.add_edge(expert_review, xor3)
root.order.add_edge(committee_vote, xor3)
root.order.add_edge(xor3, acquisition_approval)
root.order.add_edge(xor3, stakeholder_update)
root.order.add_edge(acquisition_approval, storage_setup)
root.order.add_edge(stakeholder_update, storage_setup)