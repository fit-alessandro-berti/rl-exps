import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

inspect_item = Transition(label='Inspect Item')
verify_provenance = Transition(label='Verify Provenance')
document_condition = Transition(label='Document Condition')
disassemble_parts = Transition(label='Disassemble Parts')
clean_components = Transition(label='Clean Components')
analyze_damage = Transition(label='Analyze Damage')
select_materials = Transition(label='Select Materials')
perform_repairs = Transition(label='Perform Repairs')
match_finishes = Transition(label='Match Finishes')
apply_treatments = Transition(label='Apply Treatments')
reassemble_item = Transition(label='Reassemble Item')
quality_check = Transition(label='Quality Check')
photograph_results = Transition(label='Photograph Results')
update_archive = Transition(label='Update Archive')
client_review = Transition(label='Client Review')
finalize_report = Transition(label='Finalize Report')

skip = SilentTransition()

# Define the process
inspect_and_verify = OperatorPOWL(operator=Operator.XOR, children=[inspect_item, verify_provenance])
inspect_and_document = OperatorPOWL(operator=Operator.XOR, children=[inspect_and_verify, document_condition])
inspect_and_disassemble = OperatorPOWL(operator=Operator.XOR, children=[inspect_and_document, disassemble_parts])
inspect_and_clean = OperatorPOWL(operator=Operator.XOR, children=[inspect_and_disassemble, clean_components])
inspect_and_analyze = OperatorPOWL(operator=Operator.XOR, children=[inspect_and_clean, analyze_damage])
inspect_and_select_materials = OperatorPOWL(operator=Operator.XOR, children=[inspect_and_analyze, select_materials])
inspect_and_perform_repairs = OperatorPOWL(operator=Operator.XOR, children=[inspect_and_select_materials, perform_repairs])
inspect_and_match_finishes = OperatorPOWL(operator=Operator.XOR, children=[inspect_and_perform_repairs, match_finishes])
inspect_and_apply_treatments = OperatorPOWL(operator=Operator.XOR, children=[inspect_and_match_finishes, apply_treatments])
inspect_and_reassemble = OperatorPOWL(operator=Operator.XOR, children=[inspect_and_apply_treatments, reassemble_item])
inspect_and_quality_check = OperatorPOWL(operator=Operator.XOR, children=[inspect_and_reassemble, quality_check])
inspect_and_photograph = OperatorPOWL(operator=Operator.XOR, children=[inspect_and_quality_check, photograph_results])
inspect_and_update_archive = OperatorPOWL(operator=Operator.XOR, children=[inspect_and_photograph, update_archive])
inspect_and_client_review = OperatorPOWL(operator=Operator.XOR, children=[inspect_and_update_archive, client_review])
inspect_and_finalize_report = OperatorPOWL(operator=Operator.XOR, children=[inspect_and_client_review, finalize_report])

root = StrictPartialOrder(nodes=[inspect_and_finalize_report])
root.order.add_edge(inspect_and_finalize_report, inspect_and_client_review)
root.order.add_edge(inspect_and_client_review, inspect_and_update_archive)
root.order.add_edge(inspect_and_update_archive, inspect_and_photograph)
root.order.add_edge(inspect_and_photograph, inspect_and_quality_check)
root.order.add_edge(inspect_and_quality_check, inspect_and_reassemble)
root.order.add_edge(inspect_and_reassemble, inspect_and_apply_treatments)
root.order.add_edge(inspect_and_apply_treatments, inspect_and_match_finishes)
root.order.add_edge(inspect_and_match_finishes, inspect_and_perform_repairs)
root.order.add_edge(inspect_and_perform_repairs, inspect_and_select_materials)
root.order.add_edge(inspect_and_select_materials, inspect_and_analyze)
root.order.add_edge(inspect_and_analyze, inspect_and_clean)
root.order.add_edge(inspect_and_clean, inspect_and_disassemble)
root.order.add_edge(inspect_and_disassemble, inspect_and_document)
root.order.add_edge(inspect_and_document, inspect_and_verify)
root.order.add_edge(inspect_and_verify, inspect_and_item)