import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_analyze = Transition(label='Site Analyze')
soil_enhance = Transition(label='Soil Enhance')
seed_select = Transition(label='Seed Select')
plant_precise = Transition(label='Plant Precise')
sensor_deploy = Transition(label='Sensor Deploy')
climate_monitor = Transition(label='Climate Monitor')
irrigate_adjust = Transition(label='Irrigate Adjust')
nutrient_feed = Transition(label='Nutrient Feed')
pest_control = Transition(label='Pest Control')
community_engage = Transition(label='Community Engage')
feedback_collect = Transition(label='Feedback Collect')
yield_harvest = Transition(label='Yield Harvest')
waste_sort = Transition(label='Waste Sort')
compost_create = Transition(label='Compost Create')
data_analyze = Transition(label='Data Analyze')
network_distribute = Transition(label='Network Distribute')

skip = SilentTransition()

site_analyze_then_soil_enhance = OperatorPOWL(operator=Operator.XOR, children=[site_analyze, soil_enhance])
soil_enhance_then_seed_select = OperatorPOWL(operator=Operator.XOR, children=[soil_enhance, seed_select])
seed_select_then_plant_precise = OperatorPOWL(operator=Operator.XOR, children=[seed_select, plant_precise])
plant_precise_then_sensor_deploy = OperatorPOWL(operator=Operator.XOR, children=[plant_precise, sensor_deploy])
sensor_deploy_then_climate_monitor = OperatorPOWL(operator=Operator.XOR, children=[sensor_deploy, climate_monitor])
climate_monitor_then_irrigate_adjust = OperatorPOWL(operator=Operator.XOR, children=[climate_monitor, irrigate_adjust])
irrigate_adjust_then_nutrient_feed = OperatorPOWL(operator=Operator.XOR, children=[irrigate_adjust, nutrient_feed])
nutrient_feed_then_pest_control = OperatorPOWL(operator=Operator.XOR, children=[nutrient_feed, pest_control])
pest_control_then_community_engage = OperatorPOWL(operator=Operator.XOR, children=[pest_control, community_engage])
community_engage_then_feedback_collect = OperatorPOWL(operator=Operator.XOR, children=[community_engage, feedback_collect])
feedback_collect_then_yield_harvest = OperatorPOWL(operator=Operator.XOR, children=[feedback_collect, yield_harvest])
yield_harvest_then_waste_sort = OperatorPOWL(operator=Operator.XOR, children=[yield_harvest, waste_sort])
waste_sort_then_compost_create = OperatorPOWL(operator=Operator.XOR, children=[waste_sort, compost_create])
compost_create_then_data_analyze = OperatorPOWL(operator=Operator.XOR, children=[compost_create, data_analyze])
data_analyze_then_network_distribute = OperatorPOWL(operator=Operator.XOR, children=[data_analyze, network_distribute])

root = StrictPartialOrder(nodes=[site_analyze_then_soil_enhance, soil_enhance_then_seed_select, seed_select_then_plant_precise, plant_precise_then_sensor_deploy, sensor_deploy_then_climate_monitor, climate_monitor_then_irrigate_adjust, irrigate_adjust_then_nutrient_feed, nutrient_feed_then_pest_control, pest_control_then_community_engage, community_engage_then_feedback_collect, feedback_collect_then_yield_harvest, yield_harvest_then_waste_sort, waste_sort_then_compost_create, compost_create_then_data_analyze, data_analyze_then_network_distribute])
root.order.add_edge(site_analyze_then_soil_enhance, soil_enhance_then_seed_select)
root.order.add_edge(soil_enhance_then_seed_select, seed_select_then_plant_precise)
root.order.add_edge(seed_select_then_plant_precise, plant_precise_then_sensor_deploy)
root.order.add_edge(plant_precise_then_sensor_deploy, sensor_deploy_then_climate_monitor)
root.order.add_edge(sensor_deploy_then_climate_monitor, climate_monitor_then_irrigate_adjust)
root.order.add_edge(climate_monitor_then_irrigate_adjust, irrigate_adjust_then_nutrient_feed)
root.order.add_edge(irrigate_adjust_then_nutrient_feed, nutrient_feed_then_pest_control)
root.order.add_edge(nutrient_feed_then_pest_control, pest_control_then_community_engage)
root.order.add_edge(pest_control_then_community_engage, community_engage_then_feedback_collect)
root.order.add_edge(community_engage_then_feedback_collect, feedback_collect_then_yield_harvest)
root.order.add_edge(feedback_collect_then_yield_harvest, yield_harvest_then_waste_sort)
root.order.add_edge(yield_harvest_then_waste_sort, waste_sort_then_compost_create)
root.order.add_edge(waste_sort_then_compost_create, compost_create_then_data_analyze)
root.order.add_edge(compost_create_then_data_analyze, data_analyze_then_network_distribute)