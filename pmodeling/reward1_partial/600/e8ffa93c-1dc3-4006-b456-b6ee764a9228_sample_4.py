from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
env_analysis = Transition(label='Env Analysis')
structure_build = Transition(label='Structure Build')
hydroponics_fit = Transition(label='Hydroponics Fit')
nutrient_mix = Transition(label='Nutrient Mix')
climate_setup = Transition(label='Climate Setup')
energy_audit = Transition(label='Energy Audit')
crop_select = Transition(label='Crop Select')
pest_control = Transition(label='Pest Control')
growth_monitor = Transition(label='Growth Monitor')
harvest_plan = Transition(label='Harvest Plan')
waste_recycle = Transition(label='Waste Recycle')
community_meet = Transition(label='Community Meet')
supply_sync = Transition(label='Supply Sync')
data_review = Transition(label='Data Review')

skip = SilentTransition()

site_survey_to_env_analysis = OperatorPOWL(operator=Operator.XOR, children=[site_survey, env_analysis])
env_analysis_to_structure_build = OperatorPOWL(operator=Operator.XOR, children=[env_analysis, structure_build])
structure_build_to_hydroponics_fit = OperatorPOWL(operator=Operator.XOR, children=[structure_build, hydroponics_fit])
hydroponics_fit_to_nutrient_mix = OperatorPOWL(operator=Operator.XOR, children=[hydroponics_fit, nutrient_mix])
nutrient_mix_to_climate_setup = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, climate_setup])
climate_setup_to_energy_audit = OperatorPOWL(operator=Operator.XOR, children=[climate_setup, energy_audit])
energy_audit_to_crop_select = OperatorPOWL(operator=Operator.XOR, children=[energy_audit, crop_select])
crop_select_to_pest_control = OperatorPOWL(operator=Operator.XOR, children=[crop_select, pest_control])
pest_control_to_growth_monitor = OperatorPOWL(operator=Operator.XOR, children=[pest_control, growth_monitor])
growth_monitor_to_harvest_plan = OperatorPOWL(operator=Operator.XOR, children=[growth_monitor, harvest_plan])
harvest_plan_to_waste_recycle = OperatorPOWL(operator=Operator.XOR, children=[harvest_plan, waste_recycle])
waste_recycle_to_community_meet = OperatorPOWL(operator=Operator.XOR, children=[waste_recycle, community_meet])
community_meet_to_supply_sync = OperatorPOWL(operator=Operator.XOR, children=[community_meet, supply_sync])
supply_sync_to_data_review = OperatorPOWL(operator=Operator.XOR, children=[supply_sync, data_review])

root = StrictPartialOrder(nodes=[site_survey_to_env_analysis, env_analysis_to_structure_build, structure_build_to_hydroponics_fit, hydroponics_fit_to_nutrient_mix, nutrient_mix_to_climate_setup, climate_setup_to_energy_audit, energy_audit_to_crop_select, crop_select_to_pest_control, pest_control_to_growth_monitor, growth_monitor_to_harvest_plan, harvest_plan_to_waste_recycle, waste_recycle_to_community_meet, community_meet_to_supply_sync, supply_sync_to_data_review])
root.order.add_edge(site_survey_to_env_analysis, env_analysis_to_structure_build)
root.order.add_edge(env_analysis_to_structure_build, structure_build_to_hydroponics_fit)
root.order.add_edge(structure_build_to_hydroponics_fit, hydroponics_fit_to_nutrient_mix)
root.order.add_edge(hydroponics_fit_to_nutrient_mix, nutrient_mix_to_climate_setup)
root.order.add_edge(nutrient_mix_to_climate_setup, climate_setup_to_energy_audit)
root.order.add_edge(climate_setup_to_energy_audit, energy_audit_to_crop_select)
root.order.add_edge(energy_audit_to_crop_select, crop_select_to_pest_control)
root.order.add_edge(crop_select_to_pest_control, pest_control_to_growth_monitor)
root.order.add_edge(pest_control_to_growth_monitor, growth_monitor_to_harvest_plan)
root.order.add_edge(growth_monitor_to_harvest_plan, harvest_plan_to_waste_recycle)
root.order.add_edge(harvest_plan_to_waste_recycle, waste_recycle_to_community_meet)
root.order.add_edge(waste_recycle_to_community_meet, community_meet_to_supply_sync)
root.order.add_edge(community_meet_to_supply_sync, supply_sync_to_data_review)