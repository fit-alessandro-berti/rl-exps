from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition

# Define the POWL model for the urban vertical farm process
A = Transition(label='Site Survey')
B = Transition(label='Structural Audit')
C = Transition(label='Climate Design')
D = Transition(label='Lighting Setup')
E = Transition(label='Irrigation Plan')
F = Transition(label='Nutrient Mix')
G = Transition(label='Sensor Install')
H = Transition(label='AI Calibration')
I = Transition(label='Pest Scan')
J = Transition(label='Energy Audit')
K = Transition(label='Renewable Sync')
L = Transition(label='Data Modeling')
M = Transition(label='Staff Briefing')
N = Transition(label='Compliance Check')
O = Transition(label='Community Meet')
P = Transition(label='Yield Review')
Q = Transition(label='Feedback Loop')

# Define the partial order
root = StrictPartialOrder(nodes=[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q])
root.order.add_edge(A, B)
root.order.add_edge(A, C)
root.order.add_edge(A, D)
root.order.add_edge(A, E)
root.order.add_edge(A, F)
root.order.add_edge(A, G)
root.order.add_edge(A, H)
root.order.add_edge(A, I)
root.order.add_edge(A, J)
root.order.add_edge(A, K)
root.order.add_edge(A, L)
root.order.add_edge(A, M)
root.order.add_edge(A, N)
root.order.add_edge(A, O)
root.order.add_edge(A, P)
root.order.add_edge(A, Q)
root.order.add_edge(B, C)
root.order.add_edge(B, D)
root.order.add_edge(B, E)
root.order.add_edge(B, F)
root.order.add_edge(B, G)
root.order.add_edge(B, H)
root.order.add_edge(B, I)
root.order.add_edge(B, J)
root.order.add_edge(B, K)
root.order.add_edge(B, L)
root.order.add_edge(B, M)
root.order.add_edge(B, N)
root.order.add_edge(B, O)
root.order.add_edge(B, P)
root.order.add_edge(B, Q)
root.order.add_edge(C, D)
root.order.add_edge(C, E)
root.order.add_edge(C, F)
root.order.add_edge(C, G)
root.order.add_edge(C, H)
root.order.add_edge(C, I)
root.order.add_edge(C, J)
root.order.add_edge(C, K)
root.order.add_edge(C, L)
root.order.add_edge(C, M)
root.order.add_edge(C, N)
root.order.add_edge(C, O)
root.order.add_edge(C, P)
root.order.add_edge(C, Q)
root.order.add_edge(D, E)
root.order.add_edge(D, F)
root.order.add_edge(D, G)
root.order.add_edge(D, H)
root.order.add_edge(D, I)
root.order.add_edge(D, J)
root.order.add_edge(D, K)
root.order.add_edge(D, L)
root.order.add_edge(D, M)
root.order.add_edge(D, N)
root.order.add_edge(D, O)
root.order.add_edge(D, P)
root.order.add_edge(D, Q)
root.order.add_edge(E, F)
root.order.add_edge(E, G)
root.order.add_edge(E, H)
root.order.add_edge(E, I)
root.order.add_edge(E, J)
root.order.add_edge(E, K)
root.order.add_edge(E, L)
root.order.add_edge(E, M)
root.order.add_edge(E, N)
root.order.add_edge(E, O)
root.order.add_edge(E, P)
root.order.add_edge(E, Q)
root.order.add_edge(F, G)
root.order.add_edge(F, H)
root.order.add_edge(F, I)
root.order.add_edge(F, J)
root.order.add_edge(F, K)
root.order.add_edge(F, L)
root.order.add_edge(F, M)
root.order.add_edge(F, N)
root.order.add_edge(F, O)
root.order.add_edge(F, P)
root.order.add_edge(F, Q)
root.order.add_edge(G, H)
root.order.add_edge(G, I)
root.order.add_edge(G, J)
root.order.add_edge(G, K)
root.order.add_edge(G, L)
root.order.add_edge(G, M)
root.order.add_edge(G, N)
root.order.add_edge(G, O)
root.order.add_edge(G, P)
root.order.add_edge(G, Q)
root.order.add_edge(H, I)
root.order.add_edge(H, J)
root.order.add_edge(H, K)
root.order.add_edge(H, L)
root.order.add_edge(H, M)
root.order.add_edge(H, N)
root.order.add_edge(H, O)
root.order.add_edge(H, P)
root.order.add_edge(H, Q)
root.order.add_edge(I, J)
root.order.add_edge(I, K)
root.order.add_edge(I, L)
root.order.add_edge(I, M)
root.order.add_edge(I, N)
root.order.add_edge(I, O)
root.order.add_edge(I, P)
root.order.add_edge(I, Q)
root.order.add_edge(J, K)
root.order.add_edge(J, L)
root.order.add_edge(J, M)
root.order.add_edge(J, N)
root.order.add_edge(J, O)
root.order.add_edge(J, P)
root.order.add_edge(J, Q)
root.order.add_edge(K, L)
root.order.add_edge(K, M)
root.order.add_edge(K, N)
root.order.add_edge(K, O)
root.order.add_edge(K, P)
root.order.add_edge(K, Q)
root.order.add_edge(L, M)
root.order.add_edge(L, N)
root.order.add_edge(L, O)
root.order.add_edge(L, P)
root.order.add_edge(L, Q)
root.order.add_edge(M, N)
root.order.add_edge(M, O)
root.order.add_edge(M, P)
root.order.add_edge(M, Q)
root.order.add_edge(N, O)
root.order.add_edge(N, P)
root.order.add_edge(N, Q)
root.order.add_edge(O, P)
root.order.add_edge(O, Q)
root.order.add_edge(P, Q)