import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
design_layout = Transition(label='Design Layout')
system_build = Transition(label='System Build')
install_sensors = Transition(label='Install Sensors')
select_crops = Transition(label='Select Crops')
setup_lighting = Transition(label='Setup Lighting')
configure_climate = Transition(label='Configure Climate')
nutrient_mix = Transition(label='Nutrient Mix')
automate_watering = Transition(label='Automate Watering')
test_systems = Transition(label='Test Systems')
train_staff = Transition(label='Train Staff')
waste_plan = Transition(label='Waste Plan')
market_link = Transition(label='Market Link')
data_monitor = Transition(label='Data Monitor')
optimize_yield = Transition(label='Optimize Yield')

skip = SilentTransition()

site_survey_choice = OperatorPOWL(operator=Operator.XOR, children=[system_build, skip])
design_layout_choice = OperatorPOWL(operator=Operator.XOR, children=[select_crops, skip])
nutrient_mix_choice = OperatorPOWL(operator=Operator.XOR, children=[setup_lighting, skip])
configure_climate_choice = OperatorPOWL(operator=Operator.XOR, children=[configure_climate, skip])
automate_watering_choice = OperatorPOWL(operator=Operator.XOR, children=[automate_watering, skip])
test_systems_choice = OperatorPOWL(operator=Operator.XOR, children=[test_systems, skip])
train_staff_choice = OperatorPOWL(operator=Operator.XOR, children=[train_staff, skip])
waste_plan_choice = OperatorPOWL(operator=Operator.XOR, children=[waste_plan, skip])
market_link_choice = OperatorPOWL(operator=Operator.XOR, children=[market_link, skip])
data_monitor_choice = OperatorPOWL(operator=Operator.XOR, children=[data_monitor, skip])
optimize_yield_choice = OperatorPOWL(operator=Operator.XOR, children=[optimize_yield, skip])

root = StrictPartialOrder(nodes=[site_survey, design_layout, system_build, install_sensors, select_crops, setup_lighting, configure_climate, nutrient_mix, automate_watering, test_systems, train_staff, waste_plan, market_link, data_monitor, optimize_yield])
root.order.add_edge(site_survey, design_layout_choice)
root.order.add_edge(site_survey_choice, system_build)
root.order.add_edge(design_layout, system_build)
root.order.add_edge(design_layout_choice, select_crops)
root.order.add_edge(select_crops, nutrient_mix_choice)
root.order.add_edge(nutrient_mix, setup_lighting)
root.order.add_edge(nutrient_mix_choice, configure_climate)
root.order.add_edge(configure_climate, automate_watering_choice)
root.order.add_edge(automate_watering, test_systems_choice)
root.order.add_edge(test_systems, train_staff_choice)
root.order.add_edge(train_staff, waste_plan_choice)
root.order.add_edge(waste_plan, market_link_choice)
root.order.add_edge(market_link, data_monitor_choice)
root.order.add_edge(data_monitor, optimize_yield_choice)