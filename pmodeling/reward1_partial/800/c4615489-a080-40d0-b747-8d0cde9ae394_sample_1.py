import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
structural_audit = Transition(label='Structural Audit')
permit_filing = Transition(label='Permit Filing')
design_layout = Transition(label='Design Layout')
install_hvac = Transition(label='Install HVAC')
set_lighting = Transition(label='Set Lighting')
build_racks = Transition(label='Build Racks')
install_hydroponics = Transition(label='Install Hydroponics')
configure_sensors = Transition(label='Configure Sensors')
select_crops = Transition(label='Select Crops')
seed_planting = Transition(label='Seed Planting')
monitor_growth = Transition(label='Monitor Growth')
nutrient_mixing = Transition(label='Nutrient Mixing')
staff_training = Transition(label='Staff Training')
market_launch = Transition(label='Market Launch')
waste_recycling = Transition(label='Waste Recycling')
customer_onboarding = Transition(label='Customer Onboarding')

skip = SilentTransition()

site_audit_loop = OperatorPOWL(operator=Operator.LOOP, children=[site_survey, structural_audit, permit_filing])
design_layout_loop = OperatorPOWL(operator=Operator.LOOP, children=[design_layout])
hvac_loop = OperatorPOWL(operator=Operator.LOOP, children=[install_hvac, set_lighting, build_racks])
hydroponics_loop = OperatorPOWL(operator=Operator.LOOP, children=[install_hydroponics, configure_sensors])
crop_selection_loop = OperatorPOWL(operator=Operator.LOOP, children=[select_crops])
planting_loop = OperatorPOWL(operator=Operator.LOOP, children=[seed_planting])
monitoring_loop = OperatorPOWL(operator=Operator.LOOP, children=[monitor_growth])
nutrient_mixing_loop = OperatorPOWL(operator=Operator.LOOP, children=[nutrient_mixing])
staff_training_loop = OperatorPOWL(operator=Operator.LOOP, children=[staff_training])
market_launch_loop = OperatorPOWL(operator=Operator.LOOP, children=[market_launch])
waste_recycling_loop = OperatorPOWL(operator=Operator.LOOP, children=[waste_recycling])
customer_onboarding_loop = OperatorPOWL(operator=Operator.LOOP, children=[customer_onboarding])

root = StrictPartialOrder(nodes=[site_audit_loop, design_layout_loop, hvac_loop, hydroponics_loop, crop_selection_loop, planting_loop, monitoring_loop, nutrient_mixing_loop, staff_training_loop, market_launch_loop, waste_recycling_loop, customer_onboarding_loop])
root.order.add_edge(site_audit_loop, design_layout_loop)
root.order.add_edge(design_layout_loop, hvac_loop)
root.order.add_edge(hvac_loop, hydroponics_loop)
root.order.add_edge(hydroponics_loop, crop_selection_loop)
root.order.add_edge(crop_selection_loop, planting_loop)
root.order.add_edge(planting_loop, monitoring_loop)
root.order.add_edge(monitoring_loop, nutrient_mixing_loop)
root.order.add_edge(nutrient_mixing_loop, staff_training_loop)
root.order.add_edge(staff_training_loop, market_launch_loop)
root.order.add_edge(market_launch_loop, waste_recycling_loop)
root.order.add_edge(waste_recycling_loop, customer_onboarding_loop)

print(root)