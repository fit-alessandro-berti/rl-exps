import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
design_layout = Transition(label='Design Layout')
climate_setup = Transition(label='Climate Setup')
sensor_install = Transition(label='Sensor Install')
nutrient_mix = Transition(label='Nutrient Mix')
automation_code = Transition(label='Automation Code')
crop_planning = Transition(label='Crop Planning')
pest_control = Transition(label='Pest Control')
energy_audit = Transition(label='Energy Audit')
waste_sort = Transition(label='Waste Sort')
planting_tier = Transition(label='Planting Tier')
harvest_prep = Transition(label='Harvest Prep')
logistics_plan = Transition(label='Logistics Plan')
community_meet = Transition(label='Community Meet')
data_review = Transition(label='Data Review')
system_upgrade = Transition(label='System Upgrade')

skip = SilentTransition()

site_survey_xor_design = OperatorPOWL(operator=Operator.XOR, children=[site_survey, design_layout])
climate_xor_sensor = OperatorPOWL(operator=Operator.XOR, children=[climate_setup, sensor_install])
nutrient_xor_automation = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, automation_code])
crop_xor_pest = OperatorPOWL(operator=Operator.XOR, children=[crop_planning, pest_control])
energy_xor_waste = OperatorPOWL(operator=Operator.XOR, children=[energy_audit, waste_sort])
planting_xor_logistics = OperatorPOWL(operator=Operator.XOR, children=[planting_tier, logistics_plan])
community_xor_data = OperatorPOWL(operator=Operator.XOR, children=[community_meet, data_review])
system_upgrade_loop = OperatorPOWL(operator=Operator.LOOP, children=[system_upgrade])

root = StrictPartialOrder(nodes=[site_survey_xor_design, climate_xor_sensor, nutrient_xor_automation, crop_xor_pest, energy_xor_waste, planting_xor_logistics, community_xor_data, system_upgrade_loop])
root.order.add_edge(site_survey_xor_design, climate_xor_sensor)
root.order.add_edge(climate_xor_sensor, nutrient_xor_automation)
root.order.add_edge(nutrient_xor_automation, crop_xor_pest)
root.order.add_edge(crop_xor_pest, energy_xor_waste)
root.order.add_edge(energy_xor_waste, planting_xor_logistics)
root.order.add_edge(planting_xor_logistics, community_xor_data)
root.order.add_edge(community_xor_data, system_upgrade_loop)