import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

artifact_intake = Transition(label='Artifact Intake')
condition_check = Transition(label='Condition Check')
provenance_research = Transition(label='Provenance Research')
scientific_testing = Transition(label='Scientific Testing')
radiocarbon_dating = Transition(label='Radiocarbon Dating')
spectroscopy_scan = Transition(label='Spectroscopy Scan')
legal_clearance = Transition(label='Legal Clearance')
heritage_compliance = Transition(label='Heritage Compliance')
digital_archiving = Transition(label='Digital Archiving')
expert_review = Transition(label='Expert Review')
committee_vote = Transition(label='Committee Vote')
acquisition_approval = Transition(label='Acquisition Approval')
conservation_plan = Transition(label='Conservation Plan')
storage_setup = Transition(label='Storage Setup')
stakeholder_update = Transition(label='Stakeholder Update')

skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[provenance_research, scientific_testing])
xor = OperatorPOWL(operator=Operator.XOR, children=[legal_clearance, heritage_compliance])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[radiocarbon_dating, spectroscopy_scan])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[digital_archiving, expert_review])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[committee_vote, stakeholder_update])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[conservation_plan, storage_setup])
root = StrictPartialOrder(nodes=[artifact_intake, condition_check, loop, xor, xor2, xor3, xor4, xor5])
root.order.add_edge(artifact_intake, condition_check)
root.order.add_edge(condition_check, loop)
root.order.add_edge(loop, xor)
root.order.add_edge(xor, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, acquisition_approval)