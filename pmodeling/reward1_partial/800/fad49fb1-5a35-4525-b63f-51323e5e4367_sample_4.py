import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
design_modules = Transition(label='Design Modules')
source_materials = Transition(label='Source Materials')
install_framework = Transition(label='Install Framework')
setup_irrigation = Transition(label='Setup Irrigation')
integrate_sensors = Transition(label='Integrate Sensors')
configure_ai = Transition(label='Configure AI')
select_crops = Transition(label='Select Crops')
calibrate_climate = Transition(label='Calibrate Climate')
plant_seeds = Transition(label='Plant Seeds')
monitor_growth = Transition(label='Monitor Growth')
manage_pests = Transition(label='Manage Pests')
recycle_waste = Transition(label='Recycle Waste')
engage_community = Transition(label='Engage Community')
ensure_compliance = Transition(label='Ensure Compliance')
distribute_produce = Transition(label='Distribute Produce')

skip = SilentTransition()

site_survey_to_design_modules = OperatorPOWL(operator=Operator.EXCLUSIVE, children=[site_survey, design_modules])
design_modules_to_source_materials = OperatorPOWL(operator=Operator.EXCLUSIVE, children=[design_modules, source_materials])
source_materials_to_install_framework = OperatorPOWL(operator=Operator.EXCLUSIVE, children=[source_materials, install_framework])
install_framework_to_setup_irrigation = OperatorPOWL(operator=Operator.EXCLUSIVE, children=[install_framework, setup_irrigation])
setup_irrigation_to_integrate_sensors = OperatorPOWL(operator=Operator.EXCLUSIVE, children=[setup_irrigation, integrate_sensors])
integrate_sensors_to_configure_ai = OperatorPOWL(operator=Operator.EXCLUSIVE, children=[integrate_sensors, configure_ai])
configure_ai_to_select_crops = OperatorPOWL(operator=Operator.EXCLUSIVE, children=[configure_ai, select_crops])
select_crops_to_calibrate_climate = OperatorPOWL(operator=Operator.EXCLUSIVE, children=[select_crops, calibrate_climate])
calibrate_climate_to_plant_seeds = OperatorPOWL(operator=Operator.EXCLUSIVE, children=[calibrate_climate, plant_seeds])
plant_seeds_to_monitor_growth = OperatorPOWL(operator=Operator.EXCLUSIVE, children=[plant_seeds, monitor_growth])
monitor_growth_to_manage_pests = OperatorPOWL(operator=Operator.EXCLUSIVE, children=[monitor_growth, manage_pests])
manage_pests_to_recycle_waste = OperatorPOWL(operator=Operator.EXCLUSIVE, children=[manage_pests, recycle_waste])
recycle_waste_to_engage_community = OperatorPOWL(operator=Operator.EXCLUSIVE, children=[recycle_waste, engage_community])
engage_community_to_ensure_compliance = OperatorPOWL(operator=Operator.EXCLUSIVE, children=[engage_community, ensure_compliance])
ensure_compliance_to_distribute_produce = OperatorPOWL(operator=Operator.EXCLUSIVE, children=[ensure_compliance, distribute_produce])

root = StrictPartialOrder(nodes=[site_survey_to_design_modules, design_modules_to_source_materials, source_materials_to_install_framework, install_framework_to_setup_irrigation, setup_irrigation_to_integrate_sensors, integrate_sensors_to_configure_ai, configure_ai_to_select_crops, select_crops_to_calibrate_climate, calibrate_climate_to_plant_seeds, plant_seeds_to_monitor_growth, monitor_growth_to_manage_pests, manage_pests_to_recycle_waste, recycle_waste_to_engage_community, engage_community_to_ensure_compliance, ensure_compliance_to_distribute_produce])
root.order.add_edge(site_survey_to_design_modules, design_modules_to_source_materials)
root.order.add_edge(design_modules_to_source_materials, source_materials_to_install_framework)
root.order.add_edge(source_materials_to_install_framework, install_framework_to_setup_irrigation)
root.order.add_edge(install_framework_to_setup_irrigation, setup_irrigation_to_integrate_sensors)
root.order.add_edge(setup_irrigation_to_integrate_sensors, integrate_sensors_to_configure_ai)
root.order.add_edge(integrate_sensors_to_configure_ai, configure_ai_to_select_crops)
root.order.add_edge(configure_ai_to_select_crops, select_crops_to_calibrate_climate)
root.order.add_edge(select_crops_to_calibrate_climate, calibrate_climate_to_plant_seeds)
root.order.add_edge(calibrate_climate_to_plant_seeds, plant_seeds_to_monitor_growth)
root.order.add_edge(plant_seeds_to_monitor_growth, monitor_growth_to_manage_pests)
root.order.add_edge(monitor_growth_to_manage_pests, manage_pests_to_recycle_waste)
root.order.add_edge(manage_pests_to_recycle_waste, recycle_waste_to_engage_community)
root.order.add_edge(recycle_waste_to_engage_community, engage_community_to_ensure_compliance)
root.order.add_edge(engage_community_to_ensure_compliance, ensure_compliance_to_distribute_produce)

print(root)