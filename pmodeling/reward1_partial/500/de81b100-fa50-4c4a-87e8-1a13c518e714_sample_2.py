import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
permit_acquire = Transition(label='Permit Acquire')
rack_design = Transition(label='Rack Design')
seed_selection = Transition(label='Seed Selection')
nutrient_mix = Transition(label='Nutrient Mix')
lighting_setup = Transition(label='Lighting Setup')
sensor_install = Transition(label='Sensor Install')
system_test = Transition(label='System Test')
staff_hire = Transition(label='Staff Hire')
training_lead = Transition(label='Training Lead')
waste_manage = Transition(label='Waste Manage')
supply_chain = Transition(label='Supply Chain')
crop_cycle = Transition(label='Crop Cycle')
data_monitor = Transition(label='Data Monitor')
harvest_plan = Transition(label='Harvest Plan')
distribution = Transition(label='Distribution')

skip = SilentTransition()

site_survey_choice = OperatorPOWL(operator=Operator.XOR, children=[permit_acquire, site_survey])
rack_design_choice = OperatorPOWL(operator=Operator.XOR, children=[rack_design, skip])
nutrient_mix_choice = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, skip])
lighting_setup_choice = OperatorPOWL(operator=Operator.XOR, children=[lighting_setup, skip])
sensor_install_choice = OperatorPOWL(operator=Operator.XOR, children=[sensor_install, skip])
system_test_choice = OperatorPOWL(operator=Operator.XOR, children=[system_test, skip])
staff_hire_choice = OperatorPOWL(operator=Operator.XOR, children=[staff_hire, skip])
training_lead_choice = OperatorPOWL(operator=Operator.XOR, children=[training_lead, skip])
waste_manage_choice = OperatorPOWL(operator=Operator.XOR, children=[waste_manage, skip])
supply_chain_choice = OperatorPOWL(operator=Operator.XOR, children=[supply_chain, skip])
crop_cycle_choice = OperatorPOWL(operator=Operator.XOR, children=[crop_cycle, skip])
data_monitor_choice = OperatorPOWL(operator=Operator.XOR, children=[data_monitor, skip])
harvest_plan_choice = OperatorPOWL(operator=Operator.XOR, children=[harvest_plan, skip])
distribution_choice = OperatorPOWL(operator=Operator.XOR, children=[distribution, skip])

root = StrictPartialOrder(nodes=[site_survey_choice, rack_design_choice, nutrient_mix_choice, lighting_setup_choice, sensor_install_choice, system_test_choice, staff_hire_choice, training_lead_choice, waste_manage_choice, supply_chain_choice, crop_cycle_choice, data_monitor_choice, harvest_plan_choice, distribution_choice])
root.order.add_edge(site_survey_choice, rack_design_choice)
root.order.add_edge(rack_design_choice, nutrient_mix_choice)
root.order.add_edge(nutrient_mix_choice, lighting_setup_choice)
root.order.add_edge(lighting_setup_choice, sensor_install_choice)
root.order.add_edge(sensor_install_choice, system_test_choice)
root.order.add_edge(system_test_choice, staff_hire_choice)
root.order.add_edge(staff_hire_choice, training_lead_choice)
root.order.add_edge(training_lead_choice, waste_manage_choice)
root.order.add_edge(waste_manage_choice, supply_chain_choice)
root.order.add_edge(supply_chain_choice, crop_cycle_choice)
root.order.add_edge(crop_cycle_choice, data_monitor_choice)
root.order.add_edge(data_monitor_choice, harvest_plan_choice)
root.order.add_edge(harvest_plan_choice, distribution_choice)