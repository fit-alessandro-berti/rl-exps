import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

inspect_item = Transition(label='Inspect Item')
verify_provenance = Transition(label='Verify Provenance')
document_condition = Transition(label='Document Condition')
disassemble_parts = Transition(label='Disassemble Parts')
clean_components = Transition(label='Clean Components')
analyze_damage = Transition(label='Analyze Damage')
select_materials = Transition(label='Select Materials')
perform_repairs = Transition(label='Perform Repairs')
match_finishes = Transition(label='Match Finishes')
apply_treatments = Transition(label='Apply Treatments')
reassemble_item = Transition(label='Reassemble Item')
quality_check = Transition(label='Quality Check')
photograph_results = Transition(label='Photograph Results')
update_archive = Transition(label='Update Archive')
client_review = Transition(label='Client Review')
finalize_report = Transition(label='Finalize Report')

skip = SilentTransition()

# Create the process model
inspect_verify = OperatorPOWL(operator=Operator.XOR, children=[inspect_item, verify_provenance])
inspect_document = OperatorPOWL(operator=Operator.XOR, children=[inspect_verify, document_condition])
inspect_disassemble = OperatorPOWL(operator=Operator.XOR, children=[inspect_document, disassemble_parts])
inspect_clean = OperatorPOWL(operator=Operator.XOR, children=[inspect_disassemble, clean_components])
inspect_analyze = OperatorPOWL(operator=Operator.XOR, children=[inspect_clean, analyze_damage])
inspect_select = OperatorPOWL(operator=Operator.XOR, children=[inspect_analyze, select_materials])
inspect_repair = OperatorPOWL(operator=Operator.XOR, children=[inspect_select, perform_repairs])
inspect_finish = OperatorPOWL(operator=Operator.XOR, children=[inspect_repair, match_finishes])
inspect_treat = OperatorPOWL(operator=Operator.XOR, children=[inspect_finish, apply_treatments])
inspect_reassemble = OperatorPOWL(operator=Operator.XOR, children=[inspect_treat, reassemble_item])
inspect_quality = OperatorPOWL(operator=Operator.XOR, children=[inspect_reassemble, quality_check])
inspect_photograph = OperatorPOWL(operator=Operator.XOR, children=[inspect_quality, photograph_results])
inspect_archive = OperatorPOWL(operator=Operator.XOR, children=[inspect_photograph, update_archive])
inspect_review = OperatorPOWL(operator=Operator.XOR, children=[inspect_archive, client_review])
inspect_finalize = OperatorPOWL(operator=Operator.XOR, children=[inspect_review, finalize_report])

root = StrictPartialOrder(nodes=[inspect_item, verify_provenance, document_condition, disassemble_parts, clean_components, analyze_damage, select_materials, perform_repairs, match_finishes, apply_treatments, reassemble_item, quality_check, photograph_results, update_archive, client_review, finalize_report])
root.order.add_edge(inspect_item, verify_provenance)
root.order.add_edge(inspect_verify, document_condition)
root.order.add_edge(inspect_document, disassemble_parts)
root.order.add_edge(inspect_disassemble, clean_components)
root.order.add_edge(inspect_clean, analyze_damage)
root.order.add_edge(inspect_analyze, select_materials)
root.order.add_edge(inspect_select, perform_repairs)
root.order.add_edge(inspect_repair, match_finishes)
root.order.add_edge(inspect_finish, apply_treatments)
root.order.add_edge(inspect_treat, reassemble_item)
root.order.add_edge(inspect_reassemble, quality_check)
root.order.add_edge(inspect_quality, photograph_results)
root.order.add_edge(inspect_photograph, update_archive)
root.order.add_edge(inspect_archive, client_review)
root.order.add_edge(inspect_review, finalize_report)