import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
design_layout = Transition(label='Design Layout')
climate_setup = Transition(label='Climate Setup')
sensor_install = Transition(label='Sensor Install')
nutrient_mix = Transition(label='Nutrient Mix')
automation_code = Transition(label='Automation Code')
crop_planning = Transition(label='Crop Planning')
pest_control = Transition(label='Pest Control')
energy_audit = Transition(label='Energy Audit')
waste_sort = Transition(label='Waste Sort')
planting_tier = Transition(label='Planting Tier')
harvest_prep = Transition(label='Harvest Prep')
logistics_plan = Transition(label='Logistics Plan')
community_meet = Transition(label='Community Meet')
data_review = Transition(label='Data Review')
system_upgrade = Transition(label='System Upgrade')

skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[site_survey, design_layout])
xor = OperatorPOWL(operator=Operator.XOR, children=[climate_setup, sensor_install])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, automation_code])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[crop_planning, pest_control])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[energy_audit, waste_sort])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[planting_tier, harvest_prep])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[logistics_plan, community_meet])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[data_review, system_upgrade])

root = StrictPartialOrder(nodes=[loop, xor, xor2, xor3, xor4, xor5, xor6, xor7])
root.order.add_edge(loop, xor)
root.order.add_edge(xor, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor6, xor7)