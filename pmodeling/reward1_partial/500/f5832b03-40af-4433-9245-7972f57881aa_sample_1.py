import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
design_layout = Transition(label='Design Layout')
legal_review = Transition(label='Legal Review')
tech_sourcing = Transition(label='Tech Sourcing')
structural_build = Transition(label='Structural Build')
climate_setup = Transition(label='Climate Setup')
irrigation_install = Transition(label='Irrigation Install')
sensor_deploy = Transition(label='Sensor Deploy')
crop_select = Transition(label='Crop Select')
nutrient_prep = Transition(label='Nutrient Prep')
waste_system = Transition(label='Waste System')
automation_config = Transition(label='Automation Config')
trial_growth = Transition(label='Trial Growth')
data_analysis = Transition(label='Data Analysis')
quality_audit = Transition(label='Quality Audit')
stakeholder_meet = Transition(label='Stakeholder Meet')
compliance_check = Transition(label='Compliance Check')

skip = SilentTransition()

site_survey_choice = OperatorPOWL(operator=Operator.XOR, children=[legal_review, skip])
legal_review_choice = OperatorPOWL(operator=Operator.XOR, children=[tech_sourcing, skip])
tech_sourcing_choice = OperatorPOWL(operator=Operator.XOR, children=[structural_build, skip])
structural_build_choice = OperatorPOWL(operator=Operator.XOR, children=[climate_setup, skip])
climate_setup_choice = OperatorPOWL(operator=Operator.XOR, children=[irrigation_install, skip])
irrigation_install_choice = OperatorPOWL(operator=Operator.XOR, children=[sensor_deploy, skip])
sensor_deploy_choice = OperatorPOWL(operator=Operator.XOR, children=[crop_select, skip])
crop_select_choice = OperatorPOWL(operator=Operator.XOR, children=[nutrient_prep, skip])
nutrient_prep_choice = OperatorPOWL(operator=Operator.XOR, children=[waste_system, skip])
waste_system_choice = OperatorPOWL(operator=Operator.XOR, children=[automation_config, skip])
automation_config_choice = OperatorPOWL(operator=Operator.XOR, children=[trial_growth, skip])
trial_growth_choice = OperatorPOWL(operator=Operator.XOR, children=[data_analysis, skip])
data_analysis_choice = OperatorPOWL(operator=Operator.XOR, children=[quality_audit, skip])
quality_audit_choice = OperatorPOWL(operator=Operator.XOR, children=[stakeholder_meet, skip])
stakeholder_meet_choice = OperatorPOWL(operator=Operator.XOR, children=[compliance_check, skip])

root = StrictPartialOrder(nodes=[site_survey, design_layout, legal_review, tech_sourcing, structural_build, climate_setup, irrigation_install, sensor_deploy, crop_select, nutrient_prep, waste_system, automation_config, trial_growth, data_analysis, quality_audit, stakeholder_meet, compliance_check])
root.order.add_edge(site_survey, legal_review_choice)
root.order.add_edge(legal_review, tech_sourcing_choice)
root.order.add_edge(tech_sourcing, structural_build_choice)
root.order.add_edge(structural_build, climate_setup_choice)
root.order.add_edge(climate_setup, irrigation_install_choice)
root.order.add_edge(irrigation_install, sensor_deploy_choice)
root.order.add_edge(sensor_deploy, crop_select_choice)
root.order.add_edge(crop_select, nutrient_prep_choice)
root.order.add_edge(nutrient_prep, waste_system_choice)
root.order.add_edge(waste_system, automation_config_choice)
root.order.add_edge(automation_config, trial_growth_choice)
root.order.add_edge(trial_growth, data_analysis_choice)
root.order.add_edge(data_analysis, quality_audit_choice)
root.order.add_edge(quality_audit, stakeholder_meet_choice)
root.order.add_edge(stakeholder_meet, compliance_check)