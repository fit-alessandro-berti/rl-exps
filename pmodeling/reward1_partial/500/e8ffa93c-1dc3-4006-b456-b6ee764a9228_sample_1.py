import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
env_analysis = Transition(label='Env Analysis')
structure_build = Transition(label='Structure Build')
hydroponics_fit = Transition(label='Hydroponics Fit')
nutrient_mix = Transition(label='Nutrient Mix')
climate_setup = Transition(label='Climate Setup')
energy_audit = Transition(label='Energy Audit')
crop_select = Transition(label='Crop Select')
pest_control = Transition(label='Pest Control')
growth_monitor = Transition(label='Growth Monitor')
harvest_plan = Transition(label='Harvest Plan')
waste_recycle = Transition(label='Waste Recycle')
community_meet = Transition(label='Community Meet')
supply_sync = Transition(label='Supply Sync')
data_review = Transition(label='Data Review')

skip = SilentTransition()

site_survey_node = OperatorPOWL(operator=Operator.SILENT, children=[site_survey])
env_analysis_node = OperatorPOWL(operator=Operator.SILENT, children=[env_analysis])
structure_build_node = OperatorPOWL(operator=Operator.SILENT, children=[structure_build])
hydroponics_fit_node = OperatorPOWL(operator=Operator.SILENT, children=[hydroponics_fit])
nutrient_mix_node = OperatorPOWL(operator=Operator.SILENT, children=[nutrient_mix])
climate_setup_node = OperatorPOWL(operator=Operator.SILENT, children=[climate_setup])
energy_audit_node = OperatorPOWL(operator=Operator.SILENT, children=[energy_audit])
crop_select_node = OperatorPOWL(operator=Operator.SILENT, children=[crop_select])
pest_control_node = OperatorPOWL(operator=Operator.SILENT, children=[pest_control])
growth_monitor_node = OperatorPOWL(operator=Operator.SILENT, children=[growth_monitor])
harvest_plan_node = OperatorPOWL(operator=Operator.SILENT, children=[harvest_plan])
waste_recycle_node = OperatorPOWL(operator=Operator.SILENT, children=[waste_recycle])
community_meet_node = OperatorPOWL(operator=Operator.SILENT, children=[community_meet])
supply_sync_node = OperatorPOWL(operator=Operator.SILENT, children=[supply_sync])
data_review_node = OperatorPOWL(operator=Operator.SILENT, children=[data_review])

root = StrictPartialOrder(nodes=[site_survey_node, env_analysis_node, structure_build_node, hydroponics_fit_node, nutrient_mix_node, climate_setup_node, energy_audit_node, crop_select_node, pest_control_node, growth_monitor_node, harvest_plan_node, waste_recycle_node, community_meet_node, supply_sync_node, data_review_node])
root.order.add_edge(site_survey_node, env_analysis_node)
root.order.add_edge(env_analysis_node, structure_build_node)
root.order.add_edge(structure_build_node, hydroponics_fit_node)
root.order.add_edge(hydroponics_fit_node, nutrient_mix_node)
root.order.add_edge(nutrient_mix_node, climate_setup_node)
root.order.add_edge(climate_setup_node, energy_audit_node)
root.order.add_edge(energy_audit_node, crop_select_node)
root.order.add_edge(crop_select_node, pest_control_node)
root.order.add_edge(pest_control_node, growth_monitor_node)
root.order.add_edge(growth_monitor_node, harvest_plan_node)
root.order.add_edge(harvest_plan_node, waste_recycle_node)
root.order.add_edge(waste_recycle_node, community_meet_node)
root.order.add_edge(community_meet_node, supply_sync_node)
root.order.add_edge(supply_sync_node, data_review_node)