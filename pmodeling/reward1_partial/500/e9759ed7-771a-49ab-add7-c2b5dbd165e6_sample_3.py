from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define transitions
ingredient_sourcing = Transition(label='Ingredient Sourcing')
sample_testing = Transition(label='Sample Testing')
oil_extraction = Transition(label='Oil Extraction')
blend_formulation = Transition(label='Blend Formulation')
quality_control = Transition(label='Quality Control')
aging_process = Transition(label='Aging Process')
allergen_check = Transition(label='Allergen Check')
market_research = Transition(label='Market Research')
bottle_design = Transition(label='Bottle Design')
label_approval = Transition(label='Label Approval')
packaging_setup = Transition(label='Packaging Setup')
batch_mixing = Transition(label='Batch Mixing')
scent_profiling = Transition(label='Scent Profiling')
client_feedback = Transition(label='Client Feedback')
release_scheduling = Transition(label='Release Scheduling')
regulatory_review = Transition(label='Regulatory Review')
sales_training = Transition(label='Sales Training')

# Define operators
skip = SilentTransition()
choice_1 = OperatorPOWL(operator=Operator.XOR, children=[ingredient_sourcing, skip])
choice_2 = OperatorPOWL(operator=Operator.XOR, children=[sample_testing, skip])
choice_3 = OperatorPOWL(operator=Operator.XOR, children=[oil_extraction, skip])
choice_4 = OperatorPOWL(operator=Operator.XOR, children=[blend_formulation, skip])
choice_5 = OperatorPOWL(operator=Operator.XOR, children=[quality_control, skip])
choice_6 = OperatorPOWL(operator=Operator.XOR, children=[aging_process, skip])
choice_7 = OperatorPOWL(operator=Operator.XOR, children=[allergen_check, skip])
choice_8 = OperatorPOWL(operator=Operator.XOR, children=[market_research, skip])
choice_9 = OperatorPOWL(operator=Operator.XOR, children=[bottle_design, skip])
choice_10 = OperatorPOWL(operator=Operator.XOR, children=[label_approval, skip])
choice_11 = OperatorPOWL(operator=Operator.XOR, children=[packaging_setup, skip])
choice_12 = OperatorPOWL(operator=Operator.XOR, children=[batch_mixing, skip])
choice_13 = OperatorPOWL(operator=Operator.XOR, children=[scent_profiling, skip])
choice_14 = OperatorPOWL(operator=Operator.XOR, children=[client_feedback, skip])
choice_15 = OperatorPOWL(operator=Operator.XOR, children=[release_scheduling, skip])
choice_16 = OperatorPOWL(operator=Operator.XOR, children=[regulatory_review, skip])
choice_17 = OperatorPOWL(operator=Operator.XOR, children=[sales_training, skip])

# Define the root process
root = StrictPartialOrder(nodes=[choice_1, choice_2, choice_3, choice_4, choice_5, choice_6, choice_7, choice_8, choice_9, choice_10, choice_11, choice_12, choice_13, choice_14, choice_15, choice_16, choice_17])
root.order.add_edge(choice_1, choice_2)
root.order.add_edge(choice_2, choice_3)
root.order.add_edge(choice_3, choice_4)
root.order.add_edge(choice_4, choice_5)
root.order.add_edge(choice_5, choice_6)
root.order.add_edge(choice_6, choice_7)
root.order.add_edge(choice_7, choice_8)
root.order.add_edge(choice_8, choice_9)
root.order.add_edge(choice_9, choice_10)
root.order.add_edge(choice_10, choice_11)
root.order.add_edge(choice_11, choice_12)
root.order.add_edge(choice_12, choice_13)
root.order.add_edge(choice_13, choice_14)
root.order.add_edge(choice_14, choice_15)
root.order.add_edge(choice_15, choice_16)
root.order.add_edge(choice_16, choice_17)