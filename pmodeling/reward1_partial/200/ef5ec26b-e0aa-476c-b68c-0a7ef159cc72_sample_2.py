import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
Site_Survey = Transition(label='Site Survey')
Soil_Testing = Transition(label='Soil Testing')
Stakeholder_Meet = Transition(label='Stakeholder Meet')
Resource_Plan = Transition(label='Resource Plan')
Crop_Selection = Transition(label='Crop Selection')
Volunteer_Sign_up = Transition(label='Volunteer Sign-up')
Tech_Setup = Transition(label='Tech Setup')
Irrigation_Check = Transition(label='Irrigation Check')
Data_Collection = Transition(label='Data Collection')
Growth_Monitoring = Transition(label='Growth Monitoring')
Conflict_Mediate = Transition(label='Conflict Mediate')
Workshop_Prep = Transition(label='Workshop Prep')
Market_Forecast = Transition(label='Market Forecast')
Yield_Analysis = Transition(label='Yield Analysis')
Sustainability_Audit = Transition(label='Sustainability Audit')
Community_Feedback = Transition(label='Community Feedback')
Equipment_Maintain = Transition(label='Equipment Maintain')
Waste_Manage = Transition(label='Waste Manage')

skip = SilentTransition()
Site_Survey_node = OperatorPOWL(operator=Operator.NONE, children=[Site_Survey])
Soil_Testing_node = OperatorPOWL(operator=Operator.NONE, children=[Soil_Testing])
Stakeholder_Meet_node = OperatorPOWL(operator=Operator.NONE, children=[Stakeholder_Meet])
Resource_Plan_node = OperatorPOWL(operator=Operator.NONE, children=[Resource_Plan])
Crop_Selection_node = OperatorPOWL(operator=Operator.NONE, children=[Crop_Selection])
Volunteer_Sign_up_node = OperatorPOWL(operator=Operator.NONE, children=[Volunteer_Sign_up])
Tech_Setup_node = OperatorPOWL(operator=Operator.NONE, children=[Tech_Setup])
Irrigation_Check_node = OperatorPOWL(operator=Operator.NONE, children=[Irrigation_Check])
Data_Collection_node = OperatorPOWL(operator=Operator.NONE, children=[Data_Collection])
Growth_Monitoring_node = OperatorPOWL(operator=Operator.NONE, children=[Growth_Monitoring])
Conflict_Mediate_node = OperatorPOWL(operator=Operator.NONE, children=[Conflict_Mediate])
Workshop_Prep_node = OperatorPOWL(operator=Operator.NONE, children=[Workshop_Prep])
Market_Forecast_node = OperatorPOWL(operator=Operator.NONE, children=[Market_Forecast])
Yield_Analysis_node = OperatorPOWL(operator=Operator.NONE, children=[Yield_Analysis])
Sustainability_Audit_node = OperatorPOWL(operator=Operator.NONE, children=[Sustainability_Audit])
Community_Feedback_node = OperatorPOWL(operator=Operator.NONE, children=[Community_Feedback])
Equipment_Maintain_node = OperatorPOWL(operator=Operator.NONE, children=[Equipment_Maintain])
Waste_Manage_node = OperatorPOWL(operator=Operator.NONE, children=[Waste_Manage])

root = StrictPartialOrder(nodes=[Site_Survey_node, Soil_Testing_node, Stakeholder_Meet_node, Resource_Plan_node, Crop_Selection_node, Volunteer_Sign_up_node, Tech_Setup_node, Irrigation_Check_node, Data_Collection_node, Growth_Monitoring_node, Conflict_Mediate_node, Workshop_Prep_node, Market_Forecast_node, Yield_Analysis_node, Sustainability_Audit_node, Community_Feedback_node, Equipment_Maintain_node, Waste_Manage_node])
root.order.add_edge(Site_Survey_node, Soil_Testing_node)
root.order.add_edge(Soil_Testing_node, Stakeholder_Meet_node)
root.order.add_edge(Stakeholder_Meet_node, Resource_Plan_node)
root.order.add_edge(Resource_Plan_node, Crop_Selection_node)
root.order.add_edge(Crop_Selection_node, Volunteer_Sign_up_node)
root.order.add_edge(Volunteer_Sign_up_node, Tech_Setup_node)
root.order.add_edge(Tech_Setup_node, Irrigation_Check_node)
root.order.add_edge(Irrigation_Check_node, Data_Collection_node)
root.order.add_edge(Data_Collection_node, Growth_Monitoring_node)
root.order.add_edge(Growth_Monitoring_node, Conflict_Mediate_node)
root.order.add_edge(Conflict_Mediate_node, Workshop_Prep_node)
root.order.add_edge(Workshop_Prep_node, Market_Forecast_node)
root.order.add_edge(Market_Forecast_node, Yield_Analysis_node)
root.order.add_edge(Yield_Analysis_node, Sustainability_Audit_node)
root.order.add_edge(Sustainability_Audit_node, Community_Feedback_node)
root.order.add_edge(Community_Feedback_node, Equipment_Maintain_node)
root.order.add_edge(Equipment_Maintain_node, Waste_Manage_node)