from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define transitions for each activity
initial_assess = Transition(label='Initial Assess')
condition_scan = Transition(label='Condition Scan')
material_test = Transition(label='Material Test')
historical_check = Transition(label='Historical Check')
provenance_verify = Transition(label='Provenance Verify')
parts_sourcing = Transition(label='Parts Sourcing')
gentle_clean = Transition(label='Gentle Clean')
stabilize_item = Transition(label='Stabilize Item')
structural_repair = Transition(label='Structural Repair')
surface_finish = Transition(label='Surface Finish')
expert_consult = Transition(label='Expert Consult')
archival_review = Transition(label='Archival Review')
ethics_audit = Transition(label='Ethics Audit')
quality_inspect = Transition(label='Quality Inspect')
photo_document = Transition(label='Photo Document')
packaging_prep = Transition(label='Packaging Prep')
report_generate = Transition(label='Report Generate')
certify_provenance = Transition(label='Certify Provenance')

# Define silent transitions
skip = SilentTransition()

# Define the process
initial_assess_to_condition_scan = OperatorPOWL(operator=Operator.XOR, children=[initial_assess, condition_scan])
condition_scan_to_material_test = OperatorPOWL(operator=Operator.XOR, children=[condition_scan, material_test])
material_test_to_historical_check = OperatorPOWL(operator=Operator.XOR, children=[material_test, historical_check])
historical_check_to_provenance_verify = OperatorPOWL(operator=Operator.XOR, children=[historical_check, provenance_verify])
provenance_verify_to_parts_sourcing = OperatorPOWL(operator=Operator.XOR, children=[provenance_verify, parts_sourcing])
parts_sourcing_to_gentle_clean = OperatorPOWL(operator=Operator.XOR, children=[parts_sourcing, gentle_clean])
gentle_clean_to_stabilize_item = OperatorPOWL(operator=Operator.XOR, children=[gentle_clean, stabilize_item])
stabilize_item_to_structural_repair = OperatorPOWL(operator=Operator.XOR, children=[stabilize_item, structural_repair])
structural_repair_to_surface_finish = OperatorPOWL(operator=Operator.XOR, children=[structural_repair, surface_finish])
surface_finish_to_expert_consult = OperatorPOWL(operator=Operator.XOR, children=[surface_finish, expert_consult])
expert_consult_to_archival_review = OperatorPOWL(operator=Operator.XOR, children=[expert_consult, archival_review])
archival_review_to_ethics_audit = OperatorPOWL(operator=Operator.XOR, children=[archival_review, ethics_audit])
ethics_audit_to_quality_inspect = OperatorPOWL(operator=Operator.XOR, children=[ethics_audit, quality_inspect])
quality_inspect_to_photo_document = OperatorPOWL(operator=Operator.XOR, children=[quality_inspect, photo_document])
photo_document_to_packaging_prep = OperatorPOWL(operator=Operator.XOR, children=[photo_document, packaging_prep])
packaging_prep_to_report_generate = OperatorPOWL(operator=Operator.XOR, children=[packaging_prep, report_generate])
report_generate_to_certify_provenance = OperatorPOWL(operator=Operator.XOR, children=[report_generate, certify_provenance])

root = StrictPartialOrder(nodes=[initial_assess_to_condition_scan, condition_scan_to_material_test, material_test_to_historical_check, historical_check_to_provenance_verify, provenance_verify_to_parts_sourcing, parts_sourcing_to_gentle_clean, gentle_clean_to_stabilize_item, stabilize_item_to_structural_repair, structural_repair_to_surface_finish, surface_finish_to_expert_consult, expert_consult_to_archival_review, archival_review_to_ethics_audit, ethics_audit_to_quality_inspect, quality_inspect_to_photo_document, photo_document_to_packaging_prep, packaging_prep_to_report_generate, report_generate_to_certify_provenance])
root.order.add_edge(initial_assess_to_condition_scan, condition_scan_to_material_test)
root.order.add_edge(condition_scan_to_material_test, material_test_to_historical_check)
root.order.add_edge(material_test_to_historical_check, historical_check_to_provenance_verify)
root.order.add_edge(historical_check_to_provenance_verify, provenance_verify_to_parts_sourcing)
root.order.add_edge(provenance_verify_to_parts_sourcing, parts_sourcing_to_gentle_clean)
root.order.add_edge(parts_sourcing_to_gentle_clean, gentle_clean_to_stabilize_item)
root.order.add_edge(gentle_clean_to_stabilize_item, stabilize_item_to_structural_repair)
root.order.add_edge(stabilize_item_to_structural_repair, structural_repair_to_surface_finish)
root.order.add_edge(structural_repair_to_surface_finish, surface_finish_to_expert_consult)
root.order.add_edge(surface_finish_to_expert_consult, expert_consult_to_archival_review)
root.order.add_edge(expert_consult_to_archival_review, archival_review_to_ethics_audit)
root.order.add_edge(archival_review_to_ethics_audit, ethics_audit_to_quality_inspect)
root.order.add_edge(ethics_audit_to_quality_inspect, quality_inspect_to_photo_document)
root.order.add_edge(quality_inspect_to_photo_document, photo_document_to_packaging_prep)
root.order.add_edge(photo_document_to_packaging_prep, packaging_prep_to_report_generate)
root.order.add_edge(packaging_prep_to_report_generate, report_generate_to_certify_provenance)