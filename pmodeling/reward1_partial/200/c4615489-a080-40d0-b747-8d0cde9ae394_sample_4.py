import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
structural_audit = Transition(label='Structural Audit')
permit_filing = Transition(label='Permit Filing')
design_layout = Transition(label='Design Layout')
install_hvac = Transition(label='Install HVAC')
set_lighting = Transition(label='Set Lighting')
build_racks = Transition(label='Build Racks')
install_hydroponics = Transition(label='Install Hydroponics')
configure_sensors = Transition(label='Configure Sensors')
select_crops = Transition(label='Select Crops')
seed_planting = Transition(label='Seed Planting')
monitor_growth = Transition(label='Monitor Growth')
nutrient_mixing = Transition(label='Nutrient Mixing')
staff_training = Transition(label='Staff Training')
market_launch = Transition(label='Market Launch')
waste_recycling = Transition(label='Waste Recycling')
customer_onboarding = Transition(label='Customer Onboarding')

skip = SilentTransition()

site_survey_to_audit = OperatorPOWL(operator=Operator.XOR, children=[site_survey, structural_audit])
audit_to_permit = OperatorPOWL(operator=Operator.XOR, children=[structural_audit, permit_filing])
permit_to_layout = OperatorPOWL(operator=Operator.XOR, children=[permit_filing, design_layout])
layout_to_hvac = OperatorPOWL(operator=Operator.XOR, children=[design_layout, install_hvac])
hvac_to_lighting = OperatorPOWL(operator=Operator.XOR, children=[install_hvac, set_lighting])
lighting_to_racks = OperatorPOWL(operator=Operator.XOR, children=[set_lighting, build_racks])
racks_to_hydroponics = OperatorPOWL(operator=Operator.XOR, children=[build_racks, install_hydroponics])
hydroponics_to_sensors = OperatorPOWL(operator=Operator.XOR, children=[install_hydroponics, configure_sensors])
sensors_to_crops = OperatorPOWL(operator=Operator.XOR, children=[configure_sensors, select_crops])
crops_to_planting = OperatorPOWL(operator=Operator.XOR, children=[select_crops, seed_planting])
planting_to_monitor = OperatorPOWL(operator=Operator.XOR, children=[seed_planting, monitor_growth])
monitor_to_mix = OperatorPOWL(operator=Operator.XOR, children=[monitor_growth, nutrient_mixing])
mix_to_training = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mixing, staff_training])
training_to_launch = OperatorPOWL(operator=Operator.XOR, children=[staff_training, market_launch])
launch_to_recycling = OperatorPOWL(operator=Operator.XOR, children=[market_launch, waste_recycling])
recycling_to_onboarding = OperatorPOWL(operator=Operator.XOR, children=[waste_recycling, customer_onboarding])

root = StrictPartialOrder(nodes=[site_survey_to_audit, audit_to_permit, permit_to_layout, layout_to_hvac, hvac_to_lighting, lighting_to_racks, racks_to_hydroponics, hydroponics_to_sensors, sensors_to_crops, crops_to_planting, planting_to_monitor, monitor_to_mix, mix_to_training, training_to_launch, launch_to_recycling, recycling_to_onboarding])
root.order.add_edge(site_survey_to_audit, audit_to_permit)
root.order.add_edge(audit_to_permit, permit_to_layout)
root.order.add_edge(permit_to_layout, layout_to_hvac)
root.order.add_edge(layout_to_hvac, hvac_to_lighting)
root.order.add_edge(hvac_to_lighting, lighting_to_racks)
root.order.add_edge(lighting_to_racks, racks_to_hydroponics)
root.order.add_edge(racks_to_hydroponics, hydroponics_to_sensors)
root.order.add_edge(hydroponics_to_sensors, sensors_to_crops)
root.order.add_edge(sensors_to_crops, crops_to_planting)
root.order.add_edge(crops_to_planting, planting_to_monitor)
root.order.add_edge(planting_to_monitor, monitor_to_mix)
root.order.add_edge(monitor_to_mix, mix_to_training)
root.order.add_edge(mix_to_training, training_to_launch)
root.order.add_edge(training_to_launch, launch_to_recycling)
root.order.add_edge(launch_to_recycling, recycling_to_onboarding)