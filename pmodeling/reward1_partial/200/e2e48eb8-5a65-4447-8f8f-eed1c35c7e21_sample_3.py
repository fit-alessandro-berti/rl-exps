from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition

site_survey = Transition(label='Site Survey')
structural_check = Transition(label='Structural Check')
climate_study = Transition(label='Climate Study')
soil_prep = Transition(label='Soil Prep')
seed_selection = Transition(label='Seed Selection')
irrigation_setup = Transition(label='Irrigation Setup')
nutrient_mix = Transition(label='Nutrient Mix')
sensor_install = Transition(label='Sensor Install')
pest_monitor = Transition(label='Pest Monitor')
data_analysis = Transition(label='Data Analysis')
regulation_review = Transition(label='Regulation Review')
community_meet = Transition(label='Community Meet')
harvest_plan = Transition(label='Harvest Plan')
packaging_design = Transition(label='Packaging Design')
distribution_map = Transition(label='Distribution Map')
feedback_loop = Transition(label='Feedback Loop')
maintenance_schedule = Transition(label='Maintenance Schedule')

skip = SilentTransition()

site_survey_loop = OperatorPOWL(operator=Operator.LOOP, children=[site_survey, structural_check, climate_study])
soil_prep_microclimate = OperatorPOWL(operator=Operator.XOR, children=[soil_prep, skip])
seed_selection_tailored = OperatorPOWL(operator=Operator.XOR, children=[seed_selection, skip])
irrigation_nutrient = OperatorPOWL(operator=Operator.XOR, children=[irrigation_setup, nutrient_mix])
sensor_pest = OperatorPOWL(operator=Operator.XOR, children=[sensor_install, pest_monitor])
data_analysis_regulation = OperatorPOWL(operator=Operator.XOR, children=[data_analysis, regulation_review])
community_meet_feedback = OperatorPOWL(operator=Operator.XOR, children=[community_meet, feedback_loop])
harvest_plan_distribution = OperatorPOWL(operator=Operator.XOR, children=[harvest_plan, distribution_map])
maintenance_schedule_plan = OperatorPOWL(operator=Operator.XOR, children=[maintenance_schedule, skip])

root = StrictPartialOrder(nodes=[site_survey_loop, soil_prep_microclimate, seed_selection_tailored, irrigation_nutrient, sensor_pest, data_analysis_regulation, community_meet_feedback, harvest_plan_distribution, maintenance_schedule_plan])
root.order.add_edge(site_survey_loop, soil_prep_microclimate)
root.order.add_edge(soil_prep_microclimate, seed_selection_tailored)
root.order.add_edge(seed_selection_tailored, irrigation_nutrient)
root.order.add_edge(irrigation_nutrient, sensor_pest)
root.order.add_edge(sensor_pest, data_analysis_regulation)
root.order.add_edge(data_analysis_regulation, community_meet_feedback)
root.order.add_edge(community_meet_feedback, harvest_plan_distribution)
root.order.add_edge(harvest_plan_distribution, maintenance_schedule_plan)