from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
structural_check = Transition(label='Structural Check')
modular_install = Transition(label='Modular Install')
hydroponic_setup = Transition(label='Hydroponic Setup')
nutrient_mix = Transition(label='Nutrient Mix')
sensor_setup = Transition(label='Sensor Setup')
ai_training = Transition(label='AI Training')
data_capture = Transition(label='Data Capture')
maintenance_plan = Transition(label='Maintenance Plan')
pest_scan = Transition(label='Pest Scan')
growth_monitor = Transition(label='Growth Monitor')
harvest_sync = Transition(label='Harvest Sync')
quality_test = Transition(label='Quality Test')
package_prep = Transition(label='Package Prep')
logistics_plan = Transition(label='Logistics Plan')

skip = SilentTransition()

site_survey_to_structural_check = OperatorPOWL(operator=Operator.XOR, children=[structural_check, skip])
structural_check_to_modular_install = OperatorPOWL(operator=Operator.XOR, children=[modular_install, skip])
modular_install_to_hydroponic_setup = OperatorPOWL(operator=Operator.XOR, children=[hydroponic_setup, skip])
hydroponic_setup_to_nutrient_mix = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, skip])
nutrient_mix_to_sensor_setup = OperatorPOWL(operator=Operator.XOR, children=[sensor_setup, skip])
sensor_setup_to_ai_training = OperatorPOWL(operator=Operator.XOR, children=[ai_training, skip])
ai_training_to_data_capture = OperatorPOWL(operator=Operator.XOR, children=[data_capture, skip])
data_capture_to_maintenance_plan = OperatorPOWL(operator=Operator.XOR, children=[maintenance_plan, skip])
maintenance_plan_to_pest_scan = OperatorPOWL(operator=Operator.XOR, children=[pest_scan, skip])
pest_scan_to_growth_monitor = OperatorPOWL(operator=Operator.XOR, children=[growth_monitor, skip])
growth_monitor_to_harvest_sync = OperatorPOWL(operator=Operator.XOR, children=[harvest_sync, skip])
harvest_sync_to_quality_test = OperatorPOWL(operator=Operator.XOR, children=[quality_test, skip])
quality_test_to_package_prep = OperatorPOWL(operator=Operator.XOR, children=[package_prep, skip])
package_prep_to_logistics_plan = OperatorPOWL(operator=Operator.XOR, children=[logistics_plan, skip])

root = StrictPartialOrder(nodes=[site_survey_to_structural_check, structural_check_to_modular_install, modular_install_to_hydroponic_setup, hydroponic_setup_to_nutrient_mix, nutrient_mix_to_sensor_setup, sensor_setup_to_ai_training, ai_training_to_data_capture, data_capture_to_maintenance_plan, maintenance_plan_to_pest_scan, pest_scan_to_growth_monitor, growth_monitor_to_harvest_sync, harvest_sync_to_quality_test, quality_test_to_package_prep, package_prep_to_logistics_plan])
root.order.add_edge(site_survey_to_structural_check, structural_check_to_modular_install)
root.order.add_edge(structural_check_to_modular_install, modular_install_to_hydroponic_setup)
root.order.add_edge(modular_install_to_hydroponic_setup, hydroponic_setup_to_nutrient_mix)
root.order.add_edge(hydroponic_setup_to_nutrient_mix, nutrient_mix_to_sensor_setup)
root.order.add_edge(nutrient_mix_to_sensor_setup, sensor_setup_to_ai_training)
root.order.add_edge(sensor_setup_to_ai_training, ai_training_to_data_capture)
root.order.add_edge(ai_training_to_data_capture, data_capture_to_maintenance_plan)
root.order.add_edge(data_capture_to_maintenance_plan, maintenance_plan_to_pest_scan)
root.order.add_edge(maintenance_plan_to_pest_scan, pest_scan_to_growth_monitor)
root.order.add_edge(pest_scan_to_growth_monitor, growth_monitor_to_harvest_sync)
root.order.add_edge(growth_monitor_to_harvest_sync, harvest_sync_to_quality_test)
root.order.add_edge(harvest_sync_to_quality_test, quality_test_to_package_prep)
root.order.add_edge(quality_test_to_package_prep, package_prep_to_logistics_plan)