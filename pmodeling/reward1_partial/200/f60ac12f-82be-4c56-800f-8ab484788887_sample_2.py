from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

milk_sourcing = Transition(label='Milk Sourcing')
culture_blending = Transition(label='Culture Blending')
pasteurize = Transition(label='Milk Pasteurize')
cutting = Transition(label='Curd Cutting')
drain = Transition(label='Whey Drain')
inoculate = Transition(label='Mold Inoculate')
press = Transition(label='Press Cheese')
brine = Transition(label='Salt Brine')
age_monitor = Transition(label='Age Monitor')
quality_test = Transition(label='Quality Test')
packaging_prep = Transition(label='Packaging Prep')
label_design = Transition(label='Label Design')
order_allocation = Transition(label='Order Allocation')
transport_arrange = Transition(label='Transport Arrange')
retail_sync = Transition(label='Retail Sync')
customer_review = Transition(label='Customer Review')
feedback_analyze = Transition(label='Feedback Analyze')

skip = SilentTransition()

culture_blending_loop = OperatorPOWL(operator=Operator.LOOP, children=[culture_blending, pasteurize])
milk_process = OperatorPOWL(operator=Operator.XOR, children=[cutting, drain])
press_loop = OperatorPOWL(operator=Operator.LOOP, children=[inoculate, press])
age_monitor_loop = OperatorPOWL(operator=Operator.LOOP, children=[age_monitor, quality_test])
packaging_loop = OperatorPOWL(operator=Operator.LOOP, children=[packaging_prep, label_design])
allocation_loop = OperatorPOWL(operator=Operator.LOOP, children=[order_allocation, transport_arrange])
sync_loop = OperatorPOWL(operator=Operator.LOOP, children=[retail_sync, customer_review])
feedback_loop = OperatorPOWL(operator=Operator.LOOP, children=[feedback_analyze, culture_blending_loop])

root = StrictPartialOrder(nodes=[milk_sourcing, culture_blending_loop, milk_process, press_loop, age_monitor_loop, packaging_loop, allocation_loop, sync_loop, feedback_loop])
root.order.add_edge(milk_sourcing, culture_blending_loop)
root.order.add_edge(culture_blending_loop, milk_process)
root.order.add_edge(milk_process, press_loop)
root.order.add_edge(press_loop, age_monitor_loop)
root.order.add_edge(age_monitor_loop, packaging_loop)
root.order.add_edge(packaging_loop, allocation_loop)
root.order.add_edge(allocation_loop, sync_loop)
root.order.add_edge(sync_loop, feedback_loop)