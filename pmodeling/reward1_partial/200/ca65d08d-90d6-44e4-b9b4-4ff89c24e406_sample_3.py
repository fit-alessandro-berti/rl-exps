import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
design_layout = Transition(label='Design Layout')
system_build = Transition(label='System Build')
install_sensors = Transition(label='Install Sensors')
select_crops = Transition(label='Select Crops')
setup_lighting = Transition(label='Setup Lighting')
configure_climate = Transition(label='Configure Climate')
nutrient_mix = Transition(label='Nutrient Mix')
automate_watering = Transition(label='Automate Watering')
test_systems = Transition(label='Test Systems')
train_staff = Transition(label='Train Staff')
waste_plan = Transition(label='Waste Plan')
market_link = Transition(label='Market Link')
data_monitor = Transition(label='Data Monitor')
optimize_yield = Transition(label='Optimize Yield')

skip = SilentTransition()
loop_site_survey = OperatorPOWL(operator=Operator.LOOP, children=[site_survey])
loop_design_layout = OperatorPOWL(operator=Operator.LOOP, children=[design_layout])
loop_system_build = OperatorPOWL(operator=Operator.LOOP, children=[system_build])
loop_install_sensors = OperatorPOWL(operator=Operator.LOOP, children=[install_sensors])
loop_select_crops = OperatorPOWL(operator=Operator.LOOP, children=[select_crops])
loop_setup_lighting = OperatorPOWL(operator=Operator.LOOP, children=[setup_lighting])
loop_configure_climate = OperatorPOWL(operator=Operator.LOOP, children=[configure_climate])
loop_nutrient_mix = OperatorPOWL(operator=Operator.LOOP, children=[nutrient_mix])
loop_automate_watering = OperatorPOWL(operator=Operator.LOOP, children=[automate_watering])
loop_test_systems = OperatorPOWL(operator=Operator.LOOP, children=[test_systems])
loop_train_staff = OperatorPOWL(operator=Operator.LOOP, children=[train_staff])
loop_waste_plan = OperatorPOWL(operator=Operator.LOOP, children=[waste_plan])
loop_market_link = OperatorPOWL(operator=Operator.LOOP, children=[market_link])
loop_data_monitor = OperatorPOWL(operator=Operator.LOOP, children=[data_monitor])
loop_optimize_yield = OperatorPOWL(operator=Operator.LOOP, children=[optimize_yield])

xor_site_survey = OperatorPOWL(operator=Operator.XOR, children=[site_survey, skip])
xor_design_layout = OperatorPOWL(operator=Operator.XOR, children=[design_layout, skip])
xor_system_build = OperatorPOWL(operator=Operator.XOR, children=[system_build, skip])
xor_install_sensors = OperatorPOWL(operator=Operator.XOR, children=[install_sensors, skip])
xor_select_crops = OperatorPOWL(operator=Operator.XOR, children=[select_crops, skip])
xor_setup_lighting = OperatorPOWL(operator=Operator.XOR, children=[setup_lighting, skip])
xor_configure_climate = OperatorPOWL(operator=Operator.XOR, children=[configure_climate, skip])
xor_nutrient_mix = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, skip])
xor_automate_watering = OperatorPOWL(operator=Operator.XOR, children=[automate_watering, skip])
xor_test_systems = OperatorPOWL(operator=Operator.XOR, children=[test_systems, skip])
xor_train_staff = OperatorPOWL(operator=Operator.XOR, children=[train_staff, skip])
xor_waste_plan = OperatorPOWL(operator=Operator.XOR, children=[waste_plan, skip])
xor_market_link = OperatorPOWL(operator=Operator.XOR, children=[market_link, skip])
xor_data_monitor = OperatorPOWL(operator=Operator.XOR, children=[data_monitor, skip])
xor_optimize_yield = OperatorPOWL(operator=Operator.XOR, children=[optimize_yield, skip])

root = StrictPartialOrder(nodes=[loop_site_survey, loop_design_layout, loop_system_build, loop_install_sensors, loop_select_crops, loop_setup_lighting, loop_configure_climate, loop_nutrient_mix, loop_automate_watering, loop_test_systems, loop_train_staff, loop_waste_plan, loop_market_link, loop_data_monitor, loop_optimize_yield])
root.order.add_edge(loop_site_survey, xor_site_survey)
root.order.add_edge(loop_design_layout, xor_design_layout)
root.order.add_edge(loop_system_build, xor_system_build)
root.order.add_edge(loop_install_sensors, xor_install_sensors)
root.order.add_edge(loop_select_crops, xor_select_crops)
root.order.add_edge(loop_setup_lighting, xor_setup_lighting)
root.order.add_edge(loop_configure_climate, xor_configure_climate)
root.order.add_edge(loop_nutrient_mix, xor_nutrient_mix)
root.order.add_edge(loop_automate_watering, xor_automate_watering)
root.order.add_edge(loop_test_systems, xor_test_systems)
root.order.add_edge(loop_train_staff, xor_train_staff)
root.order.add_edge(loop_waste_plan, xor_waste_plan)
root.order.add_edge(loop_market_link, xor_market_link)
root.order.add_edge(loop_data_monitor, xor_data_monitor)
root.order.add_edge(loop_optimize_yield, xor_optimize_yield)