import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

initial_assess = Transition(label='Initial Assess')
disassemble_parts = Transition(label='Disassemble Parts')
ultrasonic_clean = Transition(label='Ultrasonic Clean')
inspect_components = Transition(label='Inspect Components')
fabricate_gears = Transition(label='Fabricate Gears')
dial_restoration = Transition(label='Dial Restoration')
repaint_markers = Transition(label='Repaint Markers')
reassemble_movement = Transition(label='Reassemble Movement')
lubricate_bearings = Transition(label='Lubricate Bearings')
calibrate_timing = Transition(label='Calibrate Timing')
polish_case = Transition(label='Polish Case')
re_case_watch = Transition(label='Re-case Watch')
quality_testing = Transition(label='Quality Testing')
document_process = Transition(label='Document Process')
package_product = Transition(label='Package Product')

skip = SilentTransition()

loop_inspect = OperatorPOWL(operator=Operator.LOOP, children=[fabricate_gears, inspect_components])
xor_inspect = OperatorPOWL(operator=Operator.XOR, children=[loop_inspect, skip])
loop_clean = OperatorPOWL(operator=Operator.LOOP, children=[inspect_components, ultrasonic_clean])
xor_clean = OperatorPOWL(operator=Operator.XOR, children=[loop_clean, skip])
loop_disassemble = OperatorPOWL(operator=Operator.LOOP, children=[inspect_components, disassemble_parts])
xor_disassemble = OperatorPOWL(operator=Operator.XOR, children=[loop_disassemble, skip])
loop_initial_assess = OperatorPOWL(operator=Operator.LOOP, children=[inspect_components, initial_assess])
xor_initial_assess = OperatorPOWL(operator=Operator.XOR, children=[loop_initial_assess, skip])
loop_dial_restoration = OperatorPOWL(operator=Operator.LOOP, children=[inspect_components, dial_restoration])
xor_dial_restoration = OperatorPOWL(operator=Operator.XOR, children=[loop_dial_restoration, skip])
loop_repaint_markers = OperatorPOWL(operator=Operator.LOOP, children=[inspect_components, repaint_markers])
xor_repaint_markers = OperatorPOWL(operator=Operator.XOR, children=[loop_repaint_markers, skip])
loop_reassemble_movement = OperatorPOWL(operator=Operator.LOOP, children=[inspect_components, reassemble_movement])
xor_reassemble_movement = OperatorPOWL(operator=Operator.XOR, children=[loop_reassemble_movement, skip])
loop_lubricate_bearings = OperatorPOWL(operator=Operator.LOOP, children=[inspect_components, lubricate_bearings])
xor_lubricate_bearings = OperatorPOWL(operator=Operator.XOR, children=[loop_lubricate_bearings, skip])
loop_calibrate_timing = OperatorPOWL(operator=Operator.LOOP, children=[inspect_components, calibrate_timing])
xor_calibrate_timing = OperatorPOWL(operator=Operator.XOR, children=[loop_calibrate_timing, skip])
loop_polish_case = OperatorPOWL(operator=Operator.LOOP, children=[inspect_components, polish_case])
xor_polish_case = OperatorPOWL(operator=Operator.XOR, children=[loop_polish_case, skip])
loop_re_case_watch = OperatorPOWL(operator=Operator.LOOP, children=[inspect_components, re_case_watch])
xor_re_case_watch = OperatorPOWL(operator=Operator.XOR, children=[loop_re_case_watch, skip])
loop_quality_testing = OperatorPOWL(operator=Operator.LOOP, children=[inspect_components, quality_testing])
xor_quality_testing = OperatorPOWL(operator=Operator.XOR, children=[loop_quality_testing, skip])
loop_document_process = OperatorPOWL(operator=Operator.LOOP, children=[inspect_components, document_process])
xor_document_process = OperatorPOWL(operator=Operator.XOR, children=[loop_document_process, skip])
loop_package_product = OperatorPOWL(operator=Operator.LOOP, children=[inspect_components, package_product])
xor_package_product = OperatorPOWL(operator=Operator.XOR, children=[loop_package_product, skip])

root = StrictPartialOrder(nodes=[initial_assess, disassemble_parts, ultrasonic_clean, inspect_components, fabricate_gears, dial_restoration, repaint_markers, reassemble_movement, lubricate_bearings, calibrate_timing, polish_case, re_case_watch, quality_testing, document_process, package_product])
root.order.add_edge(initial_assess, disassemble_parts)
root.order.add_edge(disassemble_parts, ultrasonic_clean)
root.order.add_edge(ultrasonic_clean, inspect_components)
root.order.add_edge(inspect_components, fabricate_gears)
root.order.add_edge(inspect_components, dial_restoration)
root.order.add_edge(inspect_components, repaint_markers)
root.order.add_edge(inspect_components, reassemble_movement)
root.order.add_edge(inspect_components, lubricate_bearings)
root.order.add_edge(inspect_components, calibrate_timing)
root.order.add_edge(inspect_components, polish_case)
root.order.add_edge(inspect_components, re_case_watch)
root.order.add_edge(inspect_components, quality_testing)
root.order.add_edge(inspect_components, document_process)
root.order.add_edge(inspect_components, package_product)
root.order.add_edge(fabricate_gears, inspect_components)
root.order.add_edge(dial_restoration, inspect_components)
root.order.add_edge(repaint_markers, inspect_components)
root.order.add_edge(reassemble_movement, inspect_components)
root.order.add_edge(lubricate_bearings, inspect_components)
root.order.add_edge(calibrate_timing, inspect_components)
root.order.add_edge(polish_case, inspect_components)
root.order.add_edge(re_case_watch, inspect_components)
root.order.add_edge(quality_testing, inspect_components)
root.order.add_edge(document_process, inspect_components)
root.order.add_edge(package_product, inspect_components)