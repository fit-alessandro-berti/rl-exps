import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

Discover_Item = Transition(label='Discover Item')
Document_Find = Transition(label='Document Find')
Initial_Survey = Transition(label='Initial Survey')
Image_Capture = Transition(label='Image Capture')
Material_Testing = Transition(label='Material Testing')
Style_Compare = Transition(label='Style Compare')
Expert_Consult = Transition(label='Expert Consult')
Provenance_Check = Transition(label='Provenance Check')
Ownership_Verify = Transition(label='Ownership Verify')
Legal_Review = Transition(label='Legal Review')
Risk_Assess = Transition(label='Risk Assess')
Conservation_Plan = Transition(label='Conservation Plan')
Certification = Transition(label='Certification')
Secure_Transfer = Transition(label='Secure Transfer')
Dispute_Resolve = Transition(label='Dispute Resolve')
Final_Archive = Transition(label='Final Archive')

skip = SilentTransition()
xor1 = OperatorPOWL(operator=Operator.XOR, children=[Provenance_Check, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[Ownership_Verify, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[Legal_Review, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[Risk_Assess, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[Conservation_Plan, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[Certification, skip])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[Secure_Transfer, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[Dispute_Resolve, skip])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[Final_Archive, skip])

root = StrictPartialOrder(nodes=[Discover_Item, Document_Find, Initial_Survey, Image_Capture, Material_Testing, Style_Compare, Expert_Consult, xor1, xor2, xor3, xor4, xor5, xor6, xor7, xor8, xor9])
root.order.add_edge(Discover_Item, Document_Find)
root.order.add_edge(Document_Find, Initial_Survey)
root.order.add_edge(Initial_Survey, Image_Capture)
root.order.add_edge(Image_Capture, Material_Testing)
root.order.add_edge(Material_Testing, Style_Compare)
root.order.add_edge(Style_Compare, Expert_Consult)
root.order.add_edge(Expert_Consult, xor1)
root.order.add_edge(Provenance_Check, xor2)
root.order.add_edge(Ownership_Verify, xor3)
root.order.add_edge(Legal_Review, xor4)
root.order.add_edge(Risk_Assess, xor5)
root.order.add_edge(Conservation_Plan, xor6)
root.order.add_edge(Certification, xor7)
root.order.add_edge(Secure_Transfer, xor8)
root.order.add_edge(Dispute_Resolve, xor9)
root.order.add_edge(xor1, xor2)
root.order.add_edge(xor1, xor3)
root.order.add_edge(xor1, xor4)
root.order.add_edge(xor1, xor5)
root.order.add_edge(xor1, xor6)
root.order.add_edge(xor1, xor7)
root.order.add_edge(xor1, xor8)
root.order.add_edge(xor1, xor9)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor2, xor4)
root.order.add_edge(xor2, xor5)
root.order.add_edge(xor2, xor6)
root.order.add_edge(xor2, xor7)
root.order.add_edge(xor2, xor8)
root.order.add_edge(xor2, xor9)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor3, xor5)
root.order.add_edge(xor3, xor6)
root.order.add_edge(xor3, xor7)
root.order.add_edge(xor3, xor8)
root.order.add_edge(xor3, xor9)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor4, xor6)
root.order.add_edge(xor4, xor7)
root.order.add_edge(xor4, xor8)
root.order.add_edge(xor4, xor9)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor5, xor7)
root.order.add_edge(xor5, xor8)
root.order.add_edge(xor5, xor9)
root.order.add_edge(xor6, xor7)
root.order.add_edge(xor6, xor8)
root.order.add_edge(xor6, xor9)
root.order.add_edge(xor7, xor8)
root.order.add_edge(xor7, xor9)
root.order.add_edge(xor8, xor9)