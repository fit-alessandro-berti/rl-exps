from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_analysis = Transition(label='Site Analysis')
zoning_review = Transition(label='Zoning Review')
modular_design = Transition(label='Modular Design')
climate_setup = Transition(label='Climate Setup')
nutrient_mix = Transition(label='Nutrient Mix')
seed_selection = Transition(label='Seed Selection')
ai_monitoring = Transition(label='AI Monitoring')
lighting_control = Transition(label='Lighting Control')
energy_audit = Transition(label='Energy Audit')
water_reclaim = Transition(label='Water Reclaim')
waste_sorting = Transition(label='Waste Sorting')
community_meet = Transition(label='Community Meet')
staff_training = Transition(label='Staff Training')
yield_forecast = Transition(label='Yield Forecast')
market_sync = Transition(label='Market Sync')
supply_chain = Transition(label='Supply Chain')

skip = SilentTransition()

site_zoning = OperatorPOWL(operator=Operator.XOR, children=[site_analysis, zoning_review])
design_climate = OperatorPOWL(operator=Operator.XOR, children=[modular_design, climate_setup])
nutrient_seed = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, seed_selection])
ai_lighting = OperatorPOWL(operator=Operator.XOR, children=[ai_monitoring, lighting_control])
energy_audit_water = OperatorPOWL(operator=Operator.XOR, children=[energy_audit, water_reclaim])
waste_sorting_community = OperatorPOWL(operator=Operator.XOR, children=[waste_sorting, community_meet])
staff_training_yield = OperatorPOWL(operator=Operator.XOR, children=[staff_training, yield_forecast])
market_sync_supply = OperatorPOWL(operator=Operator.XOR, children=[market_sync, supply_chain])

root = StrictPartialOrder(nodes=[site_zoning, design_climate, nutrient_seed, ai_lighting, energy_audit_water, waste_sorting_community, staff_training_yield, market_sync_supply])
root.order.add_edge(site_zoning, design_climate)
root.order.add_edge(site_zoning, nutrient_seed)
root.order.add_edge(design_climate, ai_lighting)
root.order.add_edge(design_climate, energy_audit_water)
root.order.add_edge(nutrient_seed, waste_sorting_community)
root.order.add_edge(nutrient_seed, staff_training_yield)
root.order.add_edge(ai_lighting, market_sync_supply)
root.order.add_edge(energy_audit_water, market_sync_supply)