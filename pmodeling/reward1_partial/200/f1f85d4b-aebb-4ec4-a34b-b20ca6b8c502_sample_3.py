import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

initial_review = Transition(label='Initial Review')
provenance_check = Transition(label='Provenance Check')
material_testing = Transition(label='Material Testing')
expert_survey = Transition(label='Expert Survey')
digital_scan = Transition(label='Digital Scan')
condition_report = Transition(label='Condition Report')
legal_review = Transition(label='Legal Review')
risk_analysis = Transition(label='Risk Analysis')
seller_negotiation = Transition(label='Seller Negotiation')
documentation = Transition(label='Documentation')
archival_entry = Transition(label='Archival Entry')
committee_review = Transition(label='Committee Review')
final_approval = Transition(label='Final Approval')
acquisition_setup = Transition(label='Acquisition Setup')
exhibit_planning = Transition(label='Exhibit Planning')

skip = SilentTransition()

provenance_check_choice = OperatorPOWL(operator=Operator.XOR, children=[provenance_check, skip])
material_testing_choice = OperatorPOWL(operator=Operator.XOR, children=[material_testing, skip])
expert_survey_choice = OperatorPOWL(operator=Operator.XOR, children=[expert_survey, skip])
digital_scan_choice = OperatorPOWL(operator=Operator.XOR, children=[digital_scan, skip])
condition_report_choice = OperatorPOWL(operator=Operator.XOR, children=[condition_report, skip])
legal_review_choice = OperatorPOWL(operator=Operator.XOR, children=[legal_review, skip])
risk_analysis_choice = OperatorPOWL(operator=Operator.XOR, children=[risk_analysis, skip])
seller_negotiation_choice = OperatorPOWL(operator=Operator.XOR, children=[seller_negotiation, skip])
documentation_choice = OperatorPOWL(operator=Operator.XOR, children=[documentation, skip])
archival_entry_choice = OperatorPOWL(operator=Operator.XOR, children=[archival_entry, skip])
committee_review_choice = OperatorPOWL(operator=Operator.XOR, children=[committee_review, skip])
final_approval_choice = OperatorPOWL(operator=Operator.XOR, children=[final_approval, skip])
acquisition_setup_choice = OperatorPOWL(operator=Operator.XOR, children=[acquisition_setup, skip])
exhibit_planning_choice = OperatorPOWL(operator=Operator.XOR, children=[exhibit_planning, skip])

root = StrictPartialOrder(nodes=[initial_review, provenance_check_choice, material_testing_choice, expert_survey_choice, digital_scan_choice, condition_report_choice, legal_review_choice, risk_analysis_choice, seller_negotiation_choice, documentation_choice, archival_entry_choice, committee_review_choice, final_approval_choice, acquisition_setup_choice, exhibit_planning_choice])
root.order.add_edge(initial_review, provenance_check_choice)
root.order.add_edge(initial_review, material_testing_choice)
root.order.add_edge(initial_review, expert_survey_choice)
root.order.add_edge(initial_review, digital_scan_choice)
root.order.add_edge(initial_review, condition_report_choice)
root.order.add_edge(initial_review, legal_review_choice)
root.order.add_edge(initial_review, risk_analysis_choice)
root.order.add_edge(initial_review, seller_negotiation_choice)
root.order.add_edge(initial_review, documentation_choice)
root.order.add_edge(initial_review, archival_entry_choice)
root.order.add_edge(initial_review, committee_review_choice)
root.order.add_edge(initial_review, final_approval_choice)
root.order.add_edge(initial_review, acquisition_setup_choice)
root.order.add_edge(initial_review, exhibit_planning_choice)