from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition

# Define activities
site_survey = Transition(label='Site Survey')
design_layout = Transition(label='Design Layout')
select_crops = Transition(label='Select Crops')
install_modules = Transition(label='Install Modules')
setup_sensors = Transition(label='Setup Sensors')
calibrate_climate = Transition(label='Calibrate Climate')
configure_lighting = Transition(label='Configure Lighting')
integrate_iot = Transition(label='Integrate IoT')
train_staff = Transition(label='Train Staff')
run_trials = Transition(label='Run Trials')
analyze_data = Transition(label='Analyze Data')
optimize_yield = Transition(label='Optimize Yield')
check_compliance = Transition(label='Check Compliance')
plan_marketing = Transition(label='Plan Marketing')
launch_facility = Transition(label='Launch Facility')

# Define control flow elements
site_survey_to_design_layout = OperatorPOWL(operator=Operator.XOR, children=[site_survey, design_layout])
design_layout_to_select_crops = OperatorPOWL(operator=Operator.XOR, children=[design_layout, select_crops])
select_crops_to_install_modules = OperatorPOWL(operator=Operator.XOR, children=[select_crops, install_modules])
install_modules_to_setup_sensors = OperatorPOWL(operator=Operator.XOR, children=[install_modules, setup_sensors])
setup_sensors_to_calibrate_climate = OperatorPOWL(operator=Operator.XOR, children=[setup_sensors, calibrate_climate])
calibrate_climate_to_configure_lighting = OperatorPOWL(operator=Operator.XOR, children=[calibrate_climate, configure_lighting])
configure_lighting_to_integrate_iot = OperatorPOWL(operator=Operator.XOR, children=[configure_lighting, integrate_iot])
integrate_iot_to_train_staff = OperatorPOWL(operator=Operator.XOR, children=[integrate_iot, train_staff])
train_staff_to_run_trials = OperatorPOWL(operator=Operator.XOR, children=[train_staff, run_trials])
run_trials_to_analyze_data = OperatorPOWL(operator=Operator.XOR, children=[run_trials, analyze_data])
analyze_data_to_optimize_yield = OperatorPOWL(operator=Operator.XOR, children=[analyze_data, optimize_yield])
optimize_yield_to_check_compliance = OperatorPOWL(operator=Operator.XOR, children=[optimize_yield, check_compliance])
check_compliance_to_plan_marketing = OperatorPOWL(operator=Operator.XOR, children=[check_compliance, plan_marketing])
plan_marketing_to_launch_facility = OperatorPOWL(operator=Operator.XOR, children=[plan_marketing, launch_facility])

# Define root
root = StrictPartialOrder(nodes=[site_survey_to_design_layout, design_layout_to_select_crops, select_crops_to_install_modules, install_modules_to_setup_sensors, setup_sensors_to_calibrate_climate, calibrate_climate_to_configure_lighting, configure_lighting_to_integrate_iot, integrate_iot_to_train_staff, train_staff_to_run_trials, run_trials_to_analyze_data, analyze_data_to_optimize_yield, optimize_yield_to_check_compliance, check_compliance_to_plan_marketing, plan_marketing_to_launch_facility])
root.order.add_edge(site_survey_to_design_layout, design_layout_to_select_crops)
root.order.add_edge(design_layout_to_select_crops, select_crops_to_install_modules)
root.order.add_edge(select_crops_to_install_modules, install_modules_to_setup_sensors)
root.order.add_edge(install_modules_to_setup_sensors, setup_sensors_to_calibrate_climate)
root.order.add_edge(setup_sensors_to_calibrate_climate, calibrate_climate_to_configure_lighting)
root.order.add_edge(calibrate_climate_to_configure_lighting, configure_lighting_to_integrate_iot)
root.order.add_edge(configure_lighting_to_integrate_iot, integrate_iot_to_train_staff)
root.order.add_edge(integrate_iot_to_train_staff, train_staff_to_run_trials)
root.order.add_edge(train_staff_to_run_trials, run_trials_to_analyze_data)
root.order.add_edge(run_trials_to_analyze_data, analyze_data_to_optimize_yield)
root.order.add_edge(analyze_data_to_optimize_yield, optimize_yield_to_check_compliance)
root.order.add_edge(optimize_yield_to_check_compliance, check_compliance_to_plan_marketing)
root.order.add_edge(check_compliance_to_plan_marketing, plan_marketing_to_launch_facility)