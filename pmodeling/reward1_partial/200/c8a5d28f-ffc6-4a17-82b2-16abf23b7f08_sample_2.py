from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition

milk_sourcing = Transition(label='Milk Sourcing')
quality_testing = Transition(label='Quality Testing')
milk_pasteurize = Transition(label='Milk Pasteurize')
culture_addition = Transition(label='Culture Addition')
curd_cutting = Transition(label='Curd Cutting')
whey_drain = Transition(label='Whey Drain')
cheese_molding = Transition(label='Cheese Molding')
controlled_aging = Transition(label='Controlled Aging')
sensory_check = Transition(label='Sensory Check')
health_certify = Transition(label='Health Certify')
custom_labeling = Transition(label='Custom Labeling')
cold_packaging = Transition(label='Cold Packaging')
logistics_setup = Transition(label='Logistics Setup')
export_docs = Transition(label='Export Docs')
customs_clearance = Transition(label='Customs Clearance')
shipment_track = Transition(label='Shipment Track')
client_feedback = Transition(label='Client Feedback')

xor1 = OperatorPOWL(operator=Operator.XOR, children=[milk_pasteurize, quality_testing])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[culture_addition, whey_drain])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[curd_cutting, cheese_molding])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[controlled_aging, sensory_check])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[health_certify, custom_labeling])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[cold_packaging, logistics_setup])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[export_docs, customs_clearance])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[shipment_track, client_feedback])

root = StrictPartialOrder(nodes=[milk_sourcing, xor1, xor2, xor3, xor4, xor5, xor6, xor7, xor8])
root.order.add_edge(milk_sourcing, xor1)
root.order.add_edge(milk_sourcing, xor2)
root.order.add_edge(milk_sourcing, xor3)
root.order.add_edge(milk_sourcing, xor4)
root.order.add_edge(milk_sourcing, xor5)
root.order.add_edge(milk_sourcing, xor6)
root.order.add_edge(milk_sourcing, xor7)
root.order.add_edge(milk_sourcing, xor8)