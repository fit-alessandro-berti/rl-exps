import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

artifact_intake = Transition(label='Artifact Intake')
condition_check = Transition(label='Condition Check')
material_test = Transition(label='Material Test')
archival_search = Transition(label='Archival Search')
style_compare = Transition(label='Style Compare')
expert_review = Transition(label='Expert Review')
restoration_check = Transition(label='Restoration Check')
provenance_trace = Transition(label='Provenance Trace')
legal_verify = Transition(label='Legal Verify')
value_appraise = Transition(label='Value Appraise')
catalog_entry = Transition(label='Catalog Entry')
marketing_plan = Transition(label='Marketing Plan')
auction_setup = Transition(label='Auction Setup')
certify_final = Transition(label='Certify Final')
sales_report = Transition(label='Sales Report')

skip = SilentTransition()

artifact_intake_to_condition_check = OperatorPOWL(operator=Operator.FORK, children=[artifact_intake, condition_check])
condition_check_to_material_test = OperatorPOWL(operator=Operator.JOIN, children=[condition_check, material_test])
material_test_to_archival_search = OperatorPOWL(operator=Operator.JOIN, children=[material_test, archival_search])
archival_search_to_style_compare = OperatorPOWL(operator=Operator.JOIN, children=[archival_search, style_compare])
style_compare_to_expert_review = OperatorPOWL(operator=Operator.JOIN, children=[style_compare, expert_review])
expert_review_to_restoration_check = OperatorPOWL(operator=Operator.JOIN, children=[expert_review, restoration_check])
restoration_check_to_provenance_trace = OperatorPOWL(operator=Operator.JOIN, children=[restoration_check, provenance_trace])
provenance_trace_to_legal_verify = OperatorPOWL(operator=Operator.JOIN, children=[provenance_trace, legal_verify])
legal_verify_to_value_appraise = OperatorPOWL(operator=Operator.JOIN, children=[legal_verify, value_appraise])
value_appraise_to_catalog_entry = OperatorPOWL(operator=Operator.JOIN, children=[value_appraise, catalog_entry])
catalog_entry_to_marketing_plan = OperatorPOWL(operator=Operator.JOIN, children=[catalog_entry, marketing_plan])
marketing_plan_to_auction_setup = OperatorPOWL(operator=Operator.JOIN, children=[marketing_plan, auction_setup])
auction_setup_to_certify_final = OperatorPOWL(operator=Operator.JOIN, children=[auction_setup, certify_final])
certify_final_to_sales_report = OperatorPOWL(operator=Operator.JOIN, children=[certify_final, sales_report])

root = StrictPartialOrder(nodes=[artifact_intake_to_condition_check, condition_check_to_material_test, material_test_to_archival_search, archival_search_to_style_compare, style_compare_to_expert_review, expert_review_to_restoration_check, restoration_check_to_provenance_trace, provenance_trace_to_legal_verify, legal_verify_to_value_appraise, value_appraise_to_catalog_entry, catalog_entry_to_marketing_plan, marketing_plan_to_auction_setup, auction_setup_to_certify_final, certify_final_to_sales_report])
root.order.add_edge(artifact_intake_to_condition_check, condition_check_to_material_test)
root.order.add_edge(condition_check_to_material_test, material_test_to_archival_search)
root.order.add_edge(material_test_to_archival_search, archival_search_to_style_compare)
root.order.add_edge(archival_search_to_style_compare, style_compare_to_expert_review)
root.order.add_edge(style_compare_to_expert_review, expert_review_to_restoration_check)
root.order.add_edge(expert_review_to_restoration_check, restoration_check_to_provenance_trace)
root.order.add_edge(restoration_check_to_provenance_trace, provenance_trace_to_legal_verify)
root.order.add_edge(provenance_trace_to_legal_verify, legal_verify_to_value_appraise)
root.order.add_edge(legal_verify_to_value_appraise, value_appraise_to_catalog_entry)
root.order.add_edge(value_appraise_to_catalog_entry, catalog_entry_to_marketing_plan)
root.order.add_edge(catalog_entry_to_marketing_plan, marketing_plan_to_auction_setup)
root.order.add_edge(marketing_plan_to_auction_setup, auction_setup_to_certify_final)
root.order.add_edge(auction_setup_to_certify_final, certify_final_to_sales_report)