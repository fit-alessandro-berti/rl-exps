from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition

# Define transitions for each activity
quantum_init = Transition(label='Quantum Init')
data_ingest = Transition(label='Data Ingest')
ai_forecast = Transition(label='AI Forecast')
inventory_sync = Transition(label='Inventory Sync')
procurement_plan = Transition(label='Procurement Plan')
production_align = Transition(label='Production Align')
distribution_map = Transition(label='Distribution Map')
iot_monitor = Transition(label='IoT Monitor')
risk_assess = Transition(label='Risk Assess')
maintenance_alert = Transition(label='Maintenance Alert')
quantum_compute = Transition(label='Quantum Compute')
feedback_loop = Transition(label='Feedback Loop')
schedule_adjust = Transition(label='Schedule Adjust')
demand_update = Transition(label='Demand Update')
delivery_track = Transition(label='Delivery Track')
compliance_check = Transition(label='Compliance Check')

# Define silent transitions
skip = SilentTransition()

# Define loops and choices
loop_quantum_compute = OperatorPOWL(operator=Operator.LOOP, children=[quantum_compute, feedback_loop])
xor_1 = OperatorPOWL(operator=Operator.XOR, children=[risk_assess, maintenance_alert])
xor_2 = OperatorPOWL(operator=Operator.XOR, children=[iot_monitor, compliance_check])
xor_3 = OperatorPOWL(operator=Operator.XOR, children=[schedule_adjust, demand_update])
xor_4 = OperatorPOWL(operator=Operator.XOR, children=[delivery_track, compliance_check])
xor_5 = OperatorPOWL(operator=Operator.XOR, children=[compliance_check, compliance_check])

# Define root POWL model
root = StrictPartialOrder(nodes=[quantum_init, data_ingest, ai_forecast, inventory_sync, procurement_plan, production_align, distribution_map, iot_monitor, risk_assess, maintenance_alert, quantum_compute, feedback_loop, schedule_adjust, demand_update, delivery_track, compliance_check])
root.order.add_edge(quantum_init, data_ingest)
root.order.add_edge(data_ingest, ai_forecast)
root.order.add_edge(ai_forecast, inventory_sync)
root.order.add_edge(inventory_sync, procurement_plan)
root.order.add_edge(procurement_plan, production_align)
root.order.add_edge(production_align, distribution_map)
root.order.add_edge(distribution_map, iot_monitor)
root.order.add_edge(iot_monitor, xor_1)
root.order.add_edge(iot_monitor, xor_2)
root.order.add_edge(risk_assess, xor_1)
root.order.add_edge(maintenance_alert, xor_1)
root.order.add_edge(xor_1, quantum_compute)
root.order.add_edge(quantum_compute, feedback_loop)
root.order.add_edge(feedback_loop, xor_3)
root.order.add_edge(xor_3, schedule_adjust)
root.order.add_edge(xor_3, demand_update)
root.order.add_edge(schedule_adjust, delivery_track)
root.order.add_edge(demand_update, delivery_track)
root.order.add_edge(delivery_track, compliance_check)
root.order.add_edge(compliance_check, xor_4)
root.order.add_edge(xor_4, compliance_check)
root.order.add_edge(xor_4, compliance_check)