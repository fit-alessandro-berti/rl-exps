from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition

site_survey = Transition(label='Site Survey')
load_test = Transition(label='Load Test')
soil_sample = Transition(label='Soil Sample')
water_check = Transition(label='Water Check')
design_plan = Transition(label='Design Plan')
bed_setup = Transition(label='Bed Setup')
irrigation_install = Transition(label='Irrigation Install')
climate_setup = Transition(label='Climate Setup')
seed_selection = Transition(label='Seed Selection')
planting_phase = Transition(label='Planting Phase')
pest_control = Transition(label='Pest Control')
growth_monitor = Transition(label='Growth Monitor')
harvest_prep = Transition(label='Harvest Prep')
community_meet = Transition(label='Community Meet')
waste_manage = Transition(label='Waste Manage')
yield_report = Transition(label='Yield Report')

skip = SilentTransition()

loop = OperatorPOWL(operator=Operator.LOOP, children=[site_survey, load_test, soil_sample, water_check, design_plan])
xor = OperatorPOWL(operator=Operator.XOR, children=[bed_setup, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[irrigation_install, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[climate_setup, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[seed_selection, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[planting_phase, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[pest_control, skip])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[growth_monitor, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[harvest_prep, skip])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[community_meet, skip])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[waste_manage, skip])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[yield_report, skip])

root = StrictPartialOrder(nodes=[loop, xor, xor2, xor3, xor4, xor5, xor6, xor7, xor8, xor9, xor10, xor11])
root.order.add_edge(loop, xor)
root.order.add_edge(xor, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor6, xor7)
root.order.add_edge(xor7, xor8)
root.order.add_edge(xor8, xor9)
root.order.add_edge(xor9, xor10)
root.order.add_edge(xor10, xor11)
root.order.add_edge(xor11, loop)