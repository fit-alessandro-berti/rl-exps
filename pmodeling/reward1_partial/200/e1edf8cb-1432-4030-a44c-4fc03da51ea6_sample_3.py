import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
site_survey = Transition(label='Site Survey')
structural_check = Transition(label='Structural Check')
env_control = Transition(label='Env Control')
hydro_setup = Transition(label='Hydro Setup')
crop_select = Transition(label='Crop Select')
iot_install = Transition(label='IoT Install')
sensor_calibrate = Transition(label='Sensor Calibrate')
water_cycle = Transition(label='Water Cycle')
nutrient_mix = Transition(label='Nutrient Mix')
lighting_adjust = Transition(label='Lighting Adjust')
staff_train = Transition(label='Staff Train')
waste_manage = Transition(label='Waste Manage')
energy_audit = Transition(label='Energy Audit')
harvest_plan = Transition(label='Harvest Plan')
delivery_setup = Transition(label='Delivery Setup')
market_align = Transition(label='Market Align')
skip = SilentTransition()
site_survey_loop = OperatorPOWL(operator=Operator.LOOP, children=[site_survey, structural_check])
env_control_loop = OperatorPOWL(operator=Operator.LOOP, children=[env_control])
hydro_setup_loop = OperatorPOWL(operator=Operator.LOOP, children=[hydro_setup])
crop_select_loop = OperatorPOWL(operator=Operator.LOOP, children=[crop_select])
iot_install_loop = OperatorPOWL(operator=Operator.LOOP, children=[iot_install])
sensor_calibrate_loop = OperatorPOWL(operator=Operator.LOOP, children=[sensor_calibrate])
water_cycle_loop = OperatorPOWL(operator=Operator.LOOP, children=[water_cycle])
nutrient_mix_loop = OperatorPOWL(operator=Operator.LOOP, children=[nutrient_mix])
lighting_adjust_loop = OperatorPOWL(operator=Operator.LOOP, children=[lighting_adjust])
staff_train_loop = OperatorPOWL(operator=Operator.LOOP, children=[staff_train])
waste_manage_loop = OperatorPOWL(operator=Operator.LOOP, children=[waste_manage])
energy_audit_loop = OperatorPOWL(operator=Operator.LOOP, children=[energy_audit])
harvest_plan_loop = OperatorPOWL(operator=Operator.LOOP, children=[harvest_plan])
delivery_setup_loop = OperatorPOWL(operator=Operator.LOOP, children=[delivery_setup])
market_align_loop = OperatorPOWL(operator=Operator.LOOP, children=[market_align])
root = StrictPartialOrder(nodes=[site_survey_loop, env_control_loop, hydro_setup_loop, crop_select_loop, iot_install_loop, sensor_calibrate_loop, water_cycle_loop, nutrient_mix_loop, lighting_adjust_loop, staff_train_loop, waste_manage_loop, energy_audit_loop, harvest_plan_loop, delivery_setup_loop, market_align_loop])
root.order.add_edge(site_survey_loop, env_control_loop)
root.order.add_edge(env_control_loop, hydro_setup_loop)
root.order.add_edge(hydro_setup_loop, crop_select_loop)
root.order.add_edge(crop_select_loop, iot_install_loop)
root.order.add_edge(iot_install_loop, sensor_calibrate_loop)
root.order.add_edge(sensor_calibrate_loop, water_cycle_loop)
root.order.add_edge(water_cycle_loop, nutrient_mix_loop)
root.order.add_edge(nutrient_mix_loop, lighting_adjust_loop)
root.order.add_edge(lighting_adjust_loop, staff_train_loop)
root.order.add_edge(staff_train_loop, waste_manage_loop)
root.order.add_edge(waste_manage_loop, energy_audit_loop)
root.order.add_edge(energy_audit_loop, harvest_plan_loop)
root.order.add_edge(harvest_plan_loop, delivery_setup_loop)
root.order.add_edge(delivery_setup_loop, market_align_loop)