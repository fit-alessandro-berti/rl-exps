import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

Trend_Scan = Transition(label='Trend Scan')
Idea_Harvest = Transition(label='Idea Harvest')
Workshop_Host = Transition(label='Workshop Host')
Concept_Filter = Transition(label='Concept Filter')
Prototype_Build = Transition(label='Prototype Build')
Expert_Review = Transition(label='Expert Review')
Feasibility_Check = Transition(label='Feasibility Check')
Risk_Assess = Transition(label='Risk Assess')
Pilot_Launch = Transition(label='Pilot Launch')
Data_Capture = Transition(label='Data Capture')
Performance_Review = Transition(label='Performance Review')
Scale_Plan = Transition(label='Scale Plan')
Resource_Align = Transition(label='Resource Align')
Learn_Share = Transition(label='Learn Share')
Culture_Embed = Transition(label='Culture Embed')

skip = SilentTransition()

trend_scan = OperatorPOWL(operator=Operator.TAU, children=[Trend_Scan])
idea_harvest = OperatorPOWL(operator=Operator.TAU, children=[Idea_Harvest])
workshop_host = OperatorPOWL(operator=Operator.TAU, children=[Workshop_Host])
concept_filter = OperatorPOWL(operator=Operator.TAU, children=[Concept_Filter])
prototype_build = OperatorPOWL(operator=Operator.TAU, children=[Prototype_Build])
expert_review = OperatorPOWL(operator=Operator.TAU, children=[Expert_Review])
feasibility_check = OperatorPOWL(operator=Operator.TAU, children=[Feasibility_Check])
risk_assess = OperatorPOWL(operator=Operator.TAU, children=[Risk_Assess])
pilot_launch = OperatorPOWL(operator=Operator.TAU, children=[Pilot_Launch])
data_capture = OperatorPOWL(operator=Operator.TAU, children=[Data_Capture])
performance_review = OperatorPOWL(operator=Operator.TAU, children=[Performance_Review])
scale_plan = OperatorPOWL(operator=Operator.TAU, children=[Scale_Plan])
resource_align = OperatorPOWL(operator=Operator.TAU, children=[Resource_Align])
learn_share = OperatorPOWL(operator=Operator.TAU, children=[Learn_Share])
culture_embed = OperatorPOWL(operator=Operator.TAU, children=[Culture_Embed])

loop = OperatorPOWL(operator=Operator.LOOP, children=[Trend_Scan, Idea_Harvest, Workshop_Host, Concept_Filter, Prototype_Build, Expert_Review, Feasibility_Check, Risk_Assess, Pilot_Launch, Data_Capture, Performance_Review, Scale_Plan, Resource_Align, Learn_Share, Culture_Embed])
loop.order.add_edge(Trend_Scan, Idea_Harvest)
loop.order.add_edge(Idea_Harvest, Workshop_Host)
loop.order.add_edge(Workshop_Host, Concept_Filter)
loop.order.add_edge(Concept_Filter, Prototype_Build)
loop.order.add_edge(Prototype_Build, Expert_Review)
loop.order.add_edge(Expert_Review, Feasibility_Check)
loop.order.add_edge(Feasibility_Check, Risk_Assess)
loop.order.add_edge(Risk_Assess, Pilot_Launch)
loop.order.add_edge(Pilot_Launch, Data_Capture)
loop.order.add_edge(Data_Capture, Performance_Review)
loop.order.add_edge(Performance_Review, Scale_Plan)
loop.order.add_edge(Scale_Plan, Resource_Align)
loop.order.add_edge(Resource_Align, Learn_Share)
loop.order.add_edge(Learn_Share, Culture_Embed)

root = StrictPartialOrder(nodes=[loop])