import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_analyze = Transition(label='Site Analyze')
soil_enhance = Transition(label='Soil Enhance')
seed_select = Transition(label='Seed Select')
plant_precise = Transition(label='Plant Precise')
sensor_deploy = Transition(label='Sensor Deploy')
climate_monitor = Transition(label='Climate Monitor')
irrigate_adjust = Transition(label='Irrigate Adjust')
nutrient_feed = Transition(label='Nutrient Feed')
pest_control = Transition(label='Pest Control')
community_engage = Transition(label='Community Engage')
feedback_collect = Transition(label='Feedback Collect')
yield_harvest = Transition(label='Yield Harvest')
waste_sort = Transition(label='Waste Sort')
compost_create = Transition(label='Compost Create')
data_analyze = Transition(label='Data Analyze')
network_distribute = Transition(label='Network Distribute')

skip = SilentTransition()

site_analyze_node = OperatorPOWL(operator=Operator.XOR, children=[site_analyze, skip])
soil_enhance_node = OperatorPOWL(operator=Operator.XOR, children=[soil_enhance, skip])
seed_select_node = OperatorPOWL(operator=Operator.XOR, children=[seed_select, skip])
plant_precise_node = OperatorPOWL(operator=Operator.XOR, children=[plant_precise, skip])
sensor_deploy_node = OperatorPOWL(operator=Operator.XOR, children=[sensor_deploy, skip])
climate_monitor_node = OperatorPOWL(operator=Operator.XOR, children=[climate_monitor, skip])
irrigate_adjust_node = OperatorPOWL(operator=Operator.XOR, children=[irrigate_adjust, skip])
nutrient_feed_node = OperatorPOWL(operator=Operator.XOR, children=[nutrient_feed, skip])
pest_control_node = OperatorPOWL(operator=Operator.XOR, children=[pest_control, skip])
community_engage_node = OperatorPOWL(operator=Operator.XOR, children=[community_engage, skip])
feedback_collect_node = OperatorPOWL(operator=Operator.XOR, children=[feedback_collect, skip])
yield_harvest_node = OperatorPOWL(operator=Operator.XOR, children=[yield_harvest, skip])
waste_sort_node = OperatorPOWL(operator=Operator.XOR, children=[waste_sort, skip])
compost_create_node = OperatorPOWL(operator=Operator.XOR, children=[compost_create, skip])
data_analyze_node = OperatorPOWL(operator=Operator.XOR, children=[data_analyze, skip])
network_distribute_node = OperatorPOWL(operator=Operator.XOR, children=[network_distribute, skip])

root = StrictPartialOrder(nodes=[site_analyze_node, soil_enhance_node, seed_select_node, plant_precise_node, sensor_deploy_node, climate_monitor_node, irrigate_adjust_node, nutrient_feed_node, pest_control_node, community_engage_node, feedback_collect_node, yield_harvest_node, waste_sort_node, compost_create_node, data_analyze_node, network_distribute_node])

root.order.add_edge(site_analyze_node, soil_enhance_node)
root.order.add_edge(soil_enhance_node, seed_select_node)
root.order.add_edge(seed_select_node, plant_precise_node)
root.order.add_edge(plant_precise_node, sensor_deploy_node)
root.order.add_edge(sensor_deploy_node, climate_monitor_node)
root.order.add_edge(climate_monitor_node, irrigate_adjust_node)
root.order.add_edge(irrigate_adjust_node, nutrient_feed_node)
root.order.add_edge(nutrient_feed_node, pest_control_node)
root.order.add_edge(pest_control_node, community_engage_node)
root.order.add_edge(community_engage_node, feedback_collect_node)
root.order.add_edge(feedback_collect_node, yield_harvest_node)
root.order.add_edge(yield_harvest_node, waste_sort_node)
root.order.add_edge(waste_sort_node, compost_create_node)
root.order.add_edge(compost_create_node, data_analyze_node)
root.order.add_edge(data_analyze_node, network_distribute_node)