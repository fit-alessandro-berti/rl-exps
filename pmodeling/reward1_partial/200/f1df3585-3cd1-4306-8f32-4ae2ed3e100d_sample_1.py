import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator
site_assess = Transition(label='Site Assess')
plan_layout = Transition(label='Plan Layout')
install_racks = Transition(label='Install Racks')
mix_nutrients = Transition(label='Mix Nutrients')
calibrate_sensors = Transition(label='Calibrate Sensors')
setup_lighting = Transition(label='Setup Lighting')
configure_climate = Transition(label='Configure Climate')
select_seeds = Transition(label='Select Seeds')
monitor_germinate = Transition(label='Monitor Germinate')
apply_biocontrols = Transition(label='Apply Bio-controls')
maintain_systems = Transition(label='Maintain Systems')
analyze_data = Transition(label='Analyze Data')
harvest_crops = Transition(label='Harvest Crops')
quality_check = Transition(label='Quality Check')
package_produce = Transition(label='Package Produce')
distribute_goods = Transition(label='Distribute Goods')

skip = SilentTransition()

site_assess_to_plan_layout = OperatorPOWL(operator=Operator.XOR, children=[site_assess, plan_layout])
plan_layout_to_install_racks = OperatorPOWL(operator=Operator.XOR, children=[plan_layout, install_racks])
install_racks_to_mix_nutrients = OperatorPOWL(operator=Operator.XOR, children=[install_racks, mix_nutrients])
mix_nutrients_to_calibrate_sensors = OperatorPOWL(operator=Operator.XOR, children=[mix_nutrients, calibrate_sensors])
calibrate_sensors_to_setup_lighting = OperatorPOWL(operator=Operator.XOR, children=[calibrate_sensors, setup_lighting])
setup_lighting_to_configure_climate = OperatorPOWL(operator=Operator.XOR, children=[setup_lighting, configure_climate])
configure_climate_to_select_seeds = OperatorPOWL(operator=Operator.XOR, children=[configure_climate, select_seeds])
select_seeds_to_monitor_germinate = OperatorPOWL(operator=Operator.XOR, children=[select_seeds, monitor_germinate])
monitor_germinate_to_apply_biocontrols = OperatorPOWL(operator=Operator.XOR, children=[monitor_germinate, apply_biocontrols])
apply_biocontrols_to_maintain_systems = OperatorPOWL(operator=Operator.XOR, children=[apply_biocontrols, maintain_systems])
maintain_systems_to_analyze_data = OperatorPOWL(operator=Operator.XOR, children=[maintain_systems, analyze_data])
analyze_data_to_harvest_crops = OperatorPOWL(operator=Operator.XOR, children=[analyze_data, harvest_crops])
harvest_crops_to_quality_check = OperatorPOWL(operator=Operator.XOR, children=[harvest_crops, quality_check])
quality_check_to_package_produce = OperatorPOWL(operator=Operator.XOR, children=[quality_check, package_produce])
package_produce_to_distribute_goods = OperatorPOWL(operator=Operator.XOR, children=[package_produce, distribute_goods])

root = StrictPartialOrder(nodes=[site_assess, plan_layout, install_racks, mix_nutrients, calibrate_sensors, setup_lighting, configure_climate, select_seeds, monitor_germinate, apply_biocontrols, maintain_systems, analyze_data, harvest_crops, quality_check, package_produce, distribute_goods])
root.order.add_edge(site_assess, plan_layout)
root.order.add_edge(plan_layout, install_racks)
root.order.add_edge(install_racks, mix_nutrients)
root.order.add_edge(mix_nutrients, calibrate_sensors)
root.order.add_edge(calibrate_sensors, setup_lighting)
root.order.add_edge(setup_lighting, configure_climate)
root.order.add_edge(configure_climate, select_seeds)
root.order.add_edge(select_seeds, monitor_germinate)
root.order.add_edge(monitor_germinate, apply_biocontrols)
root.order.add_edge(apply_biocontrols, maintain_systems)
root.order.add_edge(maintain_systems, analyze_data)
root.order.add_edge(analyze_data, harvest_crops)
root.order.add_edge(harvest_crops, quality_check)
root.order.add_edge(quality_check, package_produce)
root.order.add_edge(package_produce, distribute_goods)