from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
structure_check = Transition(label='Structure Check')
soil_sample = Transition(label='Soil Sample')
water_test = Transition(label='Water Test')
crop_selection = Transition(label='Crop Selection')
material_order = Transition(label='Material Order')
planter_setup = Transition(label='Planter Setup')
irrigation_install = Transition(label='Irrigation Install')
sensor_deploy = Transition(label='Sensor Deploy')
solar_setup = Transition(label='Solar Setup')
data_integration = Transition(label='Data Integration')
community_meet = Transition(label='Community Meet')
training_session = Transition(label='Training Session')
yield_monitor = Transition(label='Yield Monitor')
adjust_plan = Transition(label='Adjust Plan')

site_survey_choice = OperatorPOWL(operator=Operator.XOR, children=[site_survey, structure_check])
soil_water_choice = OperatorPOWL(operator=Operator.XOR, children=[soil_sample, water_test])
crop_selection_choice = OperatorPOWL(operator=Operator.XOR, children=[crop_selection, material_order])
irrigation_sensor_choice = OperatorPOWL(operator=Operator.XOR, children=[irrigation_install, sensor_deploy])
solar_data_choice = OperatorPOWL(operator=Operator.XOR, children=[solar_setup, data_integration])
community_training_choice = OperatorPOWL(operator=Operator.XOR, children=[community_meet, training_session])
yield_adjustment_choice = OperatorPOWL(operator=Operator.XOR, children=[yield_monitor, adjust_plan])

root = StrictPartialOrder(nodes=[site_survey_choice, soil_water_choice, crop_selection_choice, irrigation_sensor_choice, solar_data_choice, community_training_choice, yield_adjustment_choice])
root.order.add_edge(site_survey_choice, soil_water_choice)
root.order.add_edge(site_survey_choice, crop_selection_choice)
root.order.add_edge(soil_water_choice, irrigation_sensor_choice)
root.order.add_edge(soil_water_choice, solar_data_choice)
root.order.add_edge(crop_selection_choice, community_training_choice)
root.order.add_edge(crop_selection_choice, yield_adjustment_choice)
root.order.add_edge(irrigation_sensor_choice, community_training_choice)
root.order.add_edge(irrigation_sensor_choice, yield_adjustment_choice)
root.order.add_edge(solar_data_choice, community_training_choice)
root.order.add_edge(solar_data_choice, yield_adjustment_choice)
root.order.add_edge(community_training_choice, yield_adjustment_choice)