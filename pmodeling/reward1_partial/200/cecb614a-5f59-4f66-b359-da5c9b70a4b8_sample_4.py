import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define activities
site_survey = Transition(label='Site Survey')
load_testing = Transition(label='Load Testing')
crop_selection = Transition(label='Crop Selection')
soil_prep = Transition(label='Soil Prep')
irrigation_setup = Transition(label='Irrigation Setup')
permits_acquire = Transition(label='Permits Acquire')
supplier_outreach = Transition(label='Supplier Outreach')
planting_seedlings = Transition(label='Planting Seedlings')
pest_monitoring = Transition(label='Pest Monitoring')
nutrient_testing = Transition(label='Nutrient Testing')
waste_sorting = Transition(label='Waste Sorting')
staff_training = Transition(label='Staff Training')
community_meet = Transition(label='Community Meet')
harvest_planning = Transition(label='Harvest Planning')
market_launch = Transition(label='Market Launch')
yield_tracking = Transition(label='Yield Tracking')

# Define relationships
site_survey_to_load_testing = OperatorPOWL(operator=Operator.XOR, children=[site_survey, load_testing])
load_testing_to_crop_selection = OperatorPOWL(operator=Operator.XOR, children=[load_testing, crop_selection])
crop_selection_to_soil_prep = OperatorPOWL(operator=Operator.XOR, children=[crop_selection, soil_prep])
soil_prep_to_irrigation_setup = OperatorPOWL(operator=Operator.XOR, children=[soil_prep, irrigation_setup])
irrigation_setup_to_permits_acquire = OperatorPOWL(operator=Operator.XOR, children=[irrigation_setup, permits_acquire])
permits_acquire_to_supplier_outreach = OperatorPOWL(operator=Operator.XOR, children=[permits_acquire, supplier_outreach])
supplier_outreach_to_planting_seedlings = OperatorPOWL(operator=Operator.XOR, children=[supplier_outreach, planting_seedlings])
planting_seedlings_to_pest_monitoring = OperatorPOWL(operator=Operator.XOR, children=[planting_seedlings, pest_monitoring])
pest_monitoring_to_nutrient_testing = OperatorPOWL(operator=Operator.XOR, children=[pest_monitoring, nutrient_testing])
nutrient_testing_to_waste_sorting = OperatorPOWL(operator=Operator.XOR, children=[nutrient_testing, waste_sorting])
waste_sorting_to_staff_training = OperatorPOWL(operator=Operator.XOR, children=[waste_sorting, staff_training])
staff_training_to_community_meet = OperatorPOWL(operator=Operator.XOR, children=[staff_training, community_meet])
community_meet_to_harvest_planning = OperatorPOWL(operator=Operator.XOR, children=[community_meet, harvest_planning])
harvest_planning_to_market_launch = OperatorPOWL(operator=Operator.XOR, children=[harvest_planning, market_launch])
market_launch_to_yield_tracking = OperatorPOWL(operator=Operator.XOR, children=[market_launch, yield_tracking])

# Define partial order
root = StrictPartialOrder(nodes=[site_survey_to_load_testing, load_testing_to_crop_selection, crop_selection_to_soil_prep, soil_prep_to_irrigation_setup, irrigation_setup_to_permits_acquire, permits_acquire_to_supplier_outreach, supplier_outreach_to_planting_seedlings, planting_seedlings_to_pest_monitoring, pest_monitoring_to_nutrient_testing, nutrient_testing_to_waste_sorting, waste_sorting_to_staff_training, staff_training_to_community_meet, community_meet_to_harvest_planning, harvest_planning_to_market_launch, market_launch_to_yield_tracking])
root.order.add_edge(site_survey_to_load_testing, load_testing_to_crop_selection)
root.order.add_edge(load_testing_to_crop_selection, crop_selection_to_soil_prep)
root.order.add_edge(crop_selection_to_soil_prep, soil_prep_to_irrigation_setup)
root.order.add_edge(soil_prep_to_irrigation_setup, irrigation_setup_to_permits_acquire)
root.order.add_edge(irrigation_setup_to_permits_acquire, permits_acquire_to_supplier_outreach)
root.order.add_edge(permits_acquire_to_supplier_outreach, supplier_outreach_to_planting_seedlings)
root.order.add_edge(supplier_outreach_to_planting_seedlings, planting_seedlings_to_pest_monitoring)
root.order.add_edge(planting_seedlings_to_pest_monitoring, pest_monitoring_to_nutrient_testing)
root.order.add_edge(pest_monitoring_to_nutrient_testing, nutrient_testing_to_waste_sorting)
root.order.add_edge(nutrient_testing_to_waste_sorting, waste_sorting_to_staff_training)
root.order.add_edge(waste_sorting_to_staff_training, staff_training_to_community_meet)
root.order.add_edge(staff_training_to_community_meet, community_meet_to_harvest_planning)
root.order.add_edge(community_meet_to_harvest_planning, harvest_planning_to_market_launch)
root.order.add_edge(harvest_planning_to_market_launch, market_launch_to_yield_tracking)