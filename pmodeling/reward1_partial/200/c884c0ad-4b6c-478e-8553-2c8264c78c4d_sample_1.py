from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

seed_sourcing = Transition(label='Seed Sourcing')
germination_check = Transition(label='Germination Check')
nutrient_mix = Transition(label='Nutrient Mix')
automated_planting = Transition(label='Automated Planting')
climate_control = Transition(label='Climate Control')
crop_scanning = Transition(label='Crop Scanning')
pest_monitoring = Transition(label='Pest Monitoring')
growth_analysis = Transition(label='Growth Analysis')
robotic_harvest = Transition(label='Robotic Harvest')
quality_sort = Transition(label='Quality Sort')
eco_packaging = Transition(label='Eco Packaging')
blockchain_track = Transition(label='Blockchain Track')
route_planning = Transition(label='Route Planning')
feedback_collect = Transition(label='Feedback Collect')
waste_recycling = Transition(label='Waste Recycling')
data_analytics = Transition(label='Data Analytics')
demand_forecast = Transition(label='Demand Forecast')
maintenance_alert = Transition(label='Maintenance Alert')

# Define the relationships between activities
seed_sourcing.order.add_edge(germination_check, nutrient_mix)
germination_check.order.add_edge(nutrient_mix, automated_planting)
nutrient_mix.order.add_edge(automated_planting, climate_control)
automated_planting.order.add_edge(climate_control, crop_scanning)
climate_control.order.add_edge(crop_scanning, pest_monitoring)
crop_scanning.order.add_edge(pest_monitoring, growth_analysis)
pest_monitoring.order.add_edge(growth_analysis, robotic_harvest)
growth_analysis.order.add_edge(robotic_harvest, quality_sort)
robotic_harvest.order.add_edge(quality_sort, eco_packaging)
quality_sort.order.add_edge(eco_packaging, blockchain_track)
eco_packaging.order.add_edge(blockchain_track, route_planning)
blockchain_track.order.add_edge(route_planning, feedback_collect)
route_planning.order.add_edge(feedback_collect, waste_recycling)
feedback_collect.order.add_edge(waste_recycling, data_analytics)
waste_recycling.order.add_edge(data_analytics, demand_forecast)
data_analytics.order.add_edge(demand_forecast, maintenance_alert)
demand_forecast.order.add_edge(maintenance_alert, automated_planting)

root = StrictPartialOrder(nodes=[seed_sourcing, germination_check, nutrient_mix, automated_planting, climate_control, crop_scanning, pest_monitoring, growth_analysis, robotic_harvest, quality_sort, eco_packaging, blockchain_track, route_planning, feedback_collect, waste_recycling, data_analytics, demand_forecast, maintenance_alert])