import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

inspect_item = Transition(label='Inspect Item')
verify_provenance = Transition(label='Verify Provenance')
document_condition = Transition(label='Document Condition')
disassemble_parts = Transition(label='Disassemble Parts')
clean_components = Transition(label='Clean Components')
analyze_damage = Transition(label='Analyze Damage')
select_materials = Transition(label='Select Materials')
perform_repairs = Transition(label='Perform Repairs')
match_finishes = Transition(label='Match Finishes')
apply_treatments = Transition(label='Apply Treatments')
reassemble_item = Transition(label='Reassemble Item')
quality_check = Transition(label='Quality Check')
photograph_results = Transition(label='Photograph Results')
update_archive = Transition(label='Update Archive')
client_review = Transition(label='Client Review')
finalize_report = Transition(label='Finalize Report')

skip = SilentTransition()

# Steps involved in the process
inspect_verify = OperatorPOWL(operator=Operator.XOR, children=[inspect_item, verify_provenance])
document_condition = OperatorPOWL(operator=Operator.XOR, children=[document_condition, skip])
disassemble_clean = OperatorPOWL(operator=Operator.XOR, children=[disassemble_parts, clean_components])
analyze_damage = OperatorPOWL(operator=Operator.XOR, children=[analyze_damage, skip])
select_materials = OperatorPOWL(operator=Operator.XOR, children=[select_materials, skip])
perform_repairs = OperatorPOWL(operator=Operator.XOR, children=[perform_repairs, skip])
match_finishes = OperatorPOWL(operator=Operator.XOR, children=[match_finishes, skip])
apply_treatments = OperatorPOWL(operator=Operator.XOR, children=[apply_treatments, skip])
reassemble_quality = OperatorPOWL(operator=Operator.XOR, children=[reassemble_item, quality_check])
photograph_results = OperatorPOWL(operator=Operator.XOR, children=[photograph_results, skip])
update_archive = OperatorPOWL(operator=Operator.XOR, children=[update_archive, skip])
client_review = OperatorPOWL(operator=Operator.XOR, children=[client_review, skip])
finalize_report = OperatorPOWL(operator=Operator.XOR, children=[finalize_report, skip])

# Constructing the POWL model
root = StrictPartialOrder(nodes=[inspect_verify, document_condition, disassemble_clean, analyze_damage, select_materials, perform_repairs, match_finishes, apply_treatments, reassemble_quality, photograph_results, update_archive, client_review, finalize_report])
root.order.add_edge(inspect_verify, document_condition)
root.order.add_edge(document_condition, disassemble_clean)
root.order.add_edge(disassemble_clean, analyze_damage)
root.order.add_edge(analyze_damage, select_materials)
root.order.add_edge(select_materials, perform_repairs)
root.order.add_edge(perform_repairs, match_finishes)
root.order.add_edge(match_finishes, apply_treatments)
root.order.add_edge(apply_treatments, reassemble_quality)
root.order.add_edge(reassemble_quality, photograph_results)
root.order.add_edge(photograph_results, update_archive)
root.order.add_edge(update_archive, client_review)
root.order.add_edge(client_review, finalize_report)