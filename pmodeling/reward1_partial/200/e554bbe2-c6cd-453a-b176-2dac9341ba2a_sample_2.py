from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define the POWL model for the process
farm_selection = Transition(label='Farm Selection')
milk_testing = Transition(label='Milk Testing')
starter_culture = Transition(label='Starter Culture')
curd_formation = Transition(label='Curd Formation')
pressing_cheese = Transition(label='Pressing Cheese')
microbial_profiling = Transition(label='Microbial Profiling')
aging_control = Transition(label='Aging Control')
hand_wrapping = Transition(label='Hand Wrapping')
quality_audit = Transition(label='Quality Audit')
packaging_prep = Transition(label='Packaging Prep')
climate_shipping = Transition(label='Climate Shipping')
retail_coordination = Transition(label='Retail Coordination')
seasonal_review = Transition(label='Seasonal Review')
consumer_survey = Transition(label='Consumer Survey')
feedback_analysis = Transition(label='Feedback Analysis')
market_adjustment = Transition(label='Market Adjustment')

# Define the relationships between activities
farm_selection_success = OperatorPOWL(operator=Operator.XOR, children=[milk_testing, starter_culture])
milk_testing_success = OperatorPOWL(operator=Operator.XOR, children=[curd_formation, microbial_profiling])
curd_formation_success = OperatorPOWL(operator=Operator.XOR, children=[pressing_cheese, aging_control])
aging_control_success = OperatorPOWL(operator=Operator.XOR, children=[hand_wrapping, quality_audit])
hand_wrapping_success = OperatorPOWL(operator=Operator.XOR, children=[packaging_prep, climate_shipping])
climate_shipping_success = OperatorPOWL(operator=Operator.XOR, children=[retail_coordination, seasonal_review])
seasonal_review_success = OperatorPOWL(operator=Operator.XOR, children=[consumer_survey, feedback_analysis])
feedback_analysis_success = OperatorPOWL(operator=Operator.XOR, children=[market_adjustment, SilentTransition()])

# Define the root of the POWL model
root = StrictPartialOrder(nodes=[farm_selection, farm_selection_success, milk_testing, milk_testing_success, curd_formation, curd_formation_success, pressing_cheese, aging_control, aging_control_success, hand_wrapping, hand_wrapping_success, packaging_prep, climate_shipping, climate_shipping_success, retail_coordination, seasonal_review, seasonal_review_success, consumer_survey, feedback_analysis, feedback_analysis_success, market_adjustment])
root.order.add_edge(farm_selection, farm_selection_success)
root.order.add_edge(farm_selection_success, milk_testing)
root.order.add_edge(milk_testing, milk_testing_success)
root.order.add_edge(milk_testing_success, curd_formation)
root.order.add_edge(curd_formation, curd_formation_success)
root.order.add_edge(curd_formation_success, pressing_cheese)
root.order.add_edge(pressing_cheese, aging_control)
root.order.add_edge(aging_control, aging_control_success)
root.order.add_edge(aging_control_success, hand_wrapping)
root.order.add_edge(hand_wrapping, hand_wrapping_success)
root.order.add_edge(hand_wrapping_success, packaging_prep)
root.order.add_edge(packaging_prep, climate_shipping)
root.order.add_edge(climate_shipping, climate_shipping_success)
root.order.add_edge(climate_shipping_success, retail_coordination)
root.order.add_edge(retail_coordination, seasonal_review)
root.order.add_edge(seasonal_review, seasonal_review_success)
root.order.add_edge(seasonal_review_success, consumer_survey)
root.order.add_edge(consumer_survey, feedback_analysis)
root.order.add_edge(feedback_analysis, feedback_analysis_success)
root.order.add_edge(feedback_analysis_success, market_adjustment)