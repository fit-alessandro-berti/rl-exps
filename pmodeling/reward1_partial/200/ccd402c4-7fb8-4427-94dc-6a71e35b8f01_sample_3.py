from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define activities
site_survey = Transition(label='Site Survey')
permit_filing = Transition(label='Permit Filing')
stakeholder_meet = Transition(label='Stakeholder Meet')
design_layout = Transition(label='Design Layout')
iot_install = Transition(label='IoT Install')
sensor_calibrate = Transition(label='Sensor Calibrate')
hydroponic_setup = Transition(label='Hydroponic Setup')
nutrient_mix = Transition(label='Nutrient Mix')
seed_sowing = Transition(label='Seed Sowing')
climate_control = Transition(label='Climate Control')
data_monitor = Transition(label='Data Monitor')
yield_forecast = Transition(label='Yield Forecast')
energy_plan = Transition(label='Energy Plan')
maintenance_plan = Transition(label='Maintenance Plan')
harvest_prep = Transition(label='Harvest Prep')
supply_dispatch = Transition(label='Supply Dispatch')
market_launch = Transition(label='Market Launch')

# Define operators
site_survey_node = OperatorPOWL(operator=Operator.SILENT, children=[site_survey])
permit_filing_node = OperatorPOWL(operator=Operator.SILENT, children=[permit_filing])
stakeholder_meet_node = OperatorPOWL(operator=Operator.SILENT, children=[stakeholder_meet])
design_layout_node = OperatorPOWL(operator=Operator.SILENT, children=[design_layout])
iot_install_node = OperatorPOWL(operator=Operator.SILENT, children=[iot_install])
sensor_calibrate_node = OperatorPOWL(operator=Operator.SILENT, children=[sensor_calibrate])
hydroponic_setup_node = OperatorPOWL(operator=Operator.SILENT, children=[hydroponic_setup])
nutrient_mix_node = OperatorPOWL(operator=Operator.SILENT, children=[nutrient_mix])
seed_sowing_node = OperatorPOWL(operator=Operator.SILENT, children=[seed_sowing])
climate_control_node = OperatorPOWL(operator=Operator.SILENT, children=[climate_control])
data_monitor_node = OperatorPOWL(operator=Operator.SILENT, children=[data_monitor])
yield_forecast_node = OperatorPOWL(operator=Operator.SILENT, children=[yield_forecast])
energy_plan_node = OperatorPOWL(operator=Operator.SILENT, children=[energy_plan])
maintenance_plan_node = OperatorPOWL(operator=Operator.SILENT, children=[maintenance_plan])
harvest_prep_node = OperatorPOWL(operator=Operator.SILENT, children=[harvest_prep])
supply_dispatch_node = OperatorPOWL(operator=Operator.SILENT, children=[supply_dispatch])
market_launch_node = OperatorPOWL(operator=Operator.SILENT, children=[market_launch])

# Create the root POWL model
root = StrictPartialOrder(nodes=[site_survey_node, permit_filing_node, stakeholder_meet_node, design_layout_node, iot_install_node, sensor_calibrate_node, hydroponic_setup_node, nutrient_mix_node, seed_sowing_node, climate_control_node, data_monitor_node, yield_forecast_node, energy_plan_node, maintenance_plan_node, harvest_prep_node, supply_dispatch_node, market_launch_node])

# Define dependencies
root.order.add_edge(site_survey_node, permit_filing_node)
root.order.add_edge(permit_filing_node, stakeholder_meet_node)
root.order.add_edge(stakeholder_meet_node, design_layout_node)
root.order.add_edge(design_layout_node, iot_install_node)
root.order.add_edge(iot_install_node, sensor_calibrate_node)
root.order.add_edge(sensor_calibrate_node, hydroponic_setup_node)
root.order.add_edge(hydroponic_setup_node, nutrient_mix_node)
root.order.add_edge(nutrient_mix_node, seed_sowing_node)
root.order.add_edge(seed_sowing_node, climate_control_node)
root.order.add_edge(climate_control_node, data_monitor_node)
root.order.add_edge(data_monitor_node, yield_forecast_node)
root.order.add_edge(yield_forecast_node, energy_plan_node)
root.order.add_edge(energy_plan_node, maintenance_plan_node)
root.order.add_edge(maintenance_plan_node, harvest_prep_node)
root.order.add_edge(harvest_prep_node, supply_dispatch_node)
root.order.add_edge(supply_dispatch_node, market_launch_node)