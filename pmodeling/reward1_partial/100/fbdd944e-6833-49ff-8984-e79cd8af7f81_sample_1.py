import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define the POWL nodes
client_onboard = Transition(label='Client Onboard')
needs_assess = Transition(label='Needs Assess')
drone_config = Transition(label='Drone Config')
route_program = Transition(label='Route Program')
compliance_check = Transition(label='Compliance Check')
insurance_verify = Transition(label='Insurance Verify')
lease_contract = Transition(label='Lease Contract')
fleet_deploy = Transition(label='Fleet Deploy')
monitor_setup = Transition(label='Monitor Setup')
usage_track = Transition(label='Usage Track')
maintenance_plan = Transition(label='Maintenance Plan')
incident_manage = Transition(label='Incident Manage')
billing_process = Transition(label='Billing Process')
performance_report = Transition(label='Performance Report')
contract_renew = Transition(label='Contract Renew')
price_adjust = Transition(label='Price Adjust')
feedback_collect = Transition(label='Feedback Collect')

# Define the POWL operators
xor1 = OperatorPOWL(operator=Operator.XOR, children=[needs_assess, client_onboard])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[drone_config, xor1])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[route_program, xor2])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[compliance_check, xor3])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[insurance_verify, xor4])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[lease_contract, xor5])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[fleet_deploy, xor6])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[monitor_setup, xor7])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[usage_track, xor8])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[maintenance_plan, xor9])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[incident_manage, xor10])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[billing_process, xor11])
xor13 = OperatorPOWL(operator=Operator.XOR, children=[performance_report, xor12])
xor14 = OperatorPOWL(operator=Operator.XOR, children=[contract_renew, xor13])
xor15 = OperatorPOWL(operator=Operator.XOR, children=[price_adjust, xor14])
xor16 = OperatorPOWL(operator=Operator.XOR, children=[feedback_collect, xor15])

# Define the partial order
root = StrictPartialOrder(nodes=[xor1, xor2, xor3, xor4, xor5, xor6, xor7, xor8, xor9, xor10, xor11, xor12, xor13, xor14, xor15, xor16])
root.order.add_edge(xor1, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor6, xor7)
root.order.add_edge(xor7, xor8)
root.order.add_edge(xor8, xor9)
root.order.add_edge(xor9, xor10)
root.order.add_edge(xor10, xor11)
root.order.add_edge(xor11, xor12)
root.order.add_edge(xor12, xor13)
root.order.add_edge(xor13, xor14)
root.order.add_edge(xor14, xor15)
root.order.add_edge(xor15, xor16)