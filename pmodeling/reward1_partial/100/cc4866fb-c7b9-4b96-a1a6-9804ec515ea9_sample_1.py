from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition

# Define the transitions for each activity
site_survey = Transition(label='Site Survey')
design_planning = Transition(label='Design Planning')
permit_filing = Transition(label='Permit Filing')
structural_reinforce = Transition(label='Structural Reinforce')
hydroponic_setup = Transition(label='Hydroponic Setup')
sensor_install = Transition(label='Sensor Install')
energy_audit = Transition(label='Energy Audit')
crop_selection = Transition(label='Crop Selection')
nutrient_mix = Transition(label='Nutrient Mix')
waste_process = Transition(label='Waste Process')
climate_control = Transition(label='Climate Control')
staff_training = Transition(label='Staff Training')
market_study = Transition(label='Market Study')
community_meet = Transition(label='Community Meet')
launch_trial = Transition(label='Launch Trial')
data_monitor = Transition(label='Data Monitor')

# Define the exclusive choice for each set of activities
permit_filing_choice = OperatorPOWL(operator=Operator.XOR, children=[permit_filing, site_survey])
structural_reinforce_choice = OperatorPOWL(operator=Operator.XOR, children=[structural_reinforce, design_planning])
hydroponic_setup_choice = OperatorPOWL(operator=Operator.XOR, children=[hydroponic_setup, permit_filing_choice])
sensor_install_choice = OperatorPOWL(operator=Operator.XOR, children=[sensor_install, structural_reinforce_choice])
energy_audit_choice = OperatorPOWL(operator=Operator.XOR, children=[energy_audit, hydroponic_setup_choice])
crop_selection_choice = OperatorPOWL(operator=Operator.XOR, children=[crop_selection, sensor_install_choice])
nutrient_mix_choice = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, energy_audit_choice])
waste_process_choice = OperatorPOWL(operator=Operator.XOR, children=[waste_process, crop_selection_choice])
climate_control_choice = OperatorPOWL(operator=Operator.XOR, children=[climate_control, nutrient_mix_choice])
staff_training_choice = OperatorPOWL(operator=Operator.XOR, children=[staff_training, waste_process_choice])
market_study_choice = OperatorPOWL(operator=Operator.XOR, children=[market_study, staff_training_choice])
community_meet_choice = OperatorPOWL(operator=Operator.XOR, children=[community_meet, market_study_choice])
launch_trial_choice = OperatorPOWL(operator=Operator.XOR, children=[launch_trial, community_meet_choice])
data_monitor_choice = OperatorPOWL(operator=Operator.XOR, children=[data_monitor, launch_trial_choice])

# Define the loop for the data monitoring
loop = OperatorPOWL(operator=Operator.LOOP, children=[data_monitor_choice])

# Define the root process
root = StrictPartialOrder(nodes=[permit_filing_choice, structural_reinforce_choice, hydroponic_setup_choice, sensor_install_choice, energy_audit_choice, crop_selection_choice, nutrient_mix_choice, waste_process_choice, climate_control_choice, staff_training_choice, market_study_choice, community_meet_choice, launch_trial_choice, loop])
root.order.add_edge(permit_filing_choice, structural_reinforce_choice)
root.order.add_edge(structural_reinforce_choice, hydroponic_setup_choice)
root.order.add_edge(hydroponic_setup_choice, sensor_install_choice)
root.order.add_edge(sensor_install_choice, energy_audit_choice)
root.order.add_edge(energy_audit_choice, crop_selection_choice)
root.order.add_edge(crop_selection_choice, nutrient_mix_choice)
root.order.add_edge(nutrient_mix_choice, waste_process_choice)
root.order.add_edge(waste_process_choice, climate_control_choice)
root.order.add_edge(climate_control_choice, staff_training_choice)
root.order.add_edge(staff_training_choice, market_study_choice)
root.order.add_edge(market_study_choice, community_meet_choice)
root.order.add_edge(community_meet_choice, launch_trial_choice)
root.order.add_edge(launch_trial_choice, loop)