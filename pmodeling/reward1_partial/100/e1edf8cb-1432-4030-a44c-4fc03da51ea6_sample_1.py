import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define activities
site_survey = Transition(label='Site Survey')
structural_check = Transition(label='Structural Check')
env_control = Transition(label='Env Control')
hydro_setup = Transition(label='Hydro Setup')
crop_select = Transition(label='Crop Select')
iot_install = Transition(label='IoT Install')
sensor_calibrate = Transition(label='Sensor Calibrate')
water_cycle = Transition(label='Water Cycle')
nutrient_mix = Transition(label='Nutrient Mix')
lighting_adjust = Transition(label='Lighting Adjust')
staff_train = Transition(label='Staff Train')
waste_manage = Transition(label='Waste Manage')
energy_audit = Transition(label='Energy Audit')
harvest_plan = Transition(label='Harvest Plan')
delivery_setup = Transition(label='Delivery Setup')
market_align = Transition(label='Market Align')

# Define the process tree
site_analysis = OperatorPOWL(operator=Operator.XOR, children=[site_survey, structural_check])
env_control_install = OperatorPOWL(operator=Operator.XOR, children=[env_control, SilentTransition()])
hydro_setup_config = OperatorPOWL(operator=Operator.XOR, children=[hydro_setup, SilentTransition()])
crop_selection = OperatorPOWL(operator=Operator.XOR, children=[crop_select, SilentTransition()])
iot_sensors = OperatorPOWL(operator=Operator.XOR, children=[iot_install, SilentTransition()])
sensor_calibration = OperatorPOWL(operator=Operator.XOR, children=[sensor_calibrate, SilentTransition()])
water_cycle_setup = OperatorPOWL(operator=Operator.XOR, children=[water_cycle, SilentTransition()])
nutrient_mixing = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, SilentTransition()])
lighting_adjustment = OperatorPOWL(operator=Operator.XOR, children=[lighting_adjust, SilentTransition()])
staff_training = OperatorPOWL(operator=Operator.XOR, children=[staff_train, SilentTransition()])
waste_management = OperatorPOWL(operator=Operator.XOR, children=[waste_manage, SilentTransition()])
energy_audit_setup = OperatorPOWL(operator=Operator.XOR, children=[energy_audit, SilentTransition()])
harvest_plan_setup = OperatorPOWL(operator=Operator.XOR, children=[harvest_plan, SilentTransition()])
delivery_setup_plan = OperatorPOWL(operator=Operator.XOR, children=[delivery_setup, SilentTransition()])
market_alignment = OperatorPOWL(operator=Operator.XOR, children=[market_align, SilentTransition()])

# Define the partial order
root = StrictPartialOrder(nodes=[site_analysis, env_control_install, hydro_setup_config, crop_selection, iot_sensors, sensor_calibration, water_cycle_setup, nutrient_mixing, lighting_adjustment, staff_training, waste_management, energy_audit_setup, harvest_plan_setup, delivery_setup_plan, market_alignment])
root.order.add_edge(site_analysis, env_control_install)
root.order.add_edge(site_analysis, hydro_setup_config)
root.order.add_edge(env_control_install, iot_sensors)
root.order.add_edge(env_control_install, sensor_calibration)
root.order.add_edge(hydro_setup_config, water_cycle_setup)
root.order.add_edge(hydro_setup_config, nutrient_mixing)
root.order.add_edge(hydro_setup_config, lighting_adjustment)
root.order.add_edge(hydro_setup_config, staff_training)
root.order.add_edge(hydro_setup_config, waste_management)
root.order.add_edge(hydro_setup_config, energy_audit_setup)
root.order.add_edge(hydro_setup_config, harvest_plan_setup)
root.order.add_edge(hydro_setup_config, delivery_setup_plan)
root.order.add_edge(hydro_setup_config, market_alignment)