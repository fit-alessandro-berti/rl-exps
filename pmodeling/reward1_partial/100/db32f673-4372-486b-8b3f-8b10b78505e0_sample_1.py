import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define the transitions (activities)
receive_artifact = Transition(label='Receive Artifact')
condition_log = Transition(label='Condition Log')
radiocarbon_test = Transition(label='Radiocarbon Test')
spectroscopy_scan = Transition(label='Spectroscopy Scan')
expert_consult = Transition(label='Expert Consult')
provenance_check = Transition(label='Provenance Check')
archive_search = Transition(label='Archive Search')
risk_assess = Transition(label='Risk Assess')
three_d_scan = Transition(label='3D Scan')
legal_review = Transition(label='Legal Review')
insurance_setup = Transition(label='Insurance Setup')
certificate_draft = Transition(label='Certificate Draft')
certificate_approve = Transition(label='Certificate Approve')
climate_pack = Transition(label='Climate Pack')
conservation_plan = Transition(label='Conservation Plan')
monitoring_schedule = Transition(label='Monitoring Schedule')

# Define the silent transition (skip)
skip = SilentTransition()

# Define the POWL model
loop = OperatorPOWL(operator=Operator.LOOP, children=[risk_assess, climate_pack, conservation_plan])
xor1 = OperatorPOWL(operator=Operator.XOR, children=[legal_review, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[archive_search, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[expert_consult, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[provenance_check, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[radiocarbon_test, spectroscopy_scan])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[insurance_setup, certificate_draft])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[certificate_approve, skip])

root = StrictPartialOrder(nodes=[
    receive_artifact,
    condition_log,
    xor5,
    xor6,
    xor7,
    xor4,
    xor3,
    xor2,
    xor1,
    loop
])
root.order.add_edge(risk_assess, climate_pack)
root.order.add_edge(climate_pack, conservation_plan)
root.order.add_edge(conservation_plan, monitoring_schedule)
root.order.add_edge(legal_review, archive_search)
root.order.add_edge(archive_search, provenance_check)
root.order.add_edge(provenance_check, radiocarbon_test)
root.order.add_edge(radiocarbon_test, spectroscopy_scan)
root.order.add_edge(spectroscopy_scan, insurance_setup)
root.order.add_edge(insurance_setup, certificate_draft)
root.order.add_edge(certificate_draft, certificate_approve)
root.order.add_edge(certificate_approve, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order.add_edge(skip, skip)
root.order