import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
design_layout = Transition(label='Design Layout')
modular_build = Transition(label='Modular Build')
install_pumps = Transition(label='Install Pumps')
setup_sensors = Transition(label='Setup Sensors')
calibrate_lights = Transition(label='Calibrate Lights')
nutrient_mix = Transition(label='Nutrient Mix')
plant_seeding = Transition(label='Plant Seeding')
water_cycling = Transition(label='Water Cycling')
energy_audit = Transition(label='Energy Audit')
pest_control = Transition(label='Pest Control')
growth_monitor = Transition(label='Growth Monitor')
data_analysis = Transition(label='Data Analysis')
yield_forecast = Transition(label='Yield Forecast')
supply_order = Transition(label='Supply Order')
waste_recycle = Transition(label='Waste Recycle')
system_upgrade = Transition(label='System Upgrade')

xor1 = OperatorPOWL(operator=Operator.XOR, children=[energy_audit, pest_control, system_upgrade])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[data_analysis, yield_forecast, supply_order])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[waste_recycle, modular_build, site_survey])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[design_layout, nutrient_mix, plant_seeding])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[install_pumps, setup_sensors, calibrate_lights])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[water_cycling, growth_monitor])
root = StrictPartialOrder(nodes=[xor1, xor2, xor3, xor4, xor5, xor6])
root.order.add_edge(xor1, xor2)
root.order.add_edge(xor1, xor3)
root.order.add_edge(xor2, xor4)
root.order.add_edge(xor2, xor5)
root.order.add_edge(xor3, xor6)