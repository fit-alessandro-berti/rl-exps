import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define transitions for each activity
artifact_intake = Transition(label='Artifact Intake')
initial_survey = Transition(label='Initial Survey')
material_test = Transition(label='Material Test')
historical_check = Transition(label='Historical Check')
registry_search = Transition(label='Registry Search')
owner_interview = Transition(label='Owner Interview')
condition_report = Transition(label='Condition Report')
forgery_scan = Transition(label='Forgery Scan')
digital_tagging = Transition(label='Digital Tagging')
ledger_entry = Transition(label='Ledger Entry')
expert_review = Transition(label='Expert Review')
legal_verify = Transition(label='Legal Verify')
provenance_draft = Transition(label='Provenance Draft')
client_approval = Transition(label='Client Approval')
final_certificate = Transition(label='Final Certificate')
archive_storage = Transition(label='Archive Storage')

# Define silent transitions
skip_initial_survey = SilentTransition()
skip_material_test = SilentTransition()
skip_historical_check = SilentTransition()
skip_registry_search = SilentTransition()
skip_owner_interview = SilentTransition()
skip_condition_report = SilentTransition()
skip_forgery_scan = SilentTransition()
skip_digital_tagging = SilentTransition()
skip_ledger_entry = SilentTransition()
skip_expert_review = SilentTransition()
skip_legal_verify = SilentTransition()
skip_provenance_draft = SilentTransition()
skip_client_approval = SilentTransition()
skip_final_certificate = SilentTransition()
skip_archive_storage = SilentTransition()

# Define the POWL model structure
loop_initial_survey = OperatorPOWL(operator=Operator.LOOP, children=[initial_survey, skip_initial_survey])
loop_material_test = OperatorPOWL(operator=Operator.LOOP, children=[material_test, skip_material_test])
loop_historical_check = OperatorPOWL(operator=Operator.LOOP, children=[historical_check, skip_historical_check])
loop_registry_search = OperatorPOWL(operator=Operator.LOOP, children=[registry_search, skip_registry_search])
loop_owner_interview = OperatorPOWL(operator=Operator.LOOP, children=[owner_interview, skip_owner_interview])
loop_condition_report = OperatorPOWL(operator=Operator.LOOP, children=[condition_report, skip_condition_report])
loop_forgery_scan = OperatorPOWL(operator=Operator.LOOP, children=[forgery_scan, skip_forgery_scan])
loop_digital_tagging = OperatorPOWL(operator=Operator.LOOP, children=[digital_tagging, skip_digital_tagging])
loop_ledger_entry = OperatorPOWL(operator=Operator.LOOP, children=[ledger_entry, skip_ledger_entry])
loop_expert_review = OperatorPOWL(operator=Operator.LOOP, children=[expert_review, skip_expert_review])
loop_legal_verify = OperatorPOWL(operator=Operator.LOOP, children=[legal_verify, skip_legal_verify])
loop_provenance_draft = OperatorPOWL(operator=Operator.LOOP, children=[provenance_draft, skip_provenance_draft])
loop_client_approval = OperatorPOWL(operator=Operator.LOOP, children=[client_approval, skip_client_approval])
loop_final_certificate = OperatorPOWL(operator=Operator.LOOP, children=[final_certificate, skip_final_certificate])
loop_archive_storage = OperatorPOWL(operator=Operator.LOOP, children=[archive_storage, skip_archive_storage])

xor_initial_survey = OperatorPOWL(operator=Operator.XOR, children=[skip_initial_survey, loop_initial_survey])
xor_material_test = OperatorPOWL(operator=Operator.XOR, children=[skip_material_test, loop_material_test])
xor_historical_check = OperatorPOWL(operator=Operator.XOR, children=[skip_historical_check, loop_historical_check])
xor_registry_search = OperatorPOWL(operator=Operator.XOR, children=[skip_registry_search, loop_registry_search])
xor_owner_interview = OperatorPOWL(operator=Operator.XOR, children=[skip_owner_interview, loop_owner_interview])
xor_condition_report = OperatorPOWL(operator=Operator.XOR, children=[skip_condition_report, loop_condition_report])
xor_forgery_scan = OperatorPOWL(operator=Operator.XOR, children=[skip_forgery_scan, loop_forgery_scan])
xor_digital_tagging = OperatorPOWL(operator=Operator.XOR, children=[skip_digital_tagging, loop_digital_tagging])
xor_ledger_entry = OperatorPOWL(operator=Operator.XOR, children=[skip_ledger_entry, loop_ledger_entry])
xor_expert_review = OperatorPOWL(operator=Operator.XOR, children=[skip_expert_review, loop_expert_review])
xor_legal_verify = OperatorPOWL(operator=Operator.XOR, children=[skip_legal_verify, loop_legal_verify])
xor_provenance_draft = OperatorPOWL(operator=Operator.XOR, children=[skip_provenance_draft, loop_provenance_draft])
xor_client_approval = OperatorPOWL(operator=Operator.XOR, children=[skip_client_approval, loop_client_approval])
xor_final_certificate = OperatorPOWL(operator=Operator.XOR, children=[skip_final_certificate, loop_final_certificate])
xor_archive_storage = OperatorPOWL(operator=Operator.XOR, children=[skip_archive_storage, loop_archive_storage])

root = StrictPartialOrder(nodes=[xor_initial_survey, xor_material_test, xor_historical_check, xor_registry_search, xor_owner_interview, xor_condition_report, xor_forgery_scan, xor_digital_tagging, xor_ledger_entry, xor_expert_review, xor_legal_verify, xor_provenance_draft, xor_client_approval, xor_final_certificate, xor_archive_storage])
root.order.add_edge(xor_initial_survey, loop_initial_survey)
root.order.add_edge(xor_material_test, loop_material_test)
root.order.add_edge(xor_historical_check, loop_historical_check)
root.order.add_edge(xor_registry_search, loop_registry_search)
root.order.add_edge(xor_owner_interview, loop_owner_interview)
root.order.add_edge(xor_condition_report, loop_condition_report)
root.order.add_edge(xor_forgery_scan, loop_forgery_scan)
root.order.add_edge(xor_digital_tagging, loop_digital_tagging)
root.order.add_edge(xor_ledger_entry, loop_ledger_entry)
root.order.add_edge(xor_expert_review, loop_expert_review)
root.order.add_edge(xor_legal_verify, loop_legal_verify)
root.order.add_edge(xor_provenance_draft, loop_provenance_draft)
root.order.add_edge(xor_client_approval, loop_client_approval)
root.order.add_edge(xor_final_certificate, loop_final_certificate)
root.order.add_edge(xor_archive_storage, loop_archive_storage)