import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define transitions for each activity
artifact_intake = Transition(label='Artifact Intake')
condition_check = Transition(label='Condition Check')
material_test = Transition(label='Material Test')
archival_search = Transition(label='Archival Search')
style_compare = Transition(label='Style Compare')
expert_review = Transition(label='Expert Review')
restoration_check = Transition(label='Restoration Check')
provenance_trace = Transition(label='Provenance Trace')
legal_verify = Transition(label='Legal Verify')
value_appraise = Transition(label='Value Appraise')
catalog_entry = Transition(label='Catalog Entry')
marketing_plan = Transition(label='Marketing Plan')
auction_setup = Transition(label='Auction Setup')
certify_final = Transition(label='Certify Final')
sales_report = Transition(label='Sales Report')

# Define silent transitions (tau labels)
skip_condition_check = SilentTransition()
skip_material_test = SilentTransition()
skip_archival_search = SilentTransition()
skip_style_compare = SilentTransition()
skip_expert_review = SilentTransition()
skip_restoration_check = SilentTransition()
skip_legal_verify = SilentTransition()
skip_value_appraise = SilentTransition()
skip_catalog_entry = SilentTransition()
skip_marketing_plan = SilentTransition()
skip_auction_setup = SilentTransition()
skip_certify_final = SilentTransition()

# Define the POWL model
xor1 = OperatorPOWL(operator=Operator.XOR, children=[skip_condition_check, condition_check])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[skip_material_test, material_test])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[skip_archival_search, archival_search])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[skip_style_compare, style_compare])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[skip_expert_review, expert_review])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[skip_restoration_check, restoration_check])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[skip_legal_verify, legal_verify])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[skip_value_appraise, value_appraise])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[skip_catalog_entry, catalog_entry])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[skip_marketing_plan, marketing_plan])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[skip_auction_setup, auction_setup])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[skip_certify_final, certify_final])

root = StrictPartialOrder(nodes=[artifact_intake, xor1, xor2, xor3, xor4, xor5, xor6, xor7, xor8, xor9, xor10, xor11, xor12])
root.order.add_edge(artifact_intake, xor1)
root.order.add_edge(artifact_intake, xor2)
root.order.add_edge(artifact_intake, xor3)
root.order.add_edge(artifact_intake, xor4)
root.order.add_edge(artifact_intake, xor5)
root.order.add_edge(artifact_intake, xor6)
root.order.add_edge(artifact_intake, xor7)
root.order.add_edge(artifact_intake, xor8)
root.order.add_edge(artifact_intake, xor9)
root.order.add_edge(artifact_intake, xor10)
root.order.add_edge(artifact_intake, xor11)
root.order.add_edge(artifact_intake, xor12)