from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition

# Define transitions for each activity
site_survey = Transition(label='Site Survey')
design_layout = Transition(label='Design Layout')
system_build = Transition(label='System Build')
install_sensors = Transition(label='Install Sensors')
set_controls = Transition(label='Set Controls')
test_modules = Transition(label='Test Modules')
select_crops = Transition(label='Select Crops')
configure_irrigation = Transition(label='Configure Irrigation')
deploy_ai = Transition(label='Deploy AI')
monitor_pests = Transition(label='Monitor Pests')
manage_energy = Transition(label='Manage Energy')
recycle_waste = Transition(label='Recycle Waste')
train_staff = Transition(label='Train Staff')
launch_market = Transition(label='Launch Market')
engage_community = Transition(label='Engage Community')

# Define exclusive choices for each set of activities
exclusive_choice_1 = OperatorPOWL(operator=Operator.XOR, children=[install_sensors, set_controls])
exclusive_choice_2 = OperatorPOWL(operator=Operator.XOR, children=[select_crops, configure_irrigation])
exclusive_choice_3 = OperatorPOWL(operator=Operator.XOR, children=[monitor_pests, manage_energy])
exclusive_choice_4 = OperatorPOWL(operator=Operator.XOR, children=[recycle_waste, train_staff])
exclusive_choice_5 = OperatorPOWL(operator=Operator.XOR, children=[launch_market, engage_community])

# Define loops for continuous monitoring and updates
loop1 = OperatorPOWL(operator=Operator.LOOP, children=[exclusive_choice_1])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[exclusive_choice_2])
loop3 = OperatorPOWL(operator=Operator.LOOP, children=[exclusive_choice_3])
loop4 = OperatorPOWL(operator=Operator.LOOP, children=[exclusive_choice_4])
loop5 = OperatorPOWL(operator=Operator.LOOP, children=[exclusive_choice_5])

# Create the root POWL model with all activities and their dependencies
root = StrictPartialOrder(nodes=[site_survey, design_layout, system_build, exclusive_choice_1, exclusive_choice_2, exclusive_choice_3, exclusive_choice_4, exclusive_choice_5, loop1, loop2, loop3, loop4, loop5])
root.order.add_edge(site_survey, design_layout)
root.order.add_edge(design_layout, system_build)
root.order.add_edge(system_build, exclusive_choice_1)
root.order.add_edge(exclusive_choice_1, loop1)
root.order.add_edge(loop1, exclusive_choice_1)
root.order.add_edge(site_survey, exclusive_choice_2)
root.order.add_edge(design_layout, exclusive_choice_2)
root.order.add_edge(system_build, exclusive_choice_2)
root.order.add_edge(exclusive_choice_2, loop2)
root.order.add_edge(loop2, exclusive_choice_2)
root.order.add_edge(site_survey, exclusive_choice_3)
root.order.add_edge(design_layout, exclusive_choice_3)
root.order.add_edge(system_build, exclusive_choice_3)
root.order.add_edge(exclusive_choice_3, loop3)
root.order.add_edge(loop3, exclusive_choice_3)
root.order.add_edge(site_survey, exclusive_choice_4)
root.order.add_edge(design_layout, exclusive_choice_4)
root.order.add_edge(system_build, exclusive_choice_4)
root.order.add_edge(exclusive_choice_4, loop4)
root.order.add_edge(loop4, exclusive_choice_4)
root.order.add_edge(site_survey, exclusive_choice_5)
root.order.add_edge(design_layout, exclusive_choice_5)
root.order.add_edge(system_build, exclusive_choice_5)
root.order.add_edge(exclusive_choice_5, loop5)
root.order.add_edge(loop5, exclusive_choice_5)