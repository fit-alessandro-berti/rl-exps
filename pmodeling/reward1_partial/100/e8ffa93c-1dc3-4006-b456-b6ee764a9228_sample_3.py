from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition

# Define transitions for each activity
SiteSurvey = Transition(label='Site Survey')
EnvAnalysis = Transition(label='Env Analysis')
StructureBuild = Transition(label='Structure Build')
HydroponicsFit = Transition(label='Hydroponics Fit')
NutrientMix = Transition(label='Nutrient Mix')
ClimateSetup = Transition(label='Climate Setup')
EnergyAudit = Transition(label='Energy Audit')
CropSelect = Transition(label='Crop Select')
PestControl = Transition(label='Pest Control')
GrowthMonitor = Transition(label='Growth Monitor')
HarvestPlan = Transition(label='Harvest Plan')
WasteRecycle = Transition(label='Waste Recycle')
CommunityMeet = Transition(label='Community Meet')
SupplySync = Transition(label='Supply Sync')
DataReview = Transition(label='Data Review')

# Define silent transitions
Skip1 = SilentTransition()
Skip2 = SilentTransition()
Skip3 = SilentTransition()

# Define loops and exclusive choices
SiteSurveyLoop = OperatorPOWL(operator=Operator.LOOP, children=[SiteSurvey, Skip1])
EnvAnalysisLoop = OperatorPOWL(operator=Operator.LOOP, children=[EnvAnalysis, Skip2])
StructureBuildLoop = OperatorPOWL(operator=Operator.LOOP, children=[StructureBuild, Skip3])
HydroponicsFitXOR = OperatorPOWL(operator=Operator.XOR, children=[HydroponicsFit, Skip1])
NutrientMixXOR = OperatorPOWL(operator=Operator.XOR, children=[NutrientMix, Skip2])
ClimateSetupXOR = OperatorPOWL(operator=Operator.XOR, children=[ClimateSetup, Skip3])
EnergyAuditXOR = OperatorPOWL(operator=Operator.XOR, children=[EnergyAudit, Skip1])
CropSelectXOR = OperatorPOWL(operator=Operator.XOR, children=[CropSelect, Skip2])
PestControlXOR = OperatorPOWL(operator=Operator.XOR, children=[PestControl, Skip3])
GrowthMonitorXOR = OperatorPOWL(operator=Operator.XOR, children=[GrowthMonitor, Skip1])
HarvestPlanXOR = OperatorPOWL(operator=Operator.XOR, children=[HarvestPlan, Skip2])
WasteRecycleXOR = OperatorPOWL(operator=Operator.XOR, children=[WasteRecycle, Skip3])
CommunityMeetXOR = OperatorPOWL(operator=Operator.XOR, children=[CommunityMeet, Skip1])
SupplySyncXOR = OperatorPOWL(operator=Operator.XOR, children=[SupplySync, Skip2])
DataReviewXOR = OperatorPOWL(operator=Operator.XOR, children=[DataReview, Skip3])

# Define the root POWL model
root = StrictPartialOrder(nodes=[SiteSurveyLoop, EnvAnalysisLoop, StructureBuildLoop, HydroponicsFitXOR, NutrientMixXOR, ClimateSetupXOR, EnergyAuditXOR, CropSelectXOR, PestControlXOR, GrowthMonitorXOR, HarvestPlanXOR, WasteRecycleXOR, CommunityMeetXOR, SupplySyncXOR, DataReviewXOR])
root.order.add_edge(SiteSurveyLoop, EnvAnalysisLoop)
root.order.add_edge(EnvAnalysisLoop, StructureBuildLoop)
root.order.add_edge(StructureBuildLoop, HydroponicsFitXOR)
root.order.add_edge(HydroponicsFitXOR, NutrientMixXOR)
root.order.add_edge(NutrientMixXOR, ClimateSetupXOR)
root.order.add_edge(ClimateSetupXOR, EnergyAuditXOR)
root.order.add_edge(EnergyAuditXOR, CropSelectXOR)
root.order.add_edge(CropSelectXOR, PestControlXOR)
root.order.add_edge(PestControlXOR, GrowthMonitorXOR)
root.order.add_edge(GrowthMonitorXOR, HarvestPlanXOR)
root.order.add_edge(HarvestPlanXOR, WasteRecycleXOR)
root.order.add_edge(WasteRecycleXOR, CommunityMeetXOR)
root.order.add_edge(CommunityMeetXOR, SupplySyncXOR)
root.order.add_edge(SupplySyncXOR, DataReviewXOR)