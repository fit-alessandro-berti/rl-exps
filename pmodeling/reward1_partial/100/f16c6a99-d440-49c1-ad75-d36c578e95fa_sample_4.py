import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
design_layout = Transition(label='Design Layout')
sensor_deploy = Transition(label='Sensor Deploy')
crop_select = Transition(label='Crop Select')
system_install = Transition(label='System Install')
energy_setup = Transition(label='Energy Setup')
water_cycle = Transition(label='Water Cycle')
pest_control = Transition(label='Pest Control')
regulatory_check = Transition(label='Regulatory Check')
staff_training = Transition(label='Staff Training')
data_configure = Transition(label='Data Configure')
supply_plan = Transition(label='Supply Plan')
harvest_schedule = Transition(label='Harvest Schedule')
quality_audit = Transition(label='Quality Audit')
market_launch = Transition(label='Market Launch')
feedback_loop = Transition(label='Feedback Loop')

site_survey_to_design = OperatorPOWL(operator=Operator.XOR, children=[site_survey, design_layout])
design_to_sensor = OperatorPOWL(operator=Operator.XOR, children=[design_layout, sensor_deploy])
sensor_to_crop = OperatorPOWL(operator=Operator.XOR, children=[sensor_deploy, crop_select])
crop_to_system = OperatorPOWL(operator=Operator.XOR, children=[crop_select, system_install])
system_to_energy = OperatorPOWL(operator=Operator.XOR, children=[system_install, energy_setup])
energy_to_water = OperatorPOWL(operator=Operator.XOR, children=[energy_setup, water_cycle])
water_to_pest = OperatorPOWL(operator=Operator.XOR, children=[water_cycle, pest_control])
pest_to_regulatory = OperatorPOWL(operator=Operator.XOR, children=[pest_control, regulatory_check])
regulatory_to_staff = OperatorPOWL(operator=Operator.XOR, children=[regulatory_check, staff_training])
staff_to_data = OperatorPOWL(operator=Operator.XOR, children=[staff_training, data_configure])
data_to_supply = OperatorPOWL(operator=Operator.XOR, children=[data_configure, supply_plan])
supply_to_harvest = OperatorPOWL(operator=Operator.XOR, children=[supply_plan, harvest_schedule])
harvest_to_quality = OperatorPOWL(operator=Operator.XOR, children=[harvest_schedule, quality_audit])
quality_to_market = OperatorPOWL(operator=Operator.XOR, children=[quality_audit, market_launch])
market_to_feedback = OperatorPOWL(operator=Operator.XOR, children=[market_launch, feedback_loop])

root = StrictPartialOrder(nodes=[site_survey_to_design, design_to_sensor, sensor_to_crop, crop_to_system, system_to_energy, energy_to_water, water_to_pest, pest_to_regulatory, regulatory_to_staff, staff_to_data, data_to_supply, supply_to_harvest, harvest_to_quality, quality_to_market, market_to_feedback])
root.order.add_edge(site_survey_to_design, design_to_sensor)
root.order.add_edge(design_to_sensor, sensor_to_crop)
root.order.add_edge(sensor_to_crop, crop_to_system)
root.order.add_edge(crop_to_system, system_to_energy)
root.order.add_edge(system_to_energy, energy_to_water)
root.order.add_edge(energy_to_water, water_to_pest)
root.order.add_edge(water_to_pest, pest_to_regulatory)
root.order.add_edge(pest_to_regulatory, regulatory_to_staff)
root.order.add_edge(regulatory_to_staff, staff_to_data)
root.order.add_edge(staff_to_data, data_to_supply)
root.order.add_edge(data_to_supply, supply_to_harvest)
root.order.add_edge(supply_to_harvest, harvest_to_quality)
root.order.add_edge(harvest_to_quality, quality_to_market)
root.order.add_edge(quality_to_market, market_to_feedback)