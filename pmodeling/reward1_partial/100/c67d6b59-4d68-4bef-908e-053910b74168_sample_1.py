import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

client_meet = Transition(label='Client Meet')
design_draft = Transition(label='Design Draft')
vendor_select = Transition(label='Vendor Select')
component_order = Transition(label='Component Order')
parts_inspect = Transition(label='Parts Inspect')
frame_build = Transition(label='Frame Build')
wiring_setup = Transition(label='Wiring Setup')
software_load = Transition(label='Software Load')
flight_sim = Transition(label='Flight Sim')
quality_test = Transition(label='Quality Test')
feedback_review = Transition(label='Feedback Review')
adjust_design = Transition(label='Adjust Design')
compliance_check = Transition(label='Compliance Check')
packaging_prep = Transition(label='Packaging Prep')
final_demo = Transition(label='Final Demo')
ship_drone = Transition(label='Ship Drone')

skip = SilentTransition()

client_meet_to_design_draft = OperatorPOWL(operator=Operator.XOR, children=[client_meet, design_draft])
vendor_select_to_component_order = OperatorPOWL(operator=Operator.XOR, children=[vendor_select, component_order])
component_order_to_parts_inspect = OperatorPOWL(operator=Operator.XOR, children=[component_order, parts_inspect])
parts_inspect_to_frame_build = OperatorPOWL(operator=Operator.XOR, children=[parts_inspect, frame_build])
frame_build_to_wiring_setup = OperatorPOWL(operator=Operator.XOR, children=[frame_build, wiring_setup])
wiring_setup_to_software_load = OperatorPOWL(operator=Operator.XOR, children=[wiring_setup, software_load])
software_load_to_flight_sim = OperatorPOWL(operator=Operator.XOR, children=[software_load, flight_sim])
flight_sim_to_quality_test = OperatorPOWL(operator=Operator.XOR, children=[flight_sim, quality_test])
quality_test_to_feedback_review = OperatorPOWL(operator=Operator.XOR, children=[quality_test, feedback_review])
feedback_review_to_adjust_design = OperatorPOWL(operator=Operator.XOR, children=[feedback_review, adjust_design])
adjust_design_to_compliance_check = OperatorPOWL(operator=Operator.XOR, children=[adjust_design, compliance_check])
compliance_check_to_packaging_prep = OperatorPOWL(operator=Operator.XOR, children=[compliance_check, packaging_prep])
packaging_prep_to_final_demo = OperatorPOWL(operator=Operator.XOR, children=[packaging_prep, final_demo])
final_demo_to_ship_drone = OperatorPOWL(operator=Operator.XOR, children=[final_demo, ship_drone])

root = StrictPartialOrder(nodes=[client_meet_to_design_draft, vendor_select_to_component_order, component_order_to_parts_inspect, parts_inspect_to_frame_build, frame_build_to_wiring_setup, wiring_setup_to_software_load, software_load_to_flight_sim, flight_sim_to_quality_test, quality_test_to_feedback_review, feedback_review_to_adjust_design, adjust_design_to_compliance_check, compliance_check_to_packaging_prep, packaging_prep_to_final_demo, final_demo_to_ship_drone])
root.order.add_edge(client_meet_to_design_draft, vendor_select_to_component_order)
root.order.add_edge(vendor_select_to_component_order, component_order_to_parts_inspect)
root.order.add_edge(component_order_to_parts_inspect, parts_inspect_to_frame_build)
root.order.add_edge(parts_inspect_to_frame_build, frame_build_to_wiring_setup)
root.order.add_edge(frame_build_to_wiring_setup, wiring_setup_to_software_load)
root.order.add_edge(wiring_setup_to_software_load, software_load_to_flight_sim)
root.order.add_edge(software_load_to_flight_sim, flight_sim_to_quality_test)
root.order.add_edge(flight_sim_to_quality_test, quality_test_to_feedback_review)
root.order.add_edge(quality_test_to_feedback_review, feedback_review_to_adjust_design)
root.order.add_edge(feedback_review_to_adjust_design, adjust_design_to_compliance_check)
root.order.add_edge(adjust_design_to_compliance_check, compliance_check_to_packaging_prep)
root.order.add_edge(compliance_check_to_packaging_prep, packaging_prep_to_final_demo)
root.order.add_edge(packaging_prep_to_final_demo, final_demo_to_ship_drone)