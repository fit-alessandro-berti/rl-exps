import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
design_layout = Transition(label='Design Layout')
system_assembly = Transition(label='System Assembly')
climate_setup = Transition(label='Climate Setup')
light_calibration = Transition(label='Light Calibration')
seed_selection = Transition(label='Seed Selection')
seedling_prep = Transition(label='Seedling Prep')
nutrient_mix = Transition(label='Nutrient Mix')
irrigation_setup = Transition(label='Irrigation Setup')
sensor_install = Transition(label='Sensor Install')
data_integration = Transition(label='Data Integration')
waste_routing = Transition(label='Waste Routing')
energy_audit = Transition(label='Energy Audit')
regulation_check = Transition(label='Regulation Check')
operational_test = Transition(label='Operational Test')
community_outreach = Transition(label='Community Outreach')

xor1 = OperatorPOWL(operator=Operator.XOR, children=[climate_setup, light_calibration])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[seed_selection, seedling_prep])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, irrigation_setup])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[sensor_install, data_integration])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[waste_routing, energy_audit])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[regulation_check, operational_test])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[community_outreach])

loop1 = OperatorPOWL(operator=Operator.LOOP, children=[xor1])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[xor2])
loop3 = OperatorPOWL(operator=Operator.LOOP, children=[xor3])
loop4 = OperatorPOWL(operator=Operator.LOOP, children=[xor4])
loop5 = OperatorPOWL(operator=Operator.LOOP, children=[xor5])
loop6 = OperatorPOWL(operator=Operator.LOOP, children=[xor6])
loop7 = OperatorPOWL(operator=Operator.LOOP, children=[xor7])

root = StrictPartialOrder(nodes=[site_survey, design_layout, system_assembly, loop1, loop2, loop3, loop4, loop5, loop6, loop7])
root.order.add_edge(site_survey, design_layout)
root.order.add_edge(design_layout, system_assembly)
root.order.add_edge(system_assembly, loop1)
root.order.add_edge(system_assembly, loop2)
root.order.add_edge(system_assembly, loop3)
root.order.add_edge(system_assembly, loop4)
root.order.add_edge(system_assembly, loop5)
root.order.add_edge(system_assembly, loop6)
root.order.add_edge(system_assembly, loop7)
root.order.add_edge(loop1, xor1)
root.order.add_edge(loop2, xor2)
root.order.add_edge(loop3, xor3)
root.order.add_edge(loop4, xor4)
root.order.add_edge(loop5, xor5)
root.order.add_edge(loop6, xor6)
root.order.add_edge(loop7, xor7)