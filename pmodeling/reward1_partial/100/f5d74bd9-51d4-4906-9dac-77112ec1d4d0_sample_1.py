import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_review = Transition(label='Site Review')
impact_study = Transition(label='Impact Study')
design_plan = Transition(label='Design Plan')
structure_mod = Transition(label='Structure Mod')
hydroponics_setup = Transition(label='Hydroponics Setup')
crop_select = Transition(label='Crop Select')
nutrient_mix = Transition(label='Nutrient Mix')
pest_control = Transition(label='Pest Control')
sensor_install = Transition(label='Sensor Install')
staff_train = Transition(label='Staff Train')
compliance_audit = Transition(label='Compliance Audit')
packaging_dev = Transition(label='Packaging Dev')
logistics_plan = Transition(label='Logistics Plan')
community_engage = Transition(label='Community Engage')
sustainability_check = Transition(label='Sustainability Check')

skip = SilentTransition()

xor1 = OperatorPOWL(operator=Operator.XOR, children=[impact_study, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[design_plan, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[structure_mod, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[hydroponics_setup, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[crop_select, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, skip])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[pest_control, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[sensor_install, skip])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[staff_train, skip])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[compliance_audit, skip])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[packaging_dev, skip])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[logistics_plan, skip])
xor13 = OperatorPOWL(operator=Operator.XOR, children=[community_engage, skip])
xor14 = OperatorPOWL(operator=Operator.XOR, children=[sustainability_check, skip])

root = StrictPartialOrder(nodes=[site_review, xor1, xor2, xor3, xor4, xor5, xor6, xor7, xor8, xor9, xor10, xor11, xor12, xor13, xor14])
root.order.add_edge(site_review, xor1)
root.order.add_edge(site_review, xor2)
root.order.add_edge(site_review, xor3)
root.order.add_edge(site_review, xor4)
root.order.add_edge(site_review, xor5)
root.order.add_edge(site_review, xor6)
root.order.add_edge(site_review, xor7)
root.order.add_edge(site_review, xor8)
root.order.add_edge(site_review, xor9)
root.order.add_edge(site_review, xor10)
root.order.add_edge(site_review, xor11)
root.order.add_edge(site_review, xor12)
root.order.add_edge(site_review, xor13)
root.order.add_edge(site_review, xor14)

print(root)