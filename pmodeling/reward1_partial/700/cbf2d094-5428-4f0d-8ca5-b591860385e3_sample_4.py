import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

seed_select = Transition(label='Seed Select')
nutrient_mix = Transition(label='Nutrient Mix')
climate_adjust = Transition(label='Climate Adjust')
planting_robotic = Transition(label='Planting Robotic')
growth_monitor = Transition(label='Growth Monitor')
pest_control = Transition(label='Pest Control')
water_recycle = Transition(label='Water Recycle')
light_optimize = Transition(label='Light Optimize')
growth_analyze = Transition(label='Growth Analyze')
harvest_sync = Transition(label='Harvest Sync')
sterilize_crop = Transition(label='Sterilize Crop')
package_fresh = Transition(label='Package Fresh')
demand_forecast = Transition(label='Demand Forecast')
delivery_plan = Transition(label='Delivery Plan')
data_feedback = Transition(label='Data Feedback')

skip = SilentTransition()

climate_adjust_choice = OperatorPOWL(operator=Operator.XOR, children=[climate_adjust, skip])
pest_control_choice = OperatorPOWL(operator=Operator.XOR, children=[pest_control, skip])
light_optimize_choice = OperatorPOWL(operator=Operator.XOR, children=[light_optimize, skip])
water_recycle_choice = OperatorPOWL(operator=Operator.XOR, children=[water_recycle, skip])

harvest_sync_loop = OperatorPOWL(operator=Operator.LOOP, children=[harvest_sync])
demand_forecast_loop = OperatorPOWL(operator=Operator.LOOP, children=[demand_forecast])

root = StrictPartialOrder(nodes=[seed_select, nutrient_mix, climate_adjust_choice, planting_robotic, growth_monitor, pest_control_choice, light_optimize_choice, water_recycle_choice, growth_analyze, harvest_sync_loop, sterilize_crop, package_fresh, demand_forecast_loop, delivery_plan, data_feedback])
root.order.add_edge(seed_select, nutrient_mix)
root.order.add_edge(nutrient_mix, climate_adjust_choice)
root.order.add_edge(climate_adjust_choice, planting_robotic)
root.order.add_edge(planting_robotic, growth_monitor)
root.order.add_edge(growth_monitor, pest_control_choice)
root.order.add_edge(pest_control_choice, light_optimize_choice)
root.order.add_edge(light_optimize_choice, water_recycle_choice)
root.order.add_edge(water_recycle_choice, growth_analyze)
root.order.add_edge(growth_analyze, harvest_sync_loop)
root.order.add_edge(harvest_sync_loop, sterilize_crop)
root.order.add_edge(sterilize_crop, package_fresh)
root.order.add_edge(package_fresh, demand_forecast_loop)
root.order.add_edge(demand_forecast_loop, delivery_plan)
root.order.add_edge(delivery_plan, data_feedback)