import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

initial_review = Transition(label='Initial Review')
provenance_check = Transition(label='Provenance Check')
material_testing = Transition(label='Material Testing')
expert_survey = Transition(label='Expert Survey')
digital_scan = Transition(label='Digital Scan')
condition_report = Transition(label='Condition Report')
legal_review = Transition(label='Legal Review')
risk_analysis = Transition(label='Risk Analysis')
seller_negotiation = Transition(label='Seller Negotiation')
documentation = Transition(label='Documentation')
archival_entry = Transition(label='Archival Entry')
committee_review = Transition(label='Committee Review')
final_approval = Transition(label='Final Approval')
acquisition_setup = Transition(label='Acquisition Setup')
exhibit_planning = Transition(label='Exhibit Planning')

skip = SilentTransition()

provenance_xor = OperatorPOWL(operator=Operator.XOR, children=[provenance_check, skip])
material_xor = OperatorPOWL(operator=Operator.XOR, children=[material_testing, skip])
expert_xor = OperatorPOWL(operator=Operator.XOR, children=[expert_survey, skip])
digital_xor = OperatorPOWL(operator=Operator.XOR, children=[digital_scan, skip])
condition_xor = OperatorPOWL(operator=Operator.XOR, children=[condition_report, skip])
legal_xor = OperatorPOWL(operator=Operator.XOR, children=[legal_review, skip])
risk_xor = OperatorPOWL(operator=Operator.XOR, children=[risk_analysis, skip])
seller_xor = OperatorPOWL(operator=Operator.XOR, children=[seller_negotiation, skip])
documentation_xor = OperatorPOWL(operator=Operator.XOR, children=[documentation, skip])
archival_entry_xor = OperatorPOWL(operator=Operator.XOR, children=[archival_entry, skip])
committee_review_xor = OperatorPOWL(operator=Operator.XOR, children=[committee_review, skip])
final_approval_xor = OperatorPOWL(operator=Operator.XOR, children=[final_approval, skip])
acquisition_setup_xor = OperatorPOWL(operator=Operator.XOR, children=[acquisition_setup, skip])
exhibit_planning_xor = OperatorPOWL(operator=Operator.XOR, children=[exhibit_planning, skip])

root = StrictPartialOrder(nodes=[initial_review, provenance_xor, material_xor, expert_xor, digital_xor, condition_xor, legal_xor, risk_xor, seller_xor, documentation_xor, archival_entry_xor, committee_review_xor, final_approval_xor, acquisition_setup_xor, exhibit_planning_xor])
root.order.add_edge(initial_review, provenance_xor)
root.order.add_edge(initial_review, material_xor)
root.order.add_edge(initial_review, expert_xor)
root.order.add_edge(initial_review, digital_xor)
root.order.add_edge(initial_review, condition_xor)
root.order.add_edge(initial_review, legal_xor)
root.order.add_edge(initial_review, risk_xor)
root.order.add_edge(initial_review, seller_xor)
root.order.add_edge(initial_review, documentation_xor)
root.order.add_edge(initial_review, archival_entry_xor)
root.order.add_edge(initial_review, committee_review_xor)
root.order.add_edge(initial_review, final_approval_xor)
root.order.add_edge(initial_review, acquisition_setup_xor)
root.order.add_edge(initial_review, exhibit_planning_xor)