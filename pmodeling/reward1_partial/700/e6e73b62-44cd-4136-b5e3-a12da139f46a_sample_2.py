import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
design_layout = Transition(label='Design Layout')
procure_modules = Transition(label='Procure Modules')
install_framework = Transition(label='Install Framework')
setup_sensors = Transition(label='Setup Sensors')
calibrate_nutrients = Transition(label='Calibrate Nutrients')
configure_iot = Transition(label='Configure IoT')
plant_seeding = Transition(label='Plant Seeding')
monitor_growth = Transition(label='Monitor Growth')
manage_lighting = Transition(label='Manage Lighting')
pest_control = Transition(label='Pest Control')
recycle_waste = Transition(label='Recycle Waste')
analyze_data = Transition(label='Analyze Data')
adjust_environment = Transition(label='Adjust Environment')
harvest_crops = Transition(label='Harvest Crops')
distribute_produce = Transition(label='Distribute Produce')

skip = SilentTransition()

# Define the process workflow
site_survey_to_design_layout = OperatorPOWL(operator=Operator.XOR, children=[site_survey, design_layout])
design_layout_to_procure_modules = OperatorPOWL(operator=Operator.XOR, children=[design_layout, procure_modules])
procure_modules_to_install_framework = OperatorPOWL(operator=Operator.XOR, children=[procure_modules, install_framework])
install_framework_to_setup_sensors = OperatorPOWL(operator=Operator.XOR, children=[install_framework, setup_sensors])
setup_sensors_to_calibrate_nutrients = OperatorPOWL(operator=Operator.XOR, children=[setup_sensors, calibrate_nutrients])
calibrate_nutrients_to_configure_iot = OperatorPOWL(operator=Operator.XOR, children=[calibrate_nutrients, configure_iot])
configure_iot_to_plant_seeding = OperatorPOWL(operator=Operator.XOR, children=[configure_iot, plant_seeding])
plant_seeding_to_monitor_growth = OperatorPOWL(operator=Operator.XOR, children=[plant_seeding, monitor_growth])
monitor_growth_to_manage_lighting = OperatorPOWL(operator=Operator.XOR, children=[monitor_growth, manage_lighting])
manage_lighting_to_pest_control = OperatorPOWL(operator=Operator.XOR, children=[manage_lighting, pest_control])
pest_control_to_recycle_waste = OperatorPOWL(operator=Operator.XOR, children=[pest_control, recycle_waste])
recycle_waste_to_analyze_data = OperatorPOWL(operator=Operator.XOR, children=[recycle_waste, analyze_data])
analyze_data_to_adjust_environment = OperatorPOWL(operator=Operator.XOR, children=[analyze_data, adjust_environment])
adjust_environment_to_harvest_crops = OperatorPOWL(operator=Operator.XOR, children=[adjust_environment, harvest_crops])
harvest_crops_to_distribute_produce = OperatorPOWL(operator=Operator.XOR, children=[harvest_crops, distribute_produce])

root = StrictPartialOrder(nodes=[site_survey_to_design_layout, design_layout_to_procure_modules, procure_modules_to_install_framework, install_framework_to_setup_sensors, setup_sensors_to_calibrate_nutrients, calibrate_nutrients_to_configure_iot, configure_iot_to_plant_seeding, plant_seeding_to_monitor_growth, monitor_growth_to_manage_lighting, manage_lighting_to_pest_control, pest_control_to_recycle_waste, recycle_waste_to_analyze_data, analyze_data_to_adjust_environment, adjust_environment_to_harvest_crops, harvest_crops_to_distribute_produce])
root.order.add_edge(site_survey_to_design_layout, design_layout_to_procure_modules)
root.order.add_edge(design_layout_to_procure_modules, procure_modules_to_install_framework)
root.order.add_edge(procure_modules_to_install_framework, install_framework_to_setup_sensors)
root.order.add_edge(install_framework_to_setup_sensors, setup_sensors_to_calibrate_nutrients)
root.order.add_edge(setup_sensors_to_calibrate_nutrients, calibrate_nutrients_to_configure_iot)
root.order.add_edge(calibrate_nutrients_to_configure_iot, configure_iot_to_plant_seeding)
root.order.add_edge(configure_iot_to_plant_seeding, plant_seeding_to_monitor_growth)
root.order.add_edge(plant_seeding_to_monitor_growth, monitor_growth_to_manage_lighting)
root.order.add_edge(monitor_growth_to_manage_lighting, manage_lighting_to_pest_control)
root.order.add_edge(manage_lighting_to_pest_control, pest_control_to_recycle_waste)
root.order.add_edge(pest_control_to_recycle_waste, recycle_waste_to_analyze_data)
root.order.add_edge(recycle_waste_to_analyze_data, analyze_data_to_adjust_environment)
root.order.add_edge(analyze_data_to_adjust_environment, adjust_environment_to_harvest_crops)
root.order.add_edge(adjust_environment_to_harvest_crops, harvest_crops_to_distribute_produce)