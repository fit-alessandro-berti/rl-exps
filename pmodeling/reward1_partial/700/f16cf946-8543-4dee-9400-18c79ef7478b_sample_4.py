import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
climate_study = Transition(label='Climate Study')
system_design = Transition(label='System Design')
seed_selection = Transition(label='Seed Selection')
unit_install = Transition(label='Unit Install')
sensor_setup = Transition(label='Sensor Setup')
nutrient_mix = Transition(label='Nutrient Mix')
energy_audit = Transition(label='Energy Audit')
pest_control = Transition(label='Pest Control')
crop_plan = Transition(label='Crop Plan')
quality_check = Transition(label='Quality Check')
yield_forecast = Transition(label='Yield Forecast')
supply_sync = Transition(label='Supply Sync')
staff_train = Transition(label='Staff Train')
data_review = Transition(label='Data Review')

skip = SilentTransition()

site_survey_to_climate_study = OperatorPOWL(operator=Operator.XOR, children=[site_survey, climate_study])
climate_study_to_system_design = OperatorPOWL(operator=Operator.XOR, children=[climate_study, system_design])
system_design_to_seed_selection = OperatorPOWL(operator=Operator.XOR, children=[system_design, seed_selection])
seed_selection_to_unit_install = OperatorPOWL(operator=Operator.XOR, children=[seed_selection, unit_install])
unit_install_to_sensor_setup = OperatorPOWL(operator=Operator.XOR, children=[unit_install, sensor_setup])
sensor_setup_to_nutrient_mix = OperatorPOWL(operator=Operator.XOR, children=[sensor_setup, nutrient_mix])
nutrient_mix_to_energy_audit = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, energy_audit])
energy_audit_to_pest_control = OperatorPOWL(operator=Operator.XOR, children=[energy_audit, pest_control])
pest_control_to_crop_plan = OperatorPOWL(operator=Operator.XOR, children=[pest_control, crop_plan])
crop_plan_to_quality_check = OperatorPOWL(operator=Operator.XOR, children=[crop_plan, quality_check])
quality_check_to_yield_forecast = OperatorPOWL(operator=Operator.XOR, children=[quality_check, yield_forecast])
yield_forecast_to_supply_sync = OperatorPOWL(operator=Operator.XOR, children=[yield_forecast, supply_sync])
supply_sync_to_staff_train = OperatorPOWL(operator=Operator.XOR, children=[supply_sync, staff_train])
staff_train_to_data_review = OperatorPOWL(operator=Operator.XOR, children=[staff_train, data_review])

root = StrictPartialOrder(nodes=[site_survey, climate_study, system_design, seed_selection, unit_install, sensor_setup, nutrient_mix, energy_audit, pest_control, crop_plan, quality_check, yield_forecast, supply_sync, staff_train, data_review])
root.order.add_edge(site_survey, climate_study)
root.order.add_edge(climate_study, system_design)
root.order.add_edge(system_design, seed_selection)
root.order.add_edge(seed_selection, unit_install)
root.order.add_edge(unit_install, sensor_setup)
root.order.add_edge(sensor_setup, nutrient_mix)
root.order.add_edge(nutrient_mix, energy_audit)
root.order.add_edge(energy_audit, pest_control)
root.order.add_edge(pest_control, crop_plan)
root.order.add_edge(crop_plan, quality_check)
root.order.add_edge(quality_check, yield_forecast)
root.order.add_edge(yield_forecast, supply_sync)
root.order.add_edge(supply_sync, staff_train)
root.order.add_edge(staff_train, data_review)