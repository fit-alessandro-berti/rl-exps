import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define the POWL model
SiteSurvey = Transition(label='Site Survey')
DesignLayout = Transition(label='Design Layout')
LegalReview = Transition(label='Legal Review')
TechSourcing = Transition(label='Tech Sourcing')
StructuralBuild = Transition(label='Structural Build')
ClimateSetup = Transition(label='Climate Setup')
IrrigationInstall = Transition(label='Irrigation Install')
SensorDeploy = Transition(label='Sensor Deploy')
CropSelect = Transition(label='Crop Select')
NutrientPrep = Transition(label='Nutrient Prep')
WasteSystem = Transition(label='Waste System')
AutomationConfig = Transition(label='Automation Config')
TrialGrowth = Transition(label='Trial Growth')
DataAnalysis = Transition(label='Data Analysis')
QualityAudit = Transition(label='Quality Audit')
StakeholderMeet = Transition(label='Stakeholder Meet')
ComplianceCheck = Transition(label='Compliance Check')

skip = SilentTransition()

site_survey = OperatorPOWL(operator=Operator.XOR, children=[SiteSurvey, skip])
design_layout = OperatorPOWL(operator=Operator.XOR, children=[DesignLayout, skip])
legal_review = OperatorPOWL(operator=Operator.XOR, children=[LegalReview, skip])
tech_sourcing = OperatorPOWL(operator=Operator.XOR, children=[TechSourcing, skip])
structural_build = OperatorPOWL(operator=Operator.XOR, children=[StructuralBuild, skip])
climate_setup = OperatorPOWL(operator=Operator.XOR, children=[ClimateSetup, skip])
irrigation_install = OperatorPOWL(operator=Operator.XOR, children=[IrrigationInstall, skip])
sensor_deploy = OperatorPOWL(operator=Operator.XOR, children=[SensorDeploy, skip])
crop_select = OperatorPOWL(operator=Operator.XOR, children=[CropSelect, skip])
nutrient_prep = OperatorPOWL(operator=Operator.XOR, children=[NutrientPrep, skip])
waste_system = OperatorPOWL(operator=Operator.XOR, children=[WasteSystem, skip])
automation_config = OperatorPOWL(operator=Operator.XOR, children=[AutomationConfig, skip])
trial_growth = OperatorPOWL(operator=Operator.XOR, children=[TrialGrowth, skip])
data_analysis = OperatorPOWL(operator=Operator.XOR, children=[DataAnalysis, skip])
quality_audit = OperatorPOWL(operator=Operator.XOR, children=[QualityAudit, skip])
stakeholder_meet = OperatorPOWL(operator=Operator.XOR, children=[StakeholderMeet, skip])
compliance_check = OperatorPOWL(operator=Operator.XOR, children=[ComplianceCheck, skip])

root = StrictPartialOrder(nodes=[site_survey, design_layout, legal_review, tech_sourcing, structural_build, climate_setup, irrigation_install, sensor_deploy, crop_select, nutrient_prep, waste_system, automation_config, trial_growth, data_analysis, quality_audit, stakeholder_meet, compliance_check])
root.order.add_edge(site_survey, design_layout)
root.order.add_edge(site_survey, legal_review)
root.order.add_edge(design_layout, tech_sourcing)
root.order.add_edge(design_layout, structural_build)
root.order.add_edge(legal_review, tech_sourcing)
root.order.add_edge(legal_review, structural_build)
root.order.add_edge(tech_sourcing, climate_setup)
root.order.add_edge(tech_sourcing, irrigation_install)
root.order.add_edge(structural_build, climate_setup)
root.order.add_edge(structural_build, irrigation_install)
root.order.add_edge(climate_setup, sensor_deploy)
root.order.add_edge(irrigation_install, sensor_deploy)
root.order.add_edge(sensor_deploy, crop_select)
root.order.add_edge(crop_select, nutrient_prep)
root.order.add_edge(nutrient_prep, waste_system)
root.order.add_edge(waste_system, automation_config)
root.order.add_edge(automation_config, trial_growth)
root.order.add_edge(trial_growth, data_analysis)
root.order.add_edge(data_analysis, quality_audit)
root.order.add_edge(quality_audit, stakeholder_meet)
root.order.add_edge(stakeholder_meet, compliance_check)

# Print the POWL model
print(root)