import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
rack_design = Transition(label='Rack Design')
system_setup = Transition(label='System Setup')
climate_calibrate = Transition(label='Climate Calibrate')
nutrient_prep = Transition(label='Nutrient Prep')
crop_select = Transition(label='Crop Select')
seed_germinate = Transition(label='Seed Germinate')
sensor_deploy = Transition(label='Sensor Deploy')
pest_control = Transition(label='Pest Control')
harvest_automate = Transition(label='Harvest Automate')
quality_check = Transition(label='Quality Check')
pack_produce = Transition(label='Pack Produce')
data_analyze = Transition(label='Data Analyze')
engage_community = Transition(label='Engage Community')
logistics_plan = Transition(label='Logistics Plan')

skip = SilentTransition()
xor1 = OperatorPOWL(operator=Operator.XOR, children=[pest_control, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[harvest_automate, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[quality_check, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[pack_produce, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[logistics_plan, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[engage_community, skip])
loop1 = OperatorPOWL(operator=Operator.LOOP, children=[sensor_deploy, xor1])
loop2 = OperatorPOWL(operator=Operator.LOOP, children=[data_analyze, xor2])
loop3 = OperatorPOWL(operator=Operator.LOOP, children=[engage_community, xor3])
loop4 = OperatorPOWL(operator=Operator.LOOP, children=[logistics_plan, xor4])
loop5 = OperatorPOWL(operator=Operator.LOOP, children=[pack_produce, xor5])
loop6 = OperatorPOWL(operator=Operator.LOOP, children=[quality_check, xor6])

root = StrictPartialOrder(nodes=[site_survey, rack_design, system_setup, climate_calibrate, nutrient_prep, crop_select, seed_germinate, loop1, loop2, loop3, loop4, loop5, loop6, xor1, xor2, xor3, xor4, xor5, xor6])
root.order.add_edge(site_survey, rack_design)
root.order.add_edge(rack_design, system_setup)
root.order.add_edge(system_setup, climate_calibrate)
root.order.add_edge(climate_calibrate, nutrient_prep)
root.order.add_edge(nutrient_prep, crop_select)
root.order.add_edge(crop_select, seed_germinate)
root.order.add_edge(seed_germinate, loop1)
root.order.add_edge(loop1, xor1)
root.order.add_edge(xor1, pest_control)
root.order.add_edge(pest_control, loop2)
root.order.add_edge(loop2, data_analyze)
root.order.add_edge(data_analyze, loop3)
root.order.add_edge(loop3, engage_community)
root.order.add_edge(engage_community, loop4)
root.order.add_edge(loop4, logistics_plan)
root.order.add_edge(logistics_plan, loop5)
root.order.add_edge(loop5, pack_produce)
root.order.add_edge(pack_produce, loop6)
root.order.add_edge(loop6, quality_check)
root.order.add_edge(quality_check, xor6)