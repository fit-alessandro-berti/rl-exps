import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_analyze = Transition(label='Site Analyze')
soil_enhance = Transition(label='Soil Enhance')
seed_select = Transition(label='Seed Select')
plant_precise = Transition(label='Plant Precise')
sensor_deploy = Transition(label='Sensor Deploy')
climate_monitor = Transition(label='Climate Monitor')
irrigate_adjust = Transition(label='Irrigate Adjust')
nutrient_feed = Transition(label='Nutrient Feed')
pest_control = Transition(label='Pest Control')
community_engage = Transition(label='Community Engage')
feedback_collect = Transition(label='Feedback Collect')
yield_harvest = Transition(label='Yield Harvest')
waste_sort = Transition(label='Waste Sort')
compost_create = Transition(label='Compost Create')
data_analyze = Transition(label='Data Analyze')
network_distribute = Transition(label='Network Distribute')

skip = SilentTransition()

site_analyze_to_soil_enhance = OperatorPOWL(operator=Operator.XOR, children=[soil_enhance, skip])
soil_enhance_to_sensor_deploy = OperatorPOWL(operator=Operator.XOR, children=[sensor_deploy, skip])
sensor_deploy_to_climate_monitor = OperatorPOWL(operator=Operator.XOR, children=[climate_monitor, skip])
climate_monitor_to_irrigate_adjust = OperatorPOWL(operator=Operator.XOR, children=[irrigate_adjust, skip])
irrigate_adjust_to_nutrient_feed = OperatorPOWL(operator=Operator.XOR, children=[nutrient_feed, skip])
nutrient_feed_to_pest_control = OperatorPOWL(operator=Operator.XOR, children=[pest_control, skip])
pest_control_to_community_engage = OperatorPOWL(operator=Operator.XOR, children=[community_engage, skip])
community_engage_to_feedback_collect = OperatorPOWL(operator=Operator.XOR, children=[feedback_collect, skip])
feedback_collect_to_yield_harvest = OperatorPOWL(operator=Operator.XOR, children=[yield_harvest, skip])
yield_harvest_to_waste_sort = OperatorPOWL(operator=Operator.XOR, children=[waste_sort, skip])
waste_sort_to_compost_create = OperatorPOWL(operator=Operator.XOR, children=[compost_create, skip])
compost_create_to_data_analyze = OperatorPOWL(operator=Operator.XOR, children=[data_analyze, skip])
data_analyze_to_network_distribute = OperatorPOWL(operator=Operator.XOR, children=[network_distribute, skip])

root = StrictPartialOrder(nodes=[site_analyze, soil_enhance, seed_select, plant_precise, sensor_deploy, climate_monitor, irrigate_adjust, nutrient_feed, pest_control, community_engage, feedback_collect, yield_harvest, waste_sort, compost_create, data_analyze, network_distribute])

root.order.add_edge(site_analyze, soil_enhance)
root.order.add_edge(soil_enhance, sensor_deploy)
root.order.add_edge(sensor_deploy, climate_monitor)
root.order.add_edge(climate_monitor, irrigate_adjust)
root.order.add_edge(irrigate_adjust, nutrient_feed)
root.order.add_edge(nutrient_feed, pest_control)
root.order.add_edge(pest_control, community_engage)
root.order.add_edge(community_engage, feedback_collect)
root.order.add_edge(feedback_collect, yield_harvest)
root.order.add_edge(yield_harvest, waste_sort)
root.order.add_edge(waste_sort, compost_create)
root.order.add_edge(compost_create, data_analyze)
root.order.add_edge(data_analyze, network_distribute)