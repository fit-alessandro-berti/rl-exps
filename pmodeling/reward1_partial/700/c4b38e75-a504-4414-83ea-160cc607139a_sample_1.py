import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
design_modules = Transition(label='Design Modules')
install_sensors = Transition(label='Install Sensors')
calibrate_climate = Transition(label='Calibrate Climate')
select_seeds = Transition(label='Select Seeds')
optimize_nutrients = Transition(label='Optimize Nutrients')
deploy_robots = Transition(label='Deploy Robots')
monitor_growth = Transition(label='Monitor Growth')
detect_pests = Transition(label='Detect Pests')
analyze_data = Transition(label='Analyze Data')
harvest_crops = Transition(label='Harvest Crops')
customize_pack = Transition(label='Customize Pack')
recycle_waste = Transition(label='Recycle Waste')
audit_energy = Transition(label='Audit Energy')
align_demand = Transition(label='Align Demand')

skip = SilentTransition()

site_survey_loop = OperatorPOWL(operator=Operator.LOOP, children=[site_survey, design_modules, install_sensors, calibrate_climate])
seed_selection = OperatorPOWL(operator=Operator.XOR, children=[select_seeds, skip])
nutrient_optimization = OperatorPOWL(operator=Operator.XOR, children=[optimize_nutrients, skip])
robot_deployment = OperatorPOWL(operator=Operator.XOR, children=[deploy_robots, skip])
growth_monitoring = OperatorPOWL(operator=Operator.XOR, children=[monitor_growth, skip])
pest_detection = OperatorPOWL(operator=Operator.XOR, children=[detect_pests, skip])
data_analysis = OperatorPOWL(operator=Operator.XOR, children=[analyze_data, skip])
crop_harvesting = OperatorPOWL(operator=Operator.XOR, children=[harvest_crops, skip])
packaging_customization = OperatorPOWL(operator=Operator.XOR, children=[customize_pack, skip])
waste_recycling = OperatorPOWL(operator=Operator.XOR, children=[recycle_waste, skip])
energy_auditing = OperatorPOWL(operator=Operator.XOR, children=[audit_energy, skip])
market_alignment = OperatorPOWL(operator=Operator.XOR, children=[align_demand, skip])

root = StrictPartialOrder(nodes=[site_survey_loop, seed_selection, nutrient_optimization, robot_deployment, growth_monitoring, pest_detection, data_analysis, crop_harvesting, packaging_customization, waste_recycling, energy_auditing, market_alignment])
root.order.add_edge(site_survey_loop, seed_selection)
root.order.add_edge(site_survey_loop, nutrient_optimization)
root.order.add_edge(site_survey_loop, robot_deployment)
root.order.add_edge(site_survey_loop, growth_monitoring)
root.order.add_edge(site_survey_loop, pest_detection)
root.order.add_edge(site_survey_loop, data_analysis)
root.order.add_edge(site_survey_loop, crop_harvesting)
root.order.add_edge(site_survey_loop, packaging_customization)
root.order.add_edge(site_survey_loop, waste_recycling)
root.order.add_edge(site_survey_loop, energy_auditing)
root.order.add_edge(site_survey_loop, market_alignment)