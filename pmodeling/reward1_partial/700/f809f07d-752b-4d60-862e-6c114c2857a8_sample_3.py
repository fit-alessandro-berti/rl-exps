import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

provenance_check = Transition(label='Provenance Check')
material_test = Transition(label='Material Test')
archive_search = Transition(label='Archive Search')
expert_review = Transition(label='Expert Review')
three_d_scanning = Transition(label='3D Scanning')
wear_analysis = Transition(label='Wear Analysis')
database_cross = Transition(label='Database Cross')
law_consult = Transition(label='Law Consult')
forgery_detect = Transition(label='Forgery Detect')
certification = Transition(label='Certification')
document_prep = Transition(label='Document Prep')
client_brief = Transition(label='Client Brief')
secure_storage = Transition(label='Secure Storage')
risk_assessment = Transition(label='Risk Assessment')
final_approval = Transition(label='Final Approval')

skip = SilentTransition()
xor1 = OperatorPOWL(operator=Operator.XOR, children=[material_test, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[expert_review, archive_search])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[law_consult, database_cross])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[forge_detect, document_prep])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[client_brief, secure_storage])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[risk_assessment, final_approval])

root = StrictPartialOrder(nodes=[provenance_check, xor1, xor2, xor3, xor4, xor5, xor6])
root.order.add_edge(provenance_check, xor1)
root.order.add_edge(provenance_check, xor2)
root.order.add_edge(provenance_check, xor3)
root.order.add_edge(provenance_check, xor4)
root.order.add_edge(provenance_check, xor5)
root.order.add_edge(provenance_check, xor6)