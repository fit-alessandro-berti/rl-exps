import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

initial_inspect = Transition(label='Initial Inspect')
material_test = Transition(label='Material Test')
imaging_scan = Transition(label='Imaging Scan')
historical_check = Transition(label='Historical Check')
expert_consult = Transition(label='Expert Consult')
provenance_trace = Transition(label='Provenance Trace')
forgery_detect = Transition(label='Forgery Detect')
restoration_map = Transition(label='Restoration Map')
market_analyze = Transition(label='Market Analyze')
auction_review = Transition(label='Auction Review')
value_assess = Transition(label='Value Assess')
report_draft = Transition(label='Report Draft')
board_review = Transition(label='Board Review')
certification = Transition(label='Certification')
release_artifact = Transition(label='Release Artifact')
chain_custody = Transition(label='Chain Custody')

# Define the process tree structure
initial_inspect_child = OperatorPOWL(operator=Operator.XOR, children=[material_test, imaging_scan])
historical_check_child = OperatorPOWL(operator=Operator.XOR, children=[expert_consult, provenance_trace])
market_analyze_child = OperatorPOWL(operator=Operator.XOR, children=[auction_review, value_assess])
board_review_child = OperatorPOWL(operator=Operator.XOR, children=[certification, chain_custody])

root = StrictPartialOrder(nodes=[initial_inspect, material_test, imaging_scan, historical_check, expert_consult, provenance_trace, forgery_detect, restoration_map, market_analyze, auction_review, value_assess, report_draft, board_review, certification, release_artifact, chain_custody])
root.order.add_edge(initial_inspect, initial_inspect_child)
root.order.add_edge(material_test, initial_inspect_child)
root.order.add_edge(imaging_scan, initial_inspect_child)
root.order.add_edge(historical_check, historical_check_child)
root.order.add_edge(expert_consult, historical_check_child)
root.order.add_edge(provenance_trace, historical_check_child)
root.order.add_edge(forgery_detect, initial_inspect_child)
root.order.add_edge(restoration_map, initial_inspect_child)
root.order.add_edge(market_analyze, market_analyze_child)
root.order.add_edge(auction_review, market_analyze_child)
root.order.add_edge(value_assess, market_analyze_child)
root.order.add_edge(report_draft, board_review)
root.order.add_edge(board_review, board_review_child)
root.order.add_edge(certification, board_review_child)
root.order.add_edge(chain_custody, board_review_child)
root.order.add_edge(release_artifact, certification)