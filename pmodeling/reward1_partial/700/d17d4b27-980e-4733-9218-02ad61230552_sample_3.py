import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_analysis = Transition(label='Site Analysis')
zoning_review = Transition(label='Zoning Review')
modular_design = Transition(label='Modular Design')
climate_setup = Transition(label='Climate Setup')
nutrient_mix = Transition(label='Nutrient Mix')
seed_selection = Transition(label='Seed Selection')
ai_monitoring = Transition(label='AI Monitoring')
lighting_control = Transition(label='Lighting Control')
energy_audit = Transition(label='Energy Audit')
water_reclaim = Transition(label='Water Reclaim')
waste_sorting = Transition(label='Waste Sorting')
community_meet = Transition(label='Community Meet')
staff_training = Transition(label='Staff Training')
yield_forecast = Transition(label='Yield Forecast')
market_sync = Transition(label='Market Sync')
supply_chain = Transition(label='Supply Chain')

skip = SilentTransition()

xor1 = OperatorPOWL(operator=Operator.XOR, children=[site_analysis, zoning_review])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[modular_design, climate_setup])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, seed_selection])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[ai_monitoring, lighting_control])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[energy_audit, water_reclaim])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[waste_sorting, community_meet])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[staff_training, yield_forecast])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[market_sync, supply_chain])

root = StrictPartialOrder(nodes=[xor1, xor2, xor3, xor4, xor5, xor6, xor7, xor8])
root.order.add_edge(xor1, xor2)
root.order.add_edge(xor1, xor3)
root.order.add_edge(xor2, xor4)
root.order.add_edge(xor2, xor5)
root.order.add_edge(xor3, xor6)
root.order.add_edge(xor3, xor7)
root.order.add_edge(xor4, xor8)
root.order.add_edge(xor5, xor8)
root.order.add_edge(xor6, xor8)
root.order.add_edge(xor7, xor8)