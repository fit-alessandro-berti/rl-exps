import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_analysis = Transition(label='Site Analysis')
structure_check = Transition(label='Structure Check')
climate_setup = Transition(label='Climate Setup')
hydroponics_install = Transition(label='Hydroponics Install')
nutrient_mix = Transition(label='Nutrient Mix')
seed_select = Transition(label='Seed Select')
light_schedule = Transition(label='Light Schedule')
irrigation_plan = Transition(label='Irrigation Plan')
health_monitor = Transition(label='Health Monitor')
pest_control = Transition(label='Pest Control')
robotic_harvest = Transition(label='Robotic Harvest')
clean_packaging = Transition(label='Clean Packaging')
distribution_plan = Transition(label='Distribution Plan')
data_collection = Transition(label='Data Collection')
cycle_feedback = Transition(label='Cycle Feedback')

skip = SilentTransition()

site_analysis_to_structure_check = OperatorPOWL(operator=Operator.XOR, children=[site_analysis, structure_check])
structure_check_to_climate_setup = OperatorPOWL(operator=Operator.XOR, children=[structure_check, climate_setup])
climate_setup_to_hydroponics_install = OperatorPOWL(operator=Operator.XOR, children=[climate_setup, hydroponics_install])
hydroponics_install_to_nutrient_mix = OperatorPOWL(operator=Operator.XOR, children=[hydroponics_install, nutrient_mix])
nutrient_mix_to_seed_select = OperatorPOWL(operator=Operator.XOR, children=[nutrient_mix, seed_select])
seed_select_to_light_schedule = OperatorPOWL(operator=Operator.XOR, children=[seed_select, light_schedule])
light_schedule_to_irrigation_plan = OperatorPOWL(operator=Operator.XOR, children=[light_schedule, irrigation_plan])
irrigation_plan_to_health_monitor = OperatorPOWL(operator=Operator.XOR, children=[irrigation_plan, health_monitor])
health_monitor_to_pest_control = OperatorPOWL(operator=Operator.XOR, children=[health_monitor, pest_control])
pest_control_to_robotic_harvest = OperatorPOWL(operator=Operator.XOR, children=[pest_control, robotic_harvest])
robotic_harvest_to_clean_packaging = OperatorPOWL(operator=Operator.XOR, children=[robotic_harvest, clean_packaging])
clean_packaging_to_distribution_plan = OperatorPOWL(operator=Operator.XOR, children=[clean_packaging, distribution_plan])
distribution_plan_to_data_collection = OperatorPOWL(operator=Operator.XOR, children=[distribution_plan, data_collection])
data_collection_to_cycle_feedback = OperatorPOWL(operator=Operator.XOR, children=[data_collection, cycle_feedback])

root = StrictPartialOrder(nodes=[site_analysis_to_structure_check, structure_check_to_climate_setup, climate_setup_to_hydroponics_install, hydroponics_install_to_nutrient_mix, nutrient_mix_to_seed_select, seed_select_to_light_schedule, light_schedule_to_irrigation_plan, irrigation_plan_to_health_monitor, health_monitor_to_pest_control, pest_control_to_robotic_harvest, robotic_harvest_to_clean_packaging, clean_packaging_to_distribution_plan, distribution_plan_to_data_collection, data_collection_to_cycle_feedback])
root.order.add_edge(site_analysis_to_structure_check, structure_check_to_climate_setup)
root.order.add_edge(structure_check_to_climate_setup, climate_setup_to_hydroponics_install)
root.order.add_edge(climate_setup_to_hydroponics_install, hydroponics_install_to_nutrient_mix)
root.order.add_edge(hydroponics_install_to_nutrient_mix, nutrient_mix_to_seed_select)
root.order.add_edge(nutrient_mix_to_seed_select, seed_select_to_light_schedule)
root.order.add_edge(seed_select_to_light_schedule, light_schedule_to_irrigation_plan)
root.order.add_edge(light_schedule_to_irrigation_plan, irrigation_plan_to_health_monitor)
root.order.add_edge(irrigation_plan_to_health_monitor, health_monitor_to_pest_control)
root.order.add_edge(health_monitor_to_pest_control, pest_control_to_robotic_harvest)
root.order.add_edge(pest_control_to_robotic_harvest, robotic_harvest_to_clean_packaging)
root.order.add_edge(robotic_harvest_to_clean_packaging, clean_packaging_to_distribution_plan)
root.order.add_edge(clean_packaging_to_distribution_plan, distribution_plan_to_data_collection)
root.order.add_edge(distribution_plan_to_data_collection, data_collection_to_cycle_feedback)