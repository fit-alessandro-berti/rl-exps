import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_select = Transition(label='Site Select')
design_layout = Transition(label='Design Layout')
sensor_integrate = Transition(label='Sensor Integrate')
crop_choose = Transition(label='Crop Choose')
soil_prepare = Transition(label='Soil Prepare')
irrigation_setup = Transition(label='Irrigation Setup')
pest_control = Transition(label='Pest Control')
lighting_install = Transition(label='Lighting Install')
staff_train = Transition(label='Staff Train')
compliance_check = Transition(label='Compliance Check')
market_analyze = Transition(label='Market Analyze')
package_design = Transition(label='Package Design')
logistics_plan = Transition(label='Logistics Plan')
data_analyze = Transition(label='Data Analyze')
feedback_loop = Transition(label='Feedback Loop')

site_select_choice = OperatorPOWL(operator=Operator.XOR, children=[site_select, design_layout])
design_layout_choice = OperatorPOWL(operator=Operator.XOR, children=[sensor_integrate, crop_choose])
crop_choose_choice = OperatorPOWL(operator=Operator.XOR, children=[soil_prepare, irrigation_setup])
soil_prepare_choice = OperatorPOWL(operator=Operator.XOR, children=[pest_control, lighting_install])
pest_control_choice = OperatorPOWL(operator=Operator.XOR, children=[staff_train, compliance_check])
lighting_install_choice = OperatorPOWL(operator=Operator.XOR, children=[market_analyze, package_design])
market_analyze_choice = OperatorPOWL(operator=Operator.XOR, children=[logistics_plan, data_analyze])
package_design_choice = OperatorPOWL(operator=Operator.XOR, children=[feedback_loop, site_select_choice])

root = StrictPartialOrder(nodes=[site_select_choice, design_layout_choice, crop_choose_choice, soil_prepare_choice, pest_control_choice, lighting_install_choice, market_analyze_choice, package_design_choice])
root.order.add_edge(site_select_choice, design_layout_choice)
root.order.add_edge(design_layout_choice, sensor_integrate)
root.order.add_edge(sensor_integrate, crop_choose)
root.order.add_edge(crop_choose, soil_prepare)
root.order.add_edge(soil_prepare, pest_control)
root.order.add_edge(pest_control, lighting_install)
root.order.add_edge(lighting_install, market_analyze)
root.order.add_edge(market_analyze, package_design)
root.order.add_edge(package_design, feedback_loop)
root.order.add_edge(feedback_loop, site_select_choice)