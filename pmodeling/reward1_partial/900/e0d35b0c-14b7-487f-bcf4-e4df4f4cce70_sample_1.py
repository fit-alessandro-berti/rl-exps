import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

site_survey = Transition(label='Site Survey')
structural_check = Transition(label='Structural Check')
resource_sourcing = Transition(label='Resource Sourcing')
system_install = Transition(label='System Install')
lighting_setup = Transition(label='Lighting Setup')
irrigation_setup = Transition(label='Irrigation Setup')
stakeholder_meet = Transition(label='Stakeholder Meet')
volunteer_train = Transition(label='Volunteer Train')
regulation_review = Transition(label='Regulation Review')
crop_selection = Transition(label='Crop Selection')
planting_phase = Transition(label='Planting Phase')
climate_control = Transition(label='Climate Control')
growth_monitor = Transition(label='Growth Monitor')
data_logging = Transition(label='Data Logging')
harvest_event = Transition(label='Harvest Event')
waste_manage = Transition(label='Waste Manage')
feedback_collect = Transition(label='Feedback Collect')

skip = SilentTransition()

site_survey_to_structural_check = OperatorPOWL(operator=Operator.XOR, children=[site_survey, structural_check])
structural_check_to_resource_sourcing = OperatorPOWL(operator=Operator.XOR, children=[structural_check, resource_sourcing])
resource_sourcing_to_system_install = OperatorPOWL(operator=Operator.XOR, children=[resource_sourcing, system_install])
system_install_to_lighting_setup = OperatorPOWL(operator=Operator.XOR, children=[system_install, lighting_setup])
lighting_setup_to_irrigation_setup = OperatorPOWL(operator=Operator.XOR, children=[lighting_setup, irrigation_setup])
irrigation_setup_to_stakeholder_meet = OperatorPOWL(operator=Operator.XOR, children=[irrigation_setup, stakeholder_meet])
stakeholder_meet_to_volunteer_train = OperatorPOWL(operator=Operator.XOR, children=[stakeholder_meet, volunteer_train])
volunteer_train_to_regulation_review = OperatorPOWL(operator=Operator.XOR, children=[volunteer_train, regulation_review])
regulation_review_to_crop_selection = OperatorPOWL(operator=Operator.XOR, children=[regulation_review, crop_selection])
crop_selection_to_planting_phase = OperatorPOWL(operator=Operator.XOR, children=[crop_selection, planting_phase])
planting_phase_to_climate_control = OperatorPOWL(operator=Operator.XOR, children=[planting_phase, climate_control])
climate_control_to_growth_monitor = OperatorPOWL(operator=Operator.XOR, children=[climate_control, growth_monitor])
growth_monitor_to_data_logging = OperatorPOWL(operator=Operator.XOR, children=[growth_monitor, data_logging])
data_logging_to_harvest_event = OperatorPOWL(operator=Operator.XOR, children=[data_logging, harvest_event])
harvest_event_to_waste_manage = OperatorPOWL(operator=Operator.XOR, children=[harvest_event, waste_manage])
waste_manage_to_feedback_collect = OperatorPOWL(operator=Operator.XOR, children=[waste_manage, feedback_collect])

root = StrictPartialOrder(nodes=[site_survey_to_structural_check, structural_check_to_resource_sourcing, resource_sourcing_to_system_install, system_install_to_lighting_setup, lighting_setup_to_irrigation_setup, irrigation_setup_to_stakeholder_meet, stakeholder_meet_to_volunteer_train, volunteer_train_to_regulation_review, regulation_review_to_crop_selection, crop_selection_to_planting_phase, planting_phase_to_climate_control, climate_control_to_growth_monitor, growth_monitor_to_data_logging, data_logging_to_harvest_event, harvest_event_to_waste_manage, waste_manage_to_feedback_collect])
root.order.add_edge(site_survey_to_structural_check, structural_check_to_resource_sourcing)
root.order.add_edge(structural_check_to_resource_sourcing, resource_sourcing_to_system_install)
root.order.add_edge(resource_sourcing_to_system_install, system_install_to_lighting_setup)
root.order.add_edge(system_install_to_lighting_setup, lighting_setup_to_irrigation_setup)
root.order.add_edge(lighting_setup_to_irrigation_setup, irrigation_setup_to_stakeholder_meet)
root.order.add_edge(irrigation_setup_to_stakeholder_meet, stakeholder_meet_to_volunteer_train)
root.order.add_edge(stakeholder_meet_to_volunteer_train, volunteer_train_to_regulation_review)
root.order.add_edge(volunteer_train_to_regulation_review, regulation_review_to_crop_selection)
root.order.add_edge(regulation_review_to_crop_selection, crop_selection_to_planting_phase)
root.order.add_edge(crop_selection_to_planting_phase, planting_phase_to_climate_control)
root.order.add_edge(planting_phase_to_climate_control, climate_control_to_growth_monitor)
root.order.add_edge(climate_control_to_growth_monitor, growth_monitor_to_data_logging)
root.order.add_edge(growth_monitor_to_data_logging, data_logging_to_harvest_event)
root.order.add_edge(data_logging_to_harvest_event, harvest_event_to_waste_manage)
root.order.add_edge(harvest_event_to_waste_manage, waste_manage_to_feedback_collect)