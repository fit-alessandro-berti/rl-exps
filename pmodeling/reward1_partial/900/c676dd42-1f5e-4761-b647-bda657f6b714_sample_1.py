from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define the activities
site_survey = Transition(label='Site Survey')
design_layout = Transition(label='Design Layout')
material_sourcing = Transition(label='Material Sourcing')
system_assembly = Transition(label='System Assembly')
sensor_install = Transition(label='Sensor Install')
nutrient_prep = Transition(label='Nutrient Prep')
water_testing = Transition(label='Water Testing')
climate_setup = Transition(label='Climate Setup')
data_integration = Transition(label='Data Integration')
growth_monitoring = Transition(label='Growth Monitoring')
pest_control = Transition(label='Pest Control')
waste_sorting = Transition(label='Waste Sorting')
harvest_plan = Transition(label='Harvest Plan')
produce_pack = Transition(label='Produce Pack')
energy_audit = Transition(label='Energy Audit')
community_setup = Transition(label='Community Setup')

# Define the process structure
site_survey_node = StrictPartialOrder(nodes=[site_survey])
design_layout_node = StrictPartialOrder(nodes=[design_layout])
material_sourcing_node = StrictPartialOrder(nodes=[material_sourcing])
system_assembly_node = StrictPartialOrder(nodes=[system_assembly])
sensor_install_node = StrictPartialOrder(nodes=[sensor_install])
nutrient_prep_node = StrictPartialOrder(nodes=[nutrient_prep])
water_testing_node = StrictPartialOrder(nodes=[water_testing])
climate_setup_node = StrictPartialOrder(nodes=[climate_setup])
data_integration_node = StrictPartialOrder(nodes=[data_integration])
growth_monitoring_node = StrictPartialOrder(nodes=[growth_monitoring])
pest_control_node = StrictPartialOrder(nodes=[pest_control])
waste_sorting_node = StrictPartialOrder(nodes=[waste_sorting])
harvest_plan_node = StrictPartialOrder(nodes=[harvest_plan])
produce_pack_node = StrictPartialOrder(nodes=[produce_pack])
energy_audit_node = StrictPartialOrder(nodes=[energy_audit])
community_setup_node = StrictPartialOrder(nodes=[community_setup])

# Define the dependencies
root = StrictPartialOrder(nodes=[site_survey_node, design_layout_node, material_sourcing_node, system_assembly_node, sensor_install_node, nutrient_prep_node, water_testing_node, climate_setup_node, data_integration_node, growth_monitoring_node, pest_control_node, waste_sorting_node, harvest_plan_node, produce_pack_node, energy_audit_node, community_setup_node])

root.order.add_edge(site_survey_node, design_layout_node)
root.order.add_edge(design_layout_node, material_sourcing_node)
root.order.add_edge(material_sourcing_node, system_assembly_node)
root.order.add_edge(system_assembly_node, sensor_install_node)
root.order.add_edge(sensor_install_node, nutrient_prep_node)
root.order.add_edge(nutrient_prep_node, water_testing_node)
root.order.add_edge(water_testing_node, climate_setup_node)
root.order.add_edge(climate_setup_node, data_integration_node)
root.order.add_edge(data_integration_node, growth_monitoring_node)
root.order.add_edge(growth_monitoring_node, pest_control_node)
root.order.add_edge(pest_control_node, waste_sorting_node)
root.order.add_edge(waste_sorting_node, harvest_plan_node)
root.order.add_edge(harvest_plan_node, produce_pack_node)
root.order.add_edge(produce_pack_node, energy_audit_node)
root.order.add_edge(energy_audit_node, community_setup_node)

print(root)