import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

milk_sourcing = Transition(label='Milk Sourcing')
quality_testing = Transition(label='Quality Testing')
milk_pasteurize = Transition(label='Milk Pasteurize')
curd_formation = Transition(label='Curd Formation')
whey_separation = Transition(label='Whey Separation')
press_cheese = Transition(label='Press Cheese')
salt_application = Transition(label='Salt Application')
controlled_aging = Transition(label='Controlled Aging')
sensory_check = Transition(label='Sensory Check')
batch_packaging = Transition(label='Batch Packaging')
label_printing = Transition(label='Label Printing')
cold_storage = Transition(label='Cold Storage')
logistics_plan = Transition(label='Logistics Plan')
retail_delivery = Transition(label='Retail Delivery')
feedback_review = Transition(label='Feedback Review')
demand_forecast = Transition(label='Demand Forecast')
provenance_track = Transition(label='Provenance Track')
skip = SilentTransition()

milk_process = OperatorPOWL(operator=Operator.XOR, children=[milk_sourcing, quality_testing])
curd_process = OperatorPOWL(operator=Operator.XOR, children=[milk_pasteurize, skip])
whey_process = OperatorPOWL(operator=Operator.XOR, children=[curd_formation, skip])
salt_process = OperatorPOWL(operator=Operator.XOR, children=[whey_separation, skip])
aging_process = OperatorPOWL(operator=Operator.XOR, children=[press_cheese, salt_application])
sensory_process = OperatorPOWL(operator=Operator.XOR, children=[controlled_aging, sensory_check])
packaging_process = OperatorPOWL(operator=Operator.XOR, children=[batch_packaging, sensory_check])
labeling_process = OperatorPOWL(operator=Operator.XOR, children=[label_printing, sensory_check])
storage_process = OperatorPOWL(operator=Operator.XOR, children=[cold_storage, sensory_check])
logistics_process = OperatorPOWL(operator=Operator.XOR, children=[logistics_plan, sensory_check])
delivery_process = OperatorPOWL(operator=Operator.XOR, children=[retail_delivery, sensory_check])
feedback_process = OperatorPOWL(operator=Operator.XOR, children=[feedback_review, sensory_check])
forecast_process = OperatorPOWL(operator=Operator.XOR, children=[demand_forecast, sensory_check])
provenance_process = OperatorPOWL(operator=Operator.XOR, children=[provenance_track, sensory_check])

root = StrictPartialOrder(nodes=[milk_process, curd_process, whey_process, salt_process, aging_process, sensory_process, packaging_process, labeling_process, storage_process, logistics_process, delivery_process, feedback_process, forecast_process, provenance_process])
root.order.add_edge(milk_process, curd_process)
root.order.add_edge(curd_process, whey_process)
root.order.add_edge(whey_process, salt_process)
root.order.add_edge(salt_process, aging_process)
root.order.add_edge(aging_process, sensory_process)
root.order.add_edge(sensory_process, packaging_process)
root.order.add_edge(packaging_process, labeling_process)
root.order.add_edge(labeling_process, storage_process)
root.order.add_edge(storage_process, logistics_process)
root.order.add_edge(logistics_process, delivery_process)
root.order.add_edge(delivery_process, feedback_process)
root.order.add_edge(feedback_process, forecast_process)
root.order.add_edge(forecast_process, provenance_process)