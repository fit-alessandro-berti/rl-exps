import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

Milk_Sourcing = Transition(label='Milk Sourcing')
Curd_Formation = Transition(label='Curd Formation')
Microbial_Test = Transition(label='Microbial Test')
Whey_Removal = Transition(label='Whey Removal')
Pressing_Cheese = Transition(label='Pressing Cheese')
Salt_Application = Transition(label='Salt Application')
Aging_Control = Transition(label='Aging Control')
Quality_Check = Transition(label='Quality Check')
Eco_Packaging = Transition(label='Eco Packaging')
Inventory_Log = Transition(label='Inventory Log')
Temp_Monitoring = Transition(label='Temp Monitoring')
Carrier_Booking = Transition(label='Carrier Booking')
Trace_Recording = Transition(label='Trace Recording')
Feedback_Review = Transition(label='Feedback Review')
Compliance_Audit = Transition(label='Compliance Audit')
Batch_Adjustment = Transition(label='Batch Adjustment')

skip = SilentTransition()
loop = OperatorPOWL(operator=Operator.LOOP, children=[Milk_Sourcing, Curd_Formation])
xor = OperatorPOWL(operator=Operator.XOR, children=[Microbial_Test, skip])
xor2 = OperatorPOWL(operator=Operator.XOR, children=[Whey_Removal, skip])
xor3 = OperatorPOWL(operator=Operator.XOR, children=[Pressing_Cheese, skip])
xor4 = OperatorPOWL(operator=Operator.XOR, children=[Salt_Application, skip])
xor5 = OperatorPOWL(operator=Operator.XOR, children=[Aging_Control, skip])
xor6 = OperatorPOWL(operator=Operator.XOR, children=[Quality_Check, skip])
xor7 = OperatorPOWL(operator=Operator.XOR, children=[Eco_Packaging, skip])
xor8 = OperatorPOWL(operator=Operator.XOR, children=[Inventory_Log, skip])
xor9 = OperatorPOWL(operator=Operator.XOR, children=[Temp_Monitoring, skip])
xor10 = OperatorPOWL(operator=Operator.XOR, children=[Carrier_Booking, skip])
xor11 = OperatorPOWL(operator=Operator.XOR, children=[Trace_Recording, skip])
xor12 = OperatorPOWL(operator=Operator.XOR, children=[Feedback_Review, skip])
xor13 = OperatorPOWL(operator=Operator.XOR, children=[Compliance_Audit, skip])
xor14 = OperatorPOWL(operator=Operator.XOR, children=[Batch_Adjustment, skip])

root = StrictPartialOrder(nodes=[loop, xor, xor2, xor3, xor4, xor5, xor6, xor7, xor8, xor9, xor10, xor11, xor12, xor13, xor14])
root.order.add_edge(loop, xor)
root.order.add_edge(xor, xor2)
root.order.add_edge(xor2, xor3)
root.order.add_edge(xor3, xor4)
root.order.add_edge(xor4, xor5)
root.order.add_edge(xor5, xor6)
root.order.add_edge(xor6, xor7)
root.order.add_edge(xor7, xor8)
root.order.add_edge(xor8, xor9)
root.order.add_edge(xor9, xor10)
root.order.add_edge(xor10, xor11)
root.order.add_edge(xor11, xor12)
root.order.add_edge(xor12, xor13)
root.order.add_edge(xor13, xor14)