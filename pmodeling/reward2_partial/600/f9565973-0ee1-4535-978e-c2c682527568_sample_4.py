import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

artifact_intake = Transition(label='Artifact Intake')
initial_survey = Transition(label='Initial Survey')
material_test = Transition(label='Material Test')
historical_check = Transition(label='Historical Check')
registry_search = Transition(label='Registry Search')
owner_interview = Transition(label='Owner Interview')
condition_report = Transition(label='Condition Report')
forgery_scan = Transition(label='Forgery Scan')
digital_tagging = Transition(label='Digital Tagging')
ledger_entry = Transition(label='Ledger Entry')
expert_review = Transition(label='Expert Review')
legal_verify = Transition(label='Legal Verify')
provenance_draft = Transition(label='Provenance Draft')
client_approval = Transition(label='Client Approval')
final_certificate = Transition(label='Final Certificate')
archive_storage = Transition(label='Archive Storage')

skip = SilentTransition()

artifact_intake_loop = OperatorPOWL(operator=Operator.LOOP, children=[artifact_intake])
initial_survey_xor = OperatorPOWL(operator=Operator.XOR, children=[initial_survey, skip])
material_test_xor = OperatorPOWL(operator=Operator.XOR, children=[material_test, skip])
historical_check_xor = OperatorPOWL(operator=Operator.XOR, children=[historical_check, skip])
registry_search_xor = OperatorPOWL(operator=Operator.XOR, children=[registry_search, skip])
owner_interview_xor = OperatorPOWL(operator=Operator.XOR, children=[owner_interview, skip])
condition_report_xor = OperatorPOWL(operator=Operator.XOR, children=[condition_report, skip])
forgery_scan_xor = OperatorPOWL(operator=Operator.XOR, children=[forgery_scan, skip])
digital_tagging_xor = OperatorPOWL(operator=Operator.XOR, children=[digital_tagging, skip])
ledger_entry_xor = OperatorPOWL(operator=Operator.XOR, children=[ledger_entry, skip])
expert_review_xor = OperatorPOWL(operator=Operator.XOR, children=[expert_review, skip])
legal_verify_xor = OperatorPOWL(operator=Operator.XOR, children=[legal_verify, skip])
provenance_draft_xor = OperatorPOWL(operator=Operator.XOR, children=[provenance_draft, skip])
client_approval_xor = OperatorPOWL(operator=Operator.XOR, children=[client_approval, skip])
final_certificate_xor = OperatorPOWL(operator=Operator.XOR, children=[final_certificate, skip])
archive_storage_xor = OperatorPOWL(operator=Operator.XOR, children=[archive_storage, skip])

root = StrictPartialOrder(nodes=[artifact_intake_loop, initial_survey_xor, material_test_xor, historical_check_xor, registry_search_xor, owner_interview_xor, condition_report_xor, forgery_scan_xor, digital_tagging_xor, ledger_entry_xor, expert_review_xor, legal_verify_xor, provenance_draft_xor, client_approval_xor, final_certificate_xor, archive_storage_xor])
root.order.add_edge(artifact_intake_loop, initial_survey_xor)
root.order.add_edge(initial_survey_xor, material_test_xor)
root.order.add_edge(material_test_xor, historical_check_xor)
root.order.add_edge(historical_check_xor, registry_search_xor)
root.order.add_edge(registry_search_xor, owner_interview_xor)
root.order.add_edge(owner_interview_xor, condition_report_xor)
root.order.add_edge(condition_report_xor, forgery_scan_xor)
root.order.add_edge(forgery_scan_xor, digital_tagging_xor)
root.order.add_edge(digital_tagging_xor, ledger_entry_xor)
root.order.add_edge(ledger_entry_xor, expert_review_xor)
root.order.add_edge(expert_review_xor, legal_verify_xor)
root.order.add_edge(legal_verify_xor, provenance_draft_xor)
root.order.add_edge(provenance_draft_xor, client_approval_xor)
root.order.add_edge(client_approval_xor, final_certificate_xor)
root.order.add_edge(final_certificate_xor, archive_storage_xor)