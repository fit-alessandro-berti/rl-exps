from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition

# Define the POWL model for the supply chain logistics process
A = Transition(label='Data Capture')
B = Transition(label='Quantum Calc')
C = Transition(label='Demand Forecast')
D = Transition(label='Inventory Check')
E = Transition(label='Route Update')
F = Transition(label='Shipment Plan')
G = Transition(label='Supplier Sync')
H = Transition(label='Contract Mod')
I = Transition(label='Blockchain Verify')
J = Transition(label='Risk Assess')
K = Transition(label='Scenario Sim')
L = Transition(label='Feedback Loop')
M = Transition(label='AI Adjust')
N = Transition(label='Waste Audit')
O = Transition(label='Report Generate')
P = Transition(label='Stakeholder Alert')
Q = Transition(label='Compliance Review')

# Define the partial order structure
root = StrictPartialOrder(nodes=[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q])
root.order.add_edge(A, B)
root.order.add_edge(B, C)
root.order.add_edge(C, D)
root.order.add_edge(D, E)
root.order.add_edge(E, F)
root.order.add_edge(F, G)
root.order.add_edge(G, H)
root.order.add_edge(H, I)
root.order.add_edge(I, J)
root.order.add_edge(J, K)
root.order.add_edge(K, L)
root.order.add_edge(L, M)
root.order.add_edge(M, N)
root.order.add_edge(N, O)
root.order.add_edge(O, P)
root.order.add_edge(P, Q)

print(root)